Theoretical Computer Science 352 (2006) 322–328
www.elsevier.com/locate/tcs
Note
On the complexity of unsigned translocation distance
Daming Zhua, Lusheng Wangb,∗
aSchool of Computer Science and Technology, Shandong University, Jinan 250100, PR China
bDepartment of Computer Science, City University of Hong Kong, Kowloon, Hong Kong
Received 4 November 2004; received in revised form 28 September 2005; accepted 28 September 2005
Communicated by A. Apostolica
Abstract
Translocation is one of the basic operations for genome rearrangement. Translocation distance is the minimum number of
translocations required to transform one genome into the other. In this paper, we show that computing the translocation distance for
unsigned genomes is NP-hard. Moreover, we show that approximating the translocation distance for unsigned genomes within ratio
1.00017 is NP-hard.
© 2005 Elsevier B.V. All rights reserved.
Keywords: Unsigned translocation; NP-hardness; Inapproximability
1. Introduction
Genome rearrangement is a common mode of molecular evolution in plants, mammals, viral, and bacteria
[1,6–9,11,14]. Although the rearrangement process is very complicated, there are three basic operations for genome
rearrangement, reversal, translocation and transposition. The reversal distance for signed genomes can be computed
in polynomial time [2,9,10], whereas computing the reversal distance for unsigned genomes was proved to be NP-hard
by Capara [4] and Max-SNP-hard by Berman and Karpinski [3].
The translocation distance computation for unsigned genomes was studied for the first time by Kececioglu and
Sankoff [12], who gave a 2-approximation algorithm. This problem for signed genomes was solved in polynomial time
by Hannenhalli [5]. The time complexity of Hannenhalli’s algorithm is O(n3). An linear time algorithm for computing
the signed distance value without the sequence of translocation operations was given in [13].An O(n2 log n) algorithm
for computing an optimal sequence of translocation operations was given in [16]. Recently, an O(n2) algorithm for
computing an optimal sequence of signed translocation operations was given in [15].
In this paper, we show that the translocation distance problem for unsigned genomes is NP-hard. This settles an open
problem in this area. We further show that approximating the unsigned translocation distance within ratio 1.00017 is
NP-hard.
∗ Corresponding author.
E-mail addresses: dmzhu@sdu.edu.cn (D. Zhu), cswangl@cityu.edu.hk (L. Wang).
0304-3975/$ - see front matter © 2005 Elsevier B.V. All rights reserved.
doi:10.1016/j.tcs.2005.09.078
D. Zhu, L. Wang / Theoretical Computer Science 352 (2006) 322–328 323
2. Signed and unsigned translocation operations
A genome is a set of chromosomes and a chromosome X = x1, x2, . . . , xp is a sequence of genes. For signed
genomes, each gene, xi , is represented as a signed integer. For unsigned genomes, each gene, xi , is represented as a
positive integer. xi and xi+1 are neighbors in X and also neighbors in the genome containing X.
A translocation acts on two chromosomes. It swaps segments between two chromosomes and results in two new chro-
mosomes. LetX = x1, . . . , xb−1, xb, . . . , xp andY = y1, . . . , yc−1, yc, . . . , yq be two signed chromosomes in a signed
genome. A prefix–prefix translocation (X, Y, b, c) produces two new chromosomes X′ = x1, . . . , xb−1, yc, . . . , yq
and Y ′ = y1, . . . , yc−1, xb, . . . , xp. A prefix–suffix translocation (X, Y, b, c) produces two new chromosomes X′ =
x1, . . . , xb−1,−yc−1, . . . ,−y1 and Y ′ = −xp, . . . ,−xb, yc, . . . , yq .
A signed chromosome X is identical to chromosome Y if either X = Y or X = YR = −yq,−yq−1, . . . ,−y1.
Genome A is identical to genome B if and only if the sets of chromosomes for A and B are the same. The translocation
distance between two signed genomesA andB, denoted as d(A,B), is the minimum number of translocations required
to transform A into B.
Translocation for unsigned genomes follows from the signed case without caring about the direction of genes.
Let X = x1, . . . , xb−1, xb, . . . , xp and Y = y1, . . . , yc−1, yc, . . . , yq be two unsigned chromosomes in an unsigned
genome. A prefix–prefix translocation (X, Y, b, c) produces two new chromosomes X′ = x1, . . . , xb−1, yc, . . . , yq
and Y ′ = y1, . . . , yc−1, xb, . . . , xp. A prefix–suffix translocation (X, Y, b, c) produces two new chromosomes X′ =
x1, . . . , xb−1, yc−1, . . . , y1 and Y ′ = xp, . . . , xb, yc, . . . , yq . The translocation  transforming genome A into A1 is
written as A ·  = A1.
An unsigned chromosome X is identical to chromosome Y if either X = Y or YR = yq, yq−1, . . . , y1. Genome A
is identical to genome B if and only if the sets of chromosomes for A and B are the same. The translocation distance
between two unsigned genomes A and B, denoted as d(A,B), is the minimum number of translocations required to
transform A into B.
2.1. Computation of the signed translocation distance
For a signed genome A, we will construct a graph GA. For each chromosome X = x1, x2, . . . , xp in genome A, we
have 2p vertices in GA, two vertices xhi , x
t
i for each gene xi in X. The 2p vertices are arranged in a linear order from
left to right as l(x1)r(x1)l(x2)r(x2) . . . l(xp)r(xp), where if xi is a positive integer, then l(xi) = xti and r(xi) = xhi ;
and if xi is a negative integer, then l(xi) = xhi and r(xi) = xti . For each i ∈ {1, 2, . . . , p − 1}, there is a black edge
(r(xi), l(xi+1)), where r(xi) and l(xi+1) are called neighbors in GA.
Given two signed genomes A and B, we can construct the cycle graph GAB from GA by adding a gray edge to every
pair of vertices u and v, where u and v are neighbors in GB . Each vertex is in a unique cycle in GAB . Moreover, each
black edge in the cycle is followed by a gray edge and vice versa. In this paper, the so-called cycle always implies this
kind and is called alternate-color cycle. A cycle is long if it contains at least two black edges. Otherwise, the cycle is
short. If A = B, then all cycles in GAB are short.
Let X = x1, x2, . . . , xp be a chromosome in A. A sub-permutation (SP) is an interval xi, xi+1, . . . , xi+l in
X such that there is another interval of the same length yk, yk+1, . . . , yk+l in a chromosome Y of B satisfying
{|xi |, |xi+1|, . . . , |xi+l |} = {|yk|, |yk+1|, . . . , |yk+l |},yk = xi ,yk+l = xi+l , and,xi+1, . . . , xi+l−1 = yk+1, . . . , yk+l−1.
A minimal sub-permutation, minSP briefly, is a SP not containing any other SP. For example, let A = {X1 =
+1,−3,+2,+4,+5,−8,+6; X2 = +7,+9}, B = {Y1 = +1,+2,+3,+4,+5,+6; Y2 = +7,+8,+9}. The inter-
val +1,−3,+2,+4 in X1 of A is a minSP. The interval +1,−3,+2,+4,+5 is not a minSP but a SP. The cycle graph
is presented in Fig. 1.
  
          
7
1 –3 2 4 5 8 6
9
Fig. 1. The cycle graph GAB and the sub-permutation 1,−3,2,4.
324 D. Zhu, L. Wang / Theoretical Computer Science 352 (2006) 322–328
            
1 35 +1 +3+5
+4 +6+2
+1 +3–5
+4 +6+24 62(a) (b) (c)
Fig. 2. The breakpoint graph and its two cycle decompositions. (a) The breakpoint graph BAB , (b) the cycle graph G A1 B and (c) the cycle graph
G A2 B .
Let cAB be the number of cycles in GAB . The following theorem gives a very useful bound for translocation distance
between two signed genomes.
Theorem 1. The translocation distance between two signed genomes A and B satisfies d(A,B)n − m − cAB . If
there is no sub-permutation for A and B, the translocation distance is d(A,B) = n−m− cAB , where n is the number
of genes and m is the number of chromosomes in the given genomes.
Proof. A translocation increases at most one cycle for GAB . If A = B, then GAB has n − m cycles. Thus it requires
at least n − m − cAB translocations to transform A into B. That is d(A,B)n − m − cAB . If there is no SP for A and
B, there is no minSP. Theorem 12 in [5] shows that if there is no minSP for A and B = A, there exists a translocation
to increase a cycle for GAB without producing any new minSPs. This leads to d(A,B) = n − m − cAB . 
2.2. Breakpoint graph for unsigned genomes
Given two unsigned genomes A and B, the breakpoint graph BAB is constructed as follows: (1) the vertex set is
the set of genes in A in the linear order as in the chromosomes; (2) set a black edge between any two vertices that are
neighbors in A and set a gray edge between any two vertices that are neighbors in B. A nodal vertex is the vertex for an
end gene in a chromosome. Every nodal vertex in BAB is incident to one black edge and one gray edge.Any non-nodal
vertex is incident to two black and two gray edges.
Unlike cycle graphs, breakpoint graphs do not admit unique cycle decomposition. For each non-nodal vertex, there
are two ways to pair the two black and two gray edges incident to the vertex. Once the choice for the paring of the two
black and two gray edges is fixed, we have a decomposition of BAB into alternate-color cycles. Any alternate-color
cycle decomposition gives a direction of every gene in genomes A and B.
For example, let A = {1, 5, 3; 4, 2, 6} and B = {1, 2, 3; 4, 5, 6}, both containing two chromosomes separated by
a semicolon. The breakpoint graph BAB is presented in Fig. 2(a). Assign every gene in B to positive direction to get
B = {+1,+2,+3;+4,+5,+6}. If A1 = {+1,+5,+3;+4,+2,+6}, the corresponding cycle graph G A1 B is as Fig.
2(b) and d( A1, B) = 2. If A2 = {+1,−5,+3;+4,+2,+6}, the corresponding graph G A2 B is as Fig. 2(c). In this
case, d( A2, B) = 3.
Let  be a translocation that transforms genome A into A1. There exists a translocation 1 transforming A1 into A.
Translocation 1 is called the counter translocation of  and 1 is denoted as . Let spin(A) be the set of all signed
genomes obtained from A by assigning a direction to each gene in A. The following theorem gives the relationship
between the unsigned and the signed translocation distances.
Theorem 2. Let A and B be two unsigned genomes. B is the signed genome obtained from B by setting the direction
of every gene as positive. Then, d(A,B) = min A∈spin(A) d( A, B).
Proof. Let A ∈ spin(A), and the sequence of translocations 1, 2, . . . , t transform A into B, A ·1 ·2 · . . . ·t = B.
The same sequence of translocations must transform A into B, i.e., A · 1 · 2 · . . . · t = B. Thus d(A,B)d( A, B).
Assume there is a sequence of translocations 1, 2, . . . , r to transform A into B. Consider the translocation sequence
r , r−1, . . . , 1 transforming B into A: B · r · . . . · 1 = A. A is a signed genome of A and A · 1 · 2 · . . . · r = B,
which means d(A,B) min A∈spin(A) d( A, B). Thus d(A,B) = min A∈spin(A) d( A, B). 
D. Zhu, L. Wang / Theoretical Computer Science 352 (2006) 322–328 325
Formally, the unsigned translocation distance problem(UT) is given as follows:
Instance. Two unsigned genomes A and B.
Question. Find a sequence of translocations 1, 2, . . . , k such that A · 1 · 2 · . . . · k = B and the number of
translocations k is minimized.
3. NP-hardness proof
Caprara first suggested the problem of maximum alternate-color cycle decomposition for unsigned
chromosomes(Max-Acd). The problem is given as follows:
Instance. Unsigned chromosomes X and Y , BXY as the breakpoint graph with respect to X and Y .
Question. Find an alternate-color cycle decomposition of BXY such that the number of cycles is maximized.
This problem was proved to be NP-hard in [4]. Given two unsigned genomes A and B. Consider the cycle decompo-
sition of BAB . If vertex x is split into xt and xh by a cycle decomposition of BAB , each of xt and xh must be uniquely
in one alternate-color cycle. Vertex x is used by cycle C if xt or xh is in C. Every cycle uses a vertex at most twice in
a cycle decomposition of BAB . A gray edge is refer to as inside X if its two ends are both in X. A gray edge spans X
and Y if one of its end is in X and the other is in Y .
Theorem 3. The unsigned translocation distance problem is NP-Hard.
Proof. In fact, it is enough to prove that computing the unsigned translocation distance value is NP-hard. The reduction
is from the Max-Acd problem. Let X and Y be the two unsigned chromosomes. Without loss of generality, let X =
g1, g2, . . . , gn−1, gn and Y = 1, 2, . . . , n, where {g1, g2, . . . , gn} = {1, 2, . . . , n}, g1 = 1, gn = n. We construct two
genomes A = {X1, X2} and B = {Y1, Y2} from X and Y .
There are 4n− 3+ (n− 2)d genes in both genomes A and B, where genes in {1, 2, . . . , n} have been used in X and
Y . The positive integer d is used to control the shape of the long cycles in the decomposition of BAB . Its value will be
discussed in Lemma 4. Chromosome X1 of genome A is constructed by inserting n − 1 new genes into the midst of
adjacent pairs of genes in chromosome X.
X1 = 1, t1,1, g2, t1,2, . . . , gn−1, t1,n−1, n, (1)
where, t1,k = 3n − 2 + k, 1kn − 1.
X2 contains two types of new genes, denoted as t2,l and si , respectively.
X2 = t2,1, t2,2, s1, s2, . . . , sd ,
t2,3, t2,4, sd+1, . . . . . . , s2d ,
...
t2,2(n−2)−1, t2,2(n−2), s(n−3)d+1, . . . , s(n−2)d ,
t2,2(n−1)−1, t2,2(n−1), (2)
where t2,l = n + l, 1 l2(n − 1), si = 4n − 3 + i, and 1 i(n − 2)d.
Now construct genome B = {Y1, Y2}. Let t1,k , t2,l , and si be the same integers as used in A. Chromosome Y1 is
identical to Y , Y1 = 1, 2, . . . , n − 1, n. Y2 is constructed from X2 by inserting t1,k into the midst of t2,2k−1 and t2,2k
in X2.
Y2 = t2,1, t1,1, t2,2, s1, s2, . . . , sd ,
t2,3, t1,2, t2,4, sd+1, . . . . . . , s2d ,
...
326 D. Zhu, L. Wang / Theoretical Computer Science 352 (2006) 322–328
 1  4  3  5  2  6
 1  17  4  18  3  19  5  20  2  21  6
 7  8  22  9  10  23  11  12  24  13  14  25  15  16
(a)
(b)
Fig. 3. The breakpoint graphs with respect to chromosomes X and Y and genomes A and B. (a) The breakpoint graph GXY and (b) the breakpoint
graph BAB .
gj gj+1 gj
t1,j t1,j –1
gj+1
t2,2j – 3 t2,2j – 2t2,2j – 1 t2,2j
gj – 1 gj gj – 1 gj
(a) (b)
Fig. 4. Two cases for replacing (u2i−1,u2i ) by path P2i−1,2i . (a) Replacement of (gj , gj+1) and (b) replacement of (gj , gj−1).
t2,2(n−2)−1, t1,n−2, t2,2(n−2), s(n−3)d+1, . . . , s(n−2)d ,
t2,2(n−1)−1, t1,n−1, t2,2(n−1). (3)
Example. Suppose X = 1, 4, 3, 5, 2, 6 and Y = 1, 2, 3, 4, 5, 6. Then the breakpoint graph GXY is shown in Fig. 3(a).
For simplicity, set d = 1. The two genomes are constructed as A = {X1 = 1, 17, 4, 18, 3, 19, 5, 20, 2, 21, 6; X2 =
7, 8, 22, 9, 10, 23, 11, 12, 24, 13, 14, 25, 15, 16}, and B = {Y1 = 1, 2, 3, 4, 5, 6; Y2 = 7, 17, 8, 22, 9, 18, 10, 23, 11,
19, 12, 24, 13, 20, 14, 25, 15, 21, 16}. The corresponding breakpoint graph BAB are shown in Fig. 3(b).
Lemmas 4 and 5 will be used to clarify the corresponding relationships between maximum cycle decomposition of
GXY and the unsigned translocation distance between genomes A and B.
Lemma 4. Assume that dn − 1. There exists a decomposition of GXY into J alternate-color cycles if and only if
there exists a decomposition of BAB into not less than (n − 2)(d + 1) + J alternate-color cycles.
Proof. (→) There are always even number of vertices in any cycle. Thus every cycle can be represented by its vertex
list: u1, u2, . . . , u2k−1, u2k , where (u2i−1, u2i ) is a black edge and (u2i , u2i+1) is a gray edge, 1 ik, u2k+1 = u1.
Assume there is a decomposition of GXY into J alternate-color cycles. For each of the J cycles C = u1, u2, . . . ,
u2k−1, u2k , if u2i−1 = gj , then u2i = gj+1 or u2i = gj−1. A new cycle C′ in BAB can be obtained by replacing each
black edge (u2i−1, u2i ) with path P2i−1,2i , where,
P2i−1,2i =
{
gj , t1,j , t2,2j−1, t2,2j , t1,j , gj+1 if u2i−1 = gj , u2i = gj+1,
gj , t1,j−1, t2,2j−3, t2,2j−2, t1,j−1, gj−1 if u2i−1 = gj , u2i = gj−1. (4)
Fig. 4 describes the method of the replacement. By the replacement, we get J long cycles from BAB . The remaining
edges inBAB can form (n−2)(d+1) short cycles. ThusBAB can be decomposed into (n−2)(d+1)+J alternate-color
cycles.
(←) Let C be the set of (n − 2)(d + 1) + J cycles decomposed from BAB . Only the edges (t2,2j , s(j−1)d+1), . . . ,
(sjd−1, sjd), (sjd , t2,2j+1) for j ∈ {1, . . . , n − 2} can form short cycles. Thus there are at most (n − 2)(d + 1) short
D. Zhu, L. Wang / Theoretical Computer Science 352 (2006) 322–328 327
cycles in C. An alternate-color cycle using a vertex in X1 must contain at least two black edges in X1 and at least two
gray edges spanning X1 and X2. Thus there are at most n − 1 cycles using vertices in X1. Since dn − 1, the (d + 2)
consecutive vertices in X2, t2,2j , s(j−1)d+1, . . . , sjd , t2,2j+1, cannot be involved in one cycle in C for 1jn − 2.
Otherwise, the number of short cycles will be reduced by d + 1n and the total number of cycles cannot be greater
than
(n − 3)(d + 1) + n − 1(n − 2)(d + 1) − 1 < (n − 2)(d + 1) + J. (5)
Thus, if a cycle in C contains one of the gray edges (t1,j , t2,2j−1) and (t1,j , t2,2j ), it must contain both of them.
Moreover, if a long cycle in C uses two consecutive vertices in the vertex sequence t2,2j , s(j−1)d+1, . . . , sjd , t2,2j+1, it
must contain both of the black and the gray edges between the two vertices. Thus we can re-decompose the long cycle
to increase the number of short cycles. Therefore, we can assume that all the (n − 2)(d + 1) short cycles are in C.
Any long cycle decomposed from BAB cannot only contain gray edges inside X1. Thus each long cycle in C must
take the shape P1,2, . . . , P2k−1,2k , where P2i−1,2i = u2i−1, t1,j , t2,2j−1, t2,2j , t1,j , u2i , and {u2i−1, u2i} = {gj , gj+1}.
Replacing the path P2i−1,2i with black edge (u2i−1, u2i ), we obtain an alternate-color cycle in GXY . Thus GXY can be
decomposed into J alternate-color cycles. 
Lemma 5. There exists a decomposition of BAB into (n − 2)(d + 1) + J alternate-color cycles if and only if
d(A,B)3n − 3 − J .
Proof. (→) If BAB can be decomposed into (n − 2)(d + 1) + J cycles, there must exist a decomposition of BAB
into at least (n − 2)(d + 1) + J cycles such that every long cycle has a gray edge spanning X1 and X2. This is
because a cycle containing black edges inside X1 must contain a gray edge spanning X1 and X2 and thus must be
long. Moreover, a long cycle only containing edges inside X2 can be re-decomposed into multiple short cycles. Thus
every long cycle decomposed from BAB must have a gray edge spanning X1 and X2. This implies that there are no
sub permutations for A and B, where A and B are the signed genomes obtained from the cycle decomposition. Thus,
d(A,B)d( A, B) = 4n − 3 + (n − 2)d − 2 − ((n − 2)(d + 1) + J ) = 3n − 3 − J by Theorem 1.
(←) Let d(A,B)3n − 3 − J . It follows that there exist directed genomes A and B obtained from A and B such
that d( A, B)3n−3−J . Theorem 1 implies d( A, B)4n−3+ (n−2)d −2− c A B . Thus c A B(n−2)(d +1)+J .
This ensures that the maximum number of alternate-color cycles decomposed from BAB is not less than (n− 2)(d + 1)
+ J . 
By Lemmas 4 and 5, we have a reduction such that there is a decomposition of GXY into J alternate-color cycles if
and only if there exist at most 3n − 3 − J translocations to transform A into B.
If the instance of Max-Acd has n genes, then the corresponding instance of unsigned translocation distance has
4n− 3+ (n− 2)d genes. Setting d = n− 1, the reduction is polynomial. This completes the proof of Theorem 3. 
4. Inapproximability proof
In this section, we study the hardness of approximating the unsigned translocation distance. Consider the breakpoint
graph decomposition (BGD) problem [3]. The instance of BGD is the same as Max-Acd, but the objective of BGD
is to minimize cost (C) = b − |C|, where b is the number of black edges of the breakpoint graph and C is the set of
alternate-color cycles. In [3], Berman and Karpinski proved.
Lemma 6. For any ε > 0, it is NP-hard to decide if an instance of BGD with 2240p breakpoints has the minimum
cost of alternate-color cycle decomposition below (1236 + )p or above (1237 − )p.
Now we use the reduction of Theorem 3 to show that approximating the unsigned translocation distance within a
factor 1.00017 is difficult.
Theorem 7. For any  > 0, it is NP-hard to decide if an instance of the unsigned translocation distance problem can
be approximated within factor 5717/5716 − , i.e., 1.00017 − .
328 D. Zhu, L. Wang / Theoretical Computer Science 352 (2006) 322–328
Proof. The reduction of Theorem 3 implies that an instance of Max-Acd with n vertices has the alternate-color cycles
of maximum number J , if and only if the translocation distance of the corresponding UT instance is 3n − 3 − J .
Consider the reduction from the Max-Acd instance with n = 2240p + 1 vertices or 2240p breakpoints. Recall
that the Max-Acd instance must be an instance of BGD. The constructed instance of UT, genomes A and B, have
4(2240p + 1) − 3 + (2240p − 1)d vertices or genes. For d2240p, the objective function of UT is d(A,B) =
3(2240p + 1) − 3 − |C| = 4480p + cost (C), where cost (C) is the cost of the alternate-color cycle decomposition
of BGD instance. From Lemma 6, it is NP-hard to decide if an instance of UT has the translocation distance above
(5717 − )p or below (5716 + )p. 
Acknowledgments
Daming Zhu is supported by NSFC:60273032. LushengWang is fully supported by a grant from the Research Grants
Council of the Hong Kong Special Administrative Region, China [Project no. CityU 1070/02E]. We thank the referees
for their helpful suggestions.
References
[1] V. Bafna, P. Pevzner, Sorting by reversals: genome rearrangements in plant organelles and evolutionary history of x chromosome, Mole. Biol.
Evol. 12 (1995) 239–246.
[2] V. Bafna, P. Pevzner, Genome rearrangement and sorting by reversals, SIAM J. Comput. 25 (2) (1996) 272–289.
[3] P. Berman, M. Karpinski, On some tighter inapproximability results, ECCC Report No. 65, University of Trier, 1998.
[4] A. Caprara, Sorting by reversal is difficult, Proc. First Annu. Internat. Conf. on Computational Molecular Biology 1997, pp. 75–83.
[5] S. Hannenhalli, Polynomial time algorithm for computing translocation distance between genomes, Discrete Appl. Math. 71 (1996) 137–151.
[6] S. Hannenhalli, C. Chappey, E.V. Koonin, P. Pevzner, Genome sequence comparison and scenarios for gene rearrangements: a test case,
Genomics 30 (1995) 299–311.
[7] S. Hannenhalli, P. Pevzner, Towards a computational theory of genome rearrangement, Lecture Notes in Comput. Sci. 1000 (1995) 184–202.
[8] S. Hannenhalli, P. Pevzner, To cut or not to cut (applications of comparative physical maps in molecular evolution), Proc. Seventh Annu.
ACM-SIAM Symp. on Discrete Algorithms, January 1996, pp. 304–313.
[9] S. Hannenhalli, P. Pevzner, Transforming cabbage into turnip: polynomial algorithm for sorting signed permutations by reversals, J. ACM 46
(1) (1999) 1–27.
[10] H. Kaplan, R. Shamir, R.E. Tarjan, Faster and simpler algorithm for sorting signed permutations by reversals, Proc. EighthACM-SIAM Symp.
on Discrete Algorithms, ACM Press, NewYork, 1997.
[11] J. Kececioglu, R. Ravi, Of mice and men: algorithms for evolutionary distances between genomes with translocation, Proc. Eighth Annu.
ACM-SIAM Symp. on Discrete Algorithms, 1995, pp. 604–613.
[12] J. Kececioglu, D. Sankoff, Exact and approximation algorithms for the inversion distance between two permutations, Proc. FourthAnnu. Symp.
on Combinatorial Pattern Matching, Lecture Notes in Computer Science, Vol. 684, Springer, Berlin, 1993, pp. 87–105.
[13] G. Li, X. Qi, X.Wang, B. Zhu,A linear time algorithm for computing translocation distance between signed genomes, Proc. CPM’2004, Lecture
Notes in Computer Science, Vol. 3109, Springer, Berlin, 2004.
[14] D. Sankoff, G. Leduc, N. Antoine, B. Paquine, B.F. Lang, R. Cedergen, Gene order comparisons for phylogenetic inference: evolution of the
mitochondrial genome, Proc. Natl. Acad. Sci. USA 89 (1992) 6575–6579.
[15] L.S. Wang, D.M. Zhu, X.W. Liu, S.H. Ma, An O(n2) algorithm for signed translocation, J. Comput. Syst. Sci. 70 (2005) 284–299.
[16] D.M. Zhu, S.H.Ma,An improved polynomial time algorithm for translocation sorting problems, J. Comput. 25 (2) (2002) 189–196 (in Chinese).
