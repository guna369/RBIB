Termination of String Rewriting with Matrix Interpretations
Dieter Hofbauer, Kassel Johannes Waldmann, HTWK Leipzig
RTA, Seattle, August 2006 – p.1/14

Zantema’s Problem : a2b2 → b3a3

1 100 0 1 000 0

a

=

 

0 0

010 100

0 0

 

,

b

=

 

0 0

000 001

0 0

 

0 200 0 0 210 1

0 000 1

0 000 1

a2b2 =

b3a3 =

1 2 1 0 1 1 2 1 0 0 0 0 0 0 1 

0 0

0 2

000 1 0 1

−

0 0

0 2

0 0

00 0 1

=

0 0

0 0

0 1

0 0

0 0



0 4 2 0 2 0 1 2 0 2 0 3 0 0 0 

00001

00001

0000 0

termination follows since all entries are ≥ 0

and marked entries are ≥ 1 .

RTA, Seattle, August 2006 – p.2/14

Ring Interpretations
homomorphism: Σ∗ → ordered ring (D, +, ·, >) • multiplication (⇒ concatenation) • addition/subtraction (⇒ rule application)
For step xly →R xry, i(xly) − i(xry) = i(x) · i(l) − i(r) · i(y). Proof obligation for termination of system R:
i(Σ∗) · i(R) · i(Σ∗) ∈ P
. . . where (D, >) well-founded, P := {x | x > 0}, i(R) := {i(l) − i(r) | (l → r) ∈ R} RTA, Seattle, August 2006 – p.3/14

Admissable Differences
Given a set A = i(Σ) of positive ring elements, deﬁne core(A) := {d | A∗ · d · A∗ ⊆ P }. Deﬁnition: i : Σ∗ → D is an A-interpretation for R iff i(Σ) ⊆ A and i(R) ⊆ core(A). Theorem: For rewriting systems R and S over Σ: if i is A-interpretation for R with i(S) ⊆ P ∪ {0}, then R terminates relative to S.
RTA, Seattle, August 2006 – p.4/14

Illustration of Theorem

use M := {m | ∀i∃j : mi,j > 0}. (in each row, at least one positive entry). Then core(M ) = M .

R = {aa → aba}, S = {b → bb}.

M -interpretation i : a →

01 11

,b →

10 10

i(aa → aba) =

11 12

−

01 02

=

10 10

i(b → bb) =

10 10

−

10 10

=0

R terminates relative to S.

RTA, Seattle, August 2006 – p.5/14

More interesting matrix shapes

E := {m | ∀i : mi,i > 0}. Then core(E) = P .

∗+ ∗∗

⊆ core

+∗ ∗+

also works for subsets of indices:

if B =

A∗ ∗∗

, then

core(A) ∗ ∗∗

⊆ core(B).

proof of a2b2 → b3a3 uses

· ··· + 

 + ··· · 

 ... . . . ...  ⊆ core  ... . . . ... 

···· ·

0 ··· +

RTA, Seattle, August 2006 – p.6/14

Performance of Matrix Tools
(percentage of YES in 2006 SRS competition) • MultumNonMulta (Dieter Hofbauer): uses only the matrix method: 51 % • Matchbox/Satelite (J. W.): labelling, matrices, RFC match-bounds: 68 % • Torpa (Hans Zantema): various techniques,
including 3 × 3 matrices: 75 %
• Jambox (Jörg Endrullis):
≈ Matchbox + dependency pairs: 94 %
RTA, Seattle, August 2006 – p.7/14

Implementation (1)

random guesses or complete enumeration:

0∗+

1∗∗

Torpa uses matrix shape 0 ∗ ∗ ⊆ core 0 ∗ ∗

00 0

001

with ∗ ∈ {0, 1, 4}, in 36% of its proofs, e.g. z007:

TORPA 1.6 is applied to a b -> b a , b a -> a a c b ,

[A] Choose interpretation in NxN,

order : (x,y) > (x’,y’) <==> x > x’ & y >= y’ a : lambda (x,y) . (x+y,4y)

b : lambda (x,y) . (x,4y+1) c : lambda (x,y) . (x,0)

remove: a b -> b a

RTA, Seattle, August 2006 – p.8/14

Implementation (2)

MultumNonMulta:

GNU Linear Programming Kit for shape

1∗ 01

and “sophisticated guesses” for larger dimensions,

e. g. r10: {ba2b → a4, ab2a → b4}/{b → b3}

a: | 1 0 1 0 0 0 0 0 0 0 0 0 0 0 | |01000000000000| |00000000000000| |00000000000000| |01000000100000| |00000010000000| |00000001000000| |00100000000000| |00000000010000| |00000000001000| |00000000000100| |00000000000000| |00000000000000| |00000100000000|

b: | 1 0 0 0 0 0 0 0 1 0 0 0 0 0 | |01000000000000| |00010100000000| |00001000000000| |00000100000000| |00000000000000| |00000000000000| |01000000000101| |00000000000000| |00000000000000| |00101000000000| |00000000100010| |00000000000001| |00000000100000|

(found in 250 seconds)

RTA, Seattle, August 2006 – p.9/14

Implementation (3)
• ﬁx dimension, say 5. ⇒ constraint system with |Σ| · d2 unknowns (entries in interpretation) and |R| · d2 constraints (entries in differences)
• ﬁx maximal value for entries, say 7.
⇒ ﬁnite domain constraint system • represent unknowns in binary ⇒ boolean
satisﬁability problem, (15.000 variables, 90.000
clauses, 300.000 literals) ⇒ solve by SAT
solver (SateliteGTI) (z001 takes 7 seconds)
• Jambox: linear programming + SAT solving,
Matchbox: likewise, but . . .
RTA, Seattle, August 2006 – p.10/14

Implementation (4)
. . . Matchbox uses only one bit per matrix entry
(computation in {0, 1} ⊂ N, so 1 + 1 is “forbidden”)
RTA, Seattle, August 2006 – p.11/14

Limits (I): Growth
Entries in powers of a ﬁxed matrix are bounded by an exponential function of the exponent. There can be no strictly monotone matrix interpretation for a rewriting system with longer than exponential derivations.
But there could be matrix proof by step-wise removal of rules. It cannot, for systems with long derivations where each rule occurs (roughly) equally often,
e.g. {ab → bca, cb → bbc} (z018, z020)
RTA, Seattle, August 2006 – p.12/14

Limits (II): Dimension

Matrix rings obey certain polynomial identities, e.g.

• dim 1, [A, B] = 0. No one-dimensional termination proof for {ab → ba}
• dim 2, [[A, B]2, C] = 0. No 2-dim proof for
{abcbc → cbcba, acbcb → bcbca, bccba → abccb, cbbca → acbbc}.

(Notation uses commutator [A, B] := AB − BA)
Consider SRS hierarchy deﬁned by “minimal matrix proof dimension”:

• is every level inhabited? • what levels are decidable?

RTA, Seattle, August 2006 – p.13/14

Zantema’s “other” Problem

{a2 → bc, b2 → ac, c2 → ab} = RTALOOP 104 =
z086 , solved by strictly monotone interpretation

a= b=

c=

1 0 0 3 1  1 0 2 0 0  1 0 0 1 1

00111

00100

00113

 

0 0

2 0

0 0

1 0

0 0

 

,

  

00001

0 0 0

0 0 0

2 0 0

1 0 0

2 0 1

  

,

 

0 0

0 0

0 2

1 0

0 0

 

00001

This interpretation grows exponentially (see ).
Exact complexity of z086 is open.
suggest RTALOOP 104′: is it polynomial?
RTA, Seattle, August 2006 – p.14/14

