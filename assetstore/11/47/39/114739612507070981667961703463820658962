INSTITUT NATIONAL DE RECHERCHE EN INFORMATIQUE ET EN AUTOMATIQUE
On Semi-Completeness of Term Rewriting Systems
Bernhard Gramlich
N ˚ 3327
De´cembre 1997
THE` ME 2
apport de recherche

ISSN 0249-6399

On Semi-Completeness of Term Rewriting Systems
Bernhard Gramlich
Theme 2 | Genie logiciel et calcul symbolique Projet PROTHEO
Rapport de recherche n 3327 | Decembre 1997 | 11 pages
Abstract: We investigate the question whether semi-completeness, i.e., weak termination
plus con uence, of term rewriting systems is preserved under the normalization of right-hand sides. We give a simple counterexample showing that in general this transformation neither preserves weak termination nor (local) con uence. Moreover we present two conditions which are su cient for the preservation of semi-completeness. In particular, we show that (almost) orthogonal systems enjoy this preservation property.
Key-words: Theory of Computation, term rewriting, con uence, termination, semi-
completeness.
(Resume : tsvp) This work was supported by a Marie Curie Research Fellowship of the European Community under contract No. ERBFMBICT961235.
Unite´ de recherche INRIA Lorraine Technopoˆle de Nancy-Brabois, Campus scientiﬁque, 615 rue de Jardin Botanique, BP 101, 54600 VILLERS LE` S NANCY (France) Te´le´phone : (33) 83 59 30 30 – Te´le´copie : (33) 83 27 83 19 Antenne de Metz, technopoˆle de Metz 2000, 4 rue Marconi, 55070 METZ Te´le´phone : (33) 87 20 35 00 – Te´le´copie : (33) 87 76 39 77

Sur la semi-completude de systemes de reecriture
Resume : Nous etudions le probleme de savoir si la semi-completude, c'est-a-dire, la
terminaison faible et la con uence, de systemes de reecriture est preservee par la normalisation des membres droits. Nous donnons un contre-exemple simple qui montre qu'en general cette transformation ne preserve ni la terminaison faible, ni la con uence (locale). Puis nous proposons deux conditions su santes permettant de preserver la semi-completude. En particulier, nous demontrons que les systemes (presque) orthogonaux possedent cette propriete de preservation.
Mots-cle : Theorie du calcul, reecriture, con uence, terminaison, semi-completude.

On Semi-Completeness of Term Rewriting Systems

3

1 Introduction

We assume familiarity with the basic no(ta)tions, terminology and theory of term rewriting

(cf. e.g. DJ90], Klo92]) but recall some no(ta)tions for the sake of readability. The set of

terms over some given signature F and some (disjoint) countably in nite set V of variables

is denoted by T (F; V). A term rewriting system (TRS) is a pair (F; R) consisting of a

signature F and a set R of rewrite rules over F, i.e., pairs (l; r) | also denoted by l ! r |

with l; r 2 T (F; V). Here we require that l is not a variable, and that all variables of r occur

in l. Instead of (F; R) we also write R if F is clear from the context or irrelevant. The rewrite

relation ! induced by R (and R itself) is said to be con con uent if ! ! , strongly con uent if

uent, if !

! !=

! (!=

, locally denotes the

re exive closure of !). ! (and R) is (strongly) terminating or strongly normalizing if there

is no in nite normalizing )

reduction sequence if every term s has

s1 ! s2 ! s3 ! : : a normal form, i.e.,

:. if

It is s!

weakly terminating (or weakly s0 with s0 irreducible. A term

s is said to be weakly (R-)terminating if it has an (R-) normal form, and (R-)terminating

if all reduction sequences issuing from s are nite. A TRS is complete or convergent if it is

con uent and terminating, and semi-complete if it is con uent and weakly terminating. If

a if

term s it is a

has a redex,

unique i.e., an

R-normal instance l

form the latter is of the left-hand

dsiedneotoefdsobmy es#ruRl.e

Al !terrm.1

is

root-reducible

It is well-known that any complete TRS R can be simpli ed into an irreducible, complete

TRS Rirr which induces the same equational theory ( Met83]). For instance, this can be

done by rst normalizing all right-hand sides, and then omitting all rules rules with a left-

hand side that is reducible by the remaining rules (cf. e.g. Klo92]):

(a) R# := fl ! r#R j l ! r 2 Rg (right-normalization). (b) Rruirlers):=.2 fl ! r 2 R# j l is (R#nfl ! rg)-irreducibleg (deletion of left-reducible

ItKfhneRuotrhiies-sBccoeonmidnpicxliedtleeik:teh$ceonRmR=pl#e$taiosRn#wpe=rllo$caesdRRuirrrier.sr

are also complete, and their induced equational These properties are usually exploited in typical for equational speci cations ( KB70]).

Right-normalization, i.e., step (a) above, is also well-de ned for semi-complete TRSs,

because for such systems every term has a unique normal form. Hence, it is quite natural

to ask the following basic questions due to Kahrs ( Kah95]):

(1) Does right-normalization preserve semi-completeness?

(2) Does right-normalization of semi-complete TRSs preserve the equational theory?

As mentioned by Kahrs in Kah95] it is easy to see that the preservation of weak termination would be su cient to settle both questions in the positive (see Lemma 2.1 below). Moreover,

1More formally, a redex (in some term s) can be de ned by the pair (p; l ! r) indicating that the subterm

s=p2=Nolte

(for some ) in s is to that as usual equality

be of

rewritten or rewrite rules

contracted into r yielding the result s p is interpreted as equality modulo variable

r ]. renamings!

RR n 3327

4 Bernhard Gramlich

if the answer to question (2) is negative, then one could enforce preservation of the equational theory by `adding the potentially missing part', i.e., by de ning

R#ext := R# fr ! r#R j l ! r 2 R; r 6= r#Rg :

If R is systems

semi-complete, the have the same sets

equational theories of R of normal forms, but the

qaunedstiRon#ext

clearly

coincide

and

both

(1a) Does semi-completeness of R imply semi-completeness of R#ext? remains non-trivial ( Kah95]). In view of the above discussion about complete systems we add another question:

(3) Does deletion of left-reducible rules preserve semi-completeness and the equational theory of right-normalized semi-complete TRSs?

Question (1) is certainly the most interesting one from a computational point of view. It is closely related to the general question which reduction strategies are normalizing for a given TRS. In many examples right-normalization of a semi-complete, but non-terminating TRS yields again a semi-complete or even complete system. Somehow surprisingly, we will show in Section 2 that in general both weak termination and (even local) con uence may get lost when right-normalizing semi-complete systems. Yet, in Section 3 we shall identify two classes of TRSs for which semi-completeness is preserved under right-normalization. Questions (1a) and (3) will also be settled in the negative. However, (2) remains open. We shall exhibit necessary properties of potentially existing counterexamples for (2).

2 A Simple Counterexample

Subsequently, we will use the notations introduced above. In particular, R# will always denote the right-normalized version of a semi-complete TRS R. Let us start with some simple facts about right-normalization.

Lemma 2.1 Let R be semi-complete. Then the following properties hold:

(1) A term is R-reducible i it is R#-reducible.

(2) If R# is weakly terminating, Proof$: RS#t.raightforward.

then

R#

is

con

uent

(hence

semi-complete)

and

$R

=

The following answers question (1) in the negative.
Theorem 2.2 There exists a semi-complete TRS R such that R# is neither weakly termi-
nating nor locally con uent.

INRIA

On Semi-Completeness of Term Rewriting Systems

5

h(f(a)) - h(g(a)) - c

?
h(f (b))

-

?
h(g(b))

h(f(a)) - h(g(a))

?
h(f (b))

-

?
h(g(b))

-c

Figure 1: reductions in R (left) and in R# (right)

Proof: Consider the TRS

8>>< R = >:

a!b g(b) ! f(a) h(f(x)) ! h(g(x)) h(g(a)) ! c

9>>= >;

Obviously, right-normalization yields

R#

=

8>< >>:

a
g(b) h(f (x)) h(g(a))

! ! ! !

b
f (b) h(g(x))
c

9>= >>;

We have to show

(1) R is con uent.

(2) R is weakly terminating.

(3) R# is not locally con uent.

(4) R# is not weakly terminating.

The relevant parts of the reduction graphs of R and

For for

(1), it su ces to instance Rb :=

show con uence R fh(g(b)) !

co;fh!(fRb(af)o)r!anyc;

RRb #waitrhe h(f (b))

l ! r 2 Rb n R as is easily veri ed. Hence, ( ) holds for Rb.

( Hue80]), i.e., for every critical pair hs; ti there exist terms

displayed in Figure 1.

( ) !R ! cg, we Moreover,

!Rb have Rb is

l !!+RR.rTfaokrianlgl strongly closed

u; v such that s ! u = t and

s != v t. Furthermore, Rb is left-linear and right-linear, hence by Hue80, Lemma 3.2] it

is (strongly) con uent. This implies con uence of R as desired.

For (2) we show that all terms t are weakly (R-)terminating, by structural induction and

case analysis. In the base case, if t is a variable or a constant (from fa; b; cg), it obviously

has a normal form. In the induction step we have the following cases. If t = f(t0) then

RR n 3327

6 Bernhard Gramlich

bfhleyy(fbtp)i-onh.tdahOunecdtsthiisseoirtndw0ehihsryaeops,oositt.oehsm.ey,smeiifsnbtbtoo00rl,m6=hfaabs(l,tbsf0to)ohrmimesneatbng0.on(trboI0mr)fmatbi0sla=lfaofronbmrotmrhtmbe0.onaflStfifno=(trc)meg.(ttohI0ff)erttre.e=diFsugicnn(eotas0l)rltyuot,lheitefhinnet

R with f as by induction normal form = h(t0) then

by induction hypothesis t0 has some normal form tb0. If tb0 is of the form tb0 = f(te0) then, if

te0 = b then t reduces to the normal form c otherwise t reduces to the normal form h(g(te0)).

Othtahtertbw0 =iseg,(ai.)e.i,siifmtb0p6=ossfib(tlee0)sitnhceentbt0

reduces to h(tb0) which is a normal form).

is

already

in

normal

form

(note

For (3) we observe that in R# we have h(g(b)) h(g(a)) ! c. Here, c is irreducible and

the only reductions from h(g(b)) are of the form h(g(b)) ! h(f(b)) ! h(g(b)) ! : : :. Hence,

R# is not locally con uent. Moreover, (4) holds since for instance h(g(b)) does not have a

normal form in R#.

A slight modi cation of the above counterexample shows that also for the special case

of string rewriting systems (cf. e.g. BO93]) semi-completeness is not preserved under right-

normalization. To this end one may simply turn the constants a; b; c in R above into unary

function symbols and add some variable x in the corresponding rules. This yields the system

fa(x) ! b(x); g(b(x)) ! f(a(x)); h(f(x)) ! h(g(x)); h(g(a(x))) ! c(x)g which corresponds

(in the usual way) to the string rewriting system fa ! b; gb ! fa; hf ! hg; hga ! cg.

Notice, that the above counterexample also constitutes a counterexample for (1a), since

8>><

a!b g(b) ! f(b)

9>>=

R#ext = R#

fr

!

r#R

j

l

!

r

2 R; r

6=

r#Rg

=

>>>:

h(f (x)) h(g(a))
f (a)

! h(g(x)) !c ! f(b)

>>>;

is also neither weakly terminating nor (locally) con uent (for the same reasons as R#).

3 Two Su cient Conditions
It is obvious that right-normalization disables certain reduction steps which are possible in the original system. One case where this is harmless is the following.
Theorem 3.1 Let R be a semi-complete TRS such that R# satis es: ( ) no non-variable subterm of a right-hand side in R# is uni able with a left-hand side in R#. Then R# is
semi-complete.
Proof: Let R satisfy the above assumptions. By Lemma 2.1(2) it su ces to show weak termination of R#. We show by structural induction that every term t has a normal form (in R#). First we consider the base case: If t is a variable or irreducible constant then we already have a normal form. If t is a reducible constant, then t is a left-hand side of R and of R#. Consequently, t reduces in one R#-step to a normal form. In the induction step t is

INRIA

On Semi-Completeness of Term Rewriting Systems

7

ofOoftrthmheertbwifoiisrnem,Rwt#e=, hmfeun(tsc1te;h:ta:=v:e;ftbtn(=t)1. ;lB: :yf:o;inrtnds)oumc!teiRorn#ulhfey(ltpb1!o;t:h:re:s2;itsbnR,)eav=ne:rdybt.stoIimf(bt1eiisrrireirdeudcnuicb)ilhbealsesu, sbwosemtiateurnetiodoronmnae,.l

i.e., with (x) irreducible for because all proper subterms

eovf ebtryarxe

6= (x) (note irreducible).

tHheantce,mbta=y

be
l

term is irreducible by the assumption ( ) and irreduciblity of .

assumed to be

!HRen#c(er,#tR=)

.
f

reduces in R# to the normal form (r#R) as desired. Hence we are done.

irreducible The latter (t1; : : : ; tn)

Note that the counterexample in the proof of Theorem 2.2 violates the condition ( ), since the non-variable subterm g(x) of the right-hand side h(g(x)) of the R#-rule h(f(x)) ! h(g(x)) is uni able with the left-hand side g(b).

Remark 3.2 We observe that for the preservation of weak termination in Theorem 3.1 con uence of R is not really necessary. More precisely, if R is weakly terminating then we may consider any system R#, which is obtained by replacing in R every right-hand side by one of its R-normal forms. If R# satis es ( ) above, then it is innermost terminating, hence
in particular weakly terminating (this is easily proved by structural induction or minimal
counterexample). Moreover, in such an R# the contractum of an innermost redex in some term is irreducible. This means that the length of innermost derivations in R# is bounded
by the size of the initial term.

In some sense the condition ( ) in Theorem 3.1 above is not very satisfactory because it is formulated in terms of the resulting system and not of the original one. Moreover the class of TRSs to which it applies seems to be rather restricted (cf. Remark 3.2 above).
Another more interesting su cient condition relies on a known result of O'Donnell about normalization of reduction strategies. More precisely, we shall exploit the fact that parallel-outermost reduction and | more generally | outermost-fair reduction are normalizing for almost orthogonal TRSs ( O'D77]). The latter result has recently been extended to the higher-order case by van Raamsdonk ( Raa96]).3 First let us explain some notions needed here and subsequently. Recall that a TRS R is non-overlapping if it has no critical pairs (note that an overlap of a rule with itself at the root position is not considered to be critical). A critical pair hs; ti is trivial if s = t, and an overlay if it is obtained by overlapping two rules at root position. A left-linear TRS R is called orthogonal if it is non-overlapping, almost orthogonal if all its critical pairs are trivial overlays, and weakly orthogonal if all its critical pairs are trivial. A reduction strategy is said to be normalizing if for any term t possessing a normal form reduction (of t) according to the strategy eventually ends in a normal form. A (possibly in nite) reduction sequence (where for every step the redex contracted is speci ed) is said to be outermost-fair if every outermost redex occurrence is eventually eliminated. In almost orthogonal TRSs outermost redex occurrences can only be eliminated and created by contracting redex occurrences which are outermost themselves (this property does not hold for weakly orthogonal systems).
3Note that outermost-fair reduction ( Klo92]) is called eventually outermost in O'D77].

RR n 3327

8 Bernhard Gramlich

Theorem 3.3 Let R be an almost orthogonal TRS. If R is semi-complete then R# is semi-

complete, too.

Proof: Let R be semi-complete and almost orthogonal. To show semi-completeness of R#

it su ces by Lemma 2.1 to prove that R# is weakly terminating. For an arbitrary term s

we construct the R#-reduction (parallel reduction by contraction of some outermost redexes

is denoted by ?ok!? ) D0 : s =: s1 ?ok!? R#s2 ?ok!? R#s3 ?ok!? R# : : :

where sk+1 is obtained from sk by the parallel contraction of all (parallel) outermost R#-

redexes in sk. If some outermost root-reducible subterm sk=p of sk is root-reducible by

several distinct rules then we choose an arbitrary applicable one. In any case, the result

of contracting lR!-deRrivrat!ionR

rs0k=foprisevuenriyqule,!sinrce2RRi,s

almost l ! r0

orthogonal. By de 2 R#. Thus we

nition may re

of R#, ne D0

we have into an

D : s =: s1 ?ok!? Rs02 !R s2 ?ok!? Rs03 !R s3 ?ok!? R : : :

oRrewfd-threheexdereeeasxpsienpks+lsia1ekrdei(sRydioie-sbrlpdutlailaneiynsg,ee4dsd0ki.t+fehr1.oe,)nmiffoslsklko=wbeyCdtblh1ye

parallel contraction of the R-normalization of 1; : : :; ln n] (with li !

all (parallel) outermost Rthe right-hand side patterns ri 2 R) where all outermost

sk ?ok!? R C r1 1; : : : ; rn n] = s0k+1 !R C (r1#R) 1; : : : ; (rn#R) n] = sk+1 :

fsakiNr?oork!?wed,Rucsftoi0kor+n1.ie5svneHroyernmckea,liDzeivniegsrfyionr

poaurtteircmuloasrtanRo-uretedremx osotf-fasirk

is eliminated in R-derivation. Since

almost orthogonal TRSs and R is semi-complete

the step outermostand almost

oakrnntdohwoRgt#oh-na)atnl,sonDrmismalauflsostormeandsnnow.rmiHthaelnacfnoer,mR-nwo.rr.mt.aRl f#o.rmCosnnse(qfourenstolmy,eDn0).mBusyt

de nition of R# we also end in the (R-

D0 : s =: s1 ?ok!? R#s2 ?ok!? R# : : : ?ok!? R#sn is a normalizing R#-derivation for s as desired.

We observe that the right-normalized version of a semi-complete orthogonal TRS is not

only semi-complete but by construction also orthogonal. This preservation of orthogonality

does not extend to almost orthogonality, i.e., the right-normalized version of a semi-complete,

almost orthogonal TRS is semi-complete, but need not be almost orthogonal (however, it is

still an overlay system). For instance, right-normalizationof the complete, almost orthogonal

TRS 8< f(x; g(a)) ! h(x) 9=

R

=

:

f(g(a); g(x)) h(g(x))

! !

h(g(x))
b

;

45FNoorteuntihcaitty,

one for

may
k

assume for every 2, all outermost

rule l ! redexes

eliminated at the latest in the step sk ?ok?!R s0k+1.

r2R of all

one xed normalizing R-derivation r intermediate terms occurring in s0k

!!RR

r#R
sk

. are

INRIA

On Semi-Completeness of Term Rewriting Systems

9

yields 8< f(x; g(a)) ! h(x) 9=

R#

=

:

f(g(a); g(x)) h(g(x))

! !

b b

;

which is complete, but obviously not almost orthogonal.

A careful inspection of the proof of Theorem 3.3 reveals that the only property which is

really essential for the construction to go through is normalization of outermost-fair reduc-

tion. However, we are not aware of any further results (besides the one mentioned above)

about classes of TRSs for which outermost-fair reduction is normalizing. For instance, it

seems to be open whether outermost-fair reduction is also normalizing for weakly orthogonal

TRSs. Note that weak orthogonality is only slightly more general than almost orthogonality.

of

Actually, considering the proof outermost-fair reduction hyper

noof rTmhaeloirzeamtio3n.36

it is obvious that instead of normalization of parallel-outermost reduction may also

be used as essential property (this is exactly what is needed in the construction). And

it seems plausible ( Mid97b]) that hyper normalization of parallel-outermost reduction for

weakly orthogonal TRSs can be proved by using ideas of SR93], OR94], Mid97a]. Yet,

this remains to be checked in detail.

4 Discussion

Right-normalization of semi-complete TRSs is a transformation which is incompatible with

the usual (position selection) reduction strategies like (leftmost, parallel) innermost or outer-

mdtoeorasivt,atetnriaommn etblye=lionwCthplew]fpohlmeloreewaitnnhsgetspoenaastpete.prlAnypolpfl!yrinr,git.seoo.m,t=reprisuylineeolldr!minagrli#tz0Re=d2.

R# (for some l ! r 2 R)

C
If

r ]p
t=p

followed by some = l is outermost

in t, then a redex which is outermost in r (let's say at position q) need not correspond to

an outermost redex in have been created, via

tt0he=sCurrrou]np dbinecgaucosentseoxmt eCn:e]worovuitaerimnsotsatntrieadteioxninwitt0habo.vSeimpqilamralyy,

if t=p = l is innermost in t, then a redex which is innermost in r (let's say at position

q) need not correspond to redex in t0 (strictly) below

an
pq

innermost may have

redex in t0 = C been created by

rins]tpanbteicaatuiosne.soHmenecne,ewin

innermost general it

seems di cult to predict the e ect of right-normalization of some semi-complete TRS on a

previously existing normalizing reduction strategy (for the original system).

We have isolated two conditions under which the right-normalized version of a semi-

complete TRS is again semi-complete (and has the same equational theory). Furthermore we

have shown that in general both weak termination and (local) con uence may be lost under

right-normalizing semi-complete TRSs. However, in the counterexample presented at least

the equational theory is preserved as is easily veri ed. In fact, we did not succeed in nding

a counterexample for question (2), i.e., a semi-complete TRS for which right-normalization

6We say that a hyper normalizing

isfteravteergyyte!rms

(i.e., that

issawtiesfaykilnygt!erms in!ati)ngwuhnodseern!ormtearlmfoinrmatsesaurendaelsro!!-no!rms al

forms !.

is

RR n 3327

10 Bernhard Gramlich

does not preserve the equational theory. Let us only mention that any (potentially existing) counterexample R would have to satisfy the following property: There exists a right-hand side r in R which is

(a) weakly R-terminating (since R is semi-complete),

(b) not R-terminating,

(c) not weakly R#-terminating, and such that

(d) r 6$R# r#R.

rcrBoro^uo#tty=hhnlReeeTdrrrl$uoeww#e!RiinRcnssocee#i(nertbirtrcoyh2ol,nwuef!hrdRoRoeeeunRf,)lwwcd,#Rweoiatbu#elhneld$dp!w(RrdeeteRR)#xhsh#-eiurtsaansertnvt6$r,edrsmaoaR$c$nminos#dienaRRmrtcR###iopunRn#lreges-#n,(eRcc($hoqeaoteunuhwRnoednecfnh.rtetRiRweclHrryhi)-ese,)!xe$ncha,iocrRmeRfnernoe,t#prcrdrile#a=ufeaRdcrn$iti,$ycbo$trRlslReqR!#!u)(r^#.de6=Rws)rMr#t.#ii$tRor2oFhn#rRiReaRrno(g#a3t!valhw)ealieynrRneo,n,d#cfw((otbcrr^tohn)h),#uteeRrlrhhrdaeoo!idnll=hedditRcaxrsstvo,i,risredn#bbt#usgRleeRccc#s!(taaodia(uuom)Rnbssn.dyee#e,

i.e., a semi-complete, right-normalized TRS where deletion of left-reducible rules destroys

both

semi-completeness

as

well

as

th8<e

equational theory. g(a) ! f(a)

C9=onsider

the

TRS

R=:

h(f(x)) ! h(g(x)) h(g(a)) ! b

;

which is easily shown to be semi-complete and which is obviously right-normalized. The only rule with a reducible left-hand side is the last one, hence we obtain

R#ext =

g(a) ! f(a) h(f(x)) ! h(g(x))

which is neither weakly terminating (for instance, h(f(a)) has no normal form) nor does it satisfy $ =R#ext $R (for instance, h(g(a)) !R b but h(g(a)) 6$R#ext b).
Acknowledgements: I would like to thank Stefan Kahrs, Friedrich Otto and Michael
Rusinowitch for useful hints and comments on a draft version of this paper.

References
BO93] Ronald V. Book and Friedrich Otto. String Rewriting Systems. Texts and Monographs in Computer Science. Springer-Verlag, August 1993.
DJ90] Nachum Dershowitz and Jean-Pierre Jouannaud. Rewrite systems. In J. van Leeuwen, editor, Formal models and semantics, Handbook of Theoretical Computer Science, volume B, chapter 6, pages 243{320. Elsevier, 1990.

INRIA

On Semi-Completeness of Term Rewriting Systems

11

Hue80] Gerard Huet. Con uent reductions: Abstract properties and applications to term rewriting systems. Journal of the ACM, 27(4):797{821, October 1980.

Kah95] Stefan Kahrs. Rewriting-list contribution 388: Semi-completeness

and reduced TRSs.

ftp://ftp.loria.fr/pub/loria/eureca/rewriting.list

/388 Semi completeness and reduced TRS.gz, May 18, 1995.

KB70] Donald E. Knuth and P.B. Bendix. Simple word problems in universal algebra. In J. Leech, editor, Computational Problems in Abstract Algebra, pages 263{297. Pergamon Press, Oxford, U. K., 1970. Reprinted 1983 in \Automation of Reasoning 2", Springer, Berlin, pp. 342{376.

Klo92] Jan Willem Klop. Term rewriting systems. In S. Abramsky, D. Gabbay, and T. Maibaum, editors, Handbook of Logic in Computer Science, volume 2, chapter 1, pages 2{117. Clarendon Press, Oxford, 1992.

Met83] Yves Metivier. About the rewriting systems produced by the Knuth-Bendix completion algorithm. Information Processing Letters, 16(1):31{34, January 1983.

Mid97a] Aart Middeldorp. Call by need computations to root-stable form. In Proc. 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, pages 94{105, Paris, 1997.

Mid97b] Aart Middeldorp. Personal e-mail communication, March 1997.

O'D77] Michael J. O'Donnell. Computing in Systems Described by Equations, volume 58 of Lecture Notes in Computer Science. Springer-Verlag, 1977.

OR94]

Vincent van Oostrom and Femke van Raamsdonk. Weak orthogonality implies con uence: The higher-order case. In A. Nerode and Y.V. Matiyasevich, editors, Proc. 3rd Int. Symp. on Logical Foundations of Computer Science, volume 813 of Lecture Notes in Computer Science, pages 379{392, St. Petersburg, Russia, July 1994. Springer-Verlag.

Raa96] Femke van Raamsdonk. Con uence and Normalization for Higher-Order Rewriting. PhD thesis, Vrije Universiteit Amsterdam, 1996.

SR93] R. C. Sekar and I. V. Ramakrishnan. Programming in equational logic: Beyond strong sequentiality. Information and Computation, 104(1):78{109, 1993.

RR n 3327

Unite´ de recherche INRIA Lorraine, Technopoˆle de Nancy-Brabois, Campus scientiﬁque, 615 rue du Jardin Botanique, BP 101, 54600 VILLERS LE` S NANCY
Unite´ de recherche INRIA Rennes, Irisa, Campus universitaire de Beaulieu, 35042 RENNES Cedex Unite´ de recherche INRIA Rhoˆne-Alpes, 655, avenue de l’Europe, 38330 MONTBONNOT ST MARTIN Unite´ de recherche INRIA Rocquencourt, Domaine de Voluceau, Rocquencourt, BP 105, 78153 LE CHESNAY Cedex Unite´ de recherche INRIA Sophia-Antipolis, 2004 route des Lucioles, BP 93, 06902 SOPHIA-ANTIPOLIS Cedex
E´ diteur INRIA, Domaine de Voluceau, Rocquencourt, BP 105, 78153 LE CHESNAY Cedex (France)
ISSN 0249-6399

