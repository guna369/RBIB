Theoretical Computer Science 35 (1985) 337-344 North-Holland

337

NOTE
A FINITE THUE SYSTEM WITH DECIDABLE WORD PROBLEM AND WITHOUT EQUIVALENT FINITE CANONICAL SYSTEM
Deepak KAPUR and Paliath NARENDRAN
Computer Science Branch, General Electric Corporate Research and Development, Schenectady, N Y 12345, U.S.A.
Communicated by R. Book Received October 1983 Revised June 1984
Abstract. We present a single-axiom Thue system with a decidable word problem for which there does not exist any finite equivalent canonical system. However, an equivalent finite canonical system for this Thue system can be obtained if new symbols are introduced in the presentation. This result settles an open question by Jantzen (1982) who asked whether every Thue system with a decidable word problem has an equivalent finite canonical System. We also discuss relationships between Thue systems and term rewriting systems.
Key words. Thue systems, semi-Thue systems, Church-Rosser property, word problem, canonical systems, term rewriting systems.
1. Introduction
Thue systems have been recently studied by Book and others [1, 2, 6, 12] in the context of formal languages and monoid presentations. Different properties of Thue systems such as the Church-Rosser, confluence and almost-confluence properties, have been investigated. Thue systems are also closely related to term rewriting systems which are of interest because of their applications to theorem proving, reasoning about specifications and programs especially abstract data types, program transformation and synthesis, algebraic simplifications, etc. [3, 4, 8, 9, 10].
In this paper, we discuss a single-axiom Thue system which has a decidable word problem but for which there does not exist any finite canonical system equivalent to it unless new symbols are introduced in the presentation. This settles an open question by Jantzen [6] who asked whether every Thue system with a decidable word problem has an equivalent finite canonical system. This result is pertinent regarding applications of the term rewriting approach which employ the KnuthBendix completion procedure to obtain a canonical system of rewrite rules.
0304-3975/85/$3.30 © 1985, Elsevier Science Publishers B.V. (North-Holland)

338 D. Kaput, P. Narendran
The next three sections give definitions of properties of reduction relations, semi-Thue systems, Thue systems and review some results. An interested reader may want to look at [2, 3, 4, 7] for details. Section 5 discusses the main result of the paper. The effect of introducing new symbols in a presentation is briefly dealt with in Section 6. The final section relates Thue systems to term rewriting systems.
2. Rewriting of strings over an alphabet
Let Z be any finite alphabet and Z* the set of all possible strings over Z, including the null string h. For a string w in Z*, [w[ denotes its length.
A rewriting relation ~ on Z* is any relation with the property that whenever x ~ y , u x v ~ uyv for all u and v. (Here we say, "uxv is rewritten to uyv".) It is Noetherian if there is no infinite sequence of the form
XI-.-) X2-.-) • • • .
In other words, for every string x the 'rewriting process' has to terminate eventually. Let -~* be the reflexive, transitive closure of ~. If x ~ * y , then x is an ancestor of y (and y is a descendant of x) w.r.t. ~. A string w is irreducible w.r.t. ~ if there is no y such that w ~ y. We denote the set of all strings that are irreducible w.r.t. by IRR(-~). If x ~ * y and y in IRR(~), then y is called a normal form of x w.r.t. ~. Two words x and y are said to be joinable w.r.t. ~ if there exists a word z such that
x~*z and y~*z,
or, in other words, x and y have a common descendant. A rewriting relation ~ on Z* is said to be confluent if, for every u, v and w in
Z* such that u ~ * v and u~*w, v and w are joinable. If a rewriting relation ~ is both Noetherian as well as confluent, then -~ is called canonical
3. Semi-Thue systems
A semi-Thue system S is a set of ordered pairs of words over Z*, given by
s = {(li, r , ) l i = 1 , . . . , k}. Each ordered pair (l~ r~) is a rule, where l~ is the left-hand
side (lhs) and r~ the fight-hand side (rhs). The rewriting relation defined by S, denoted by ~ s , is
w, ~ s w2 iff 31~,ri, x, y: (wl = xl~y, w2 = xr~y and (1~,r~) e S).
Reduction in a semi-Thue system S is defined as the reflexive, transitive closure of :::>s and is denoted by ~s*. Note that ~ * is a rewriting relation as defined in the previous section.

Finite Thue system with decidable wordproblem

339

The reflexive, symmetric and transitive closure of ~ s is denoted by <=>* and is sometimes called the 'Thue congruence generated by S' [6]. Two semi-Thue systems SA and SB are equivalent if

A semi-Thue system S is Noetherian (respectively, confluent, canonical) if ~ s is Noetherian (respectively, confluent, canonical). (Jantzen [6] calls a canonical semiThue system '~-reducing'.)
A semi-Thue system S is reduced if, for every rule (l, r) in S neither l nor r is reducible w.r.t. S - {(l, r)}. S is reduced Noetherian (respectively, reduced confluent, reduced canonical) if and only if S is reduced as well as Noetherian (respectively, confluent, canonical). Using results from [7] as well as from [10], we have the following proposition.
Proposition. For every canonical semi-Thue system S there is a reduced canonical semi-Thue system S' equivalent to S.

4. Thue systems
A Thue system T is a set of pairs of words over 2~*: T =
{(li, ri)li = 1 , . . . , k, Ilil >t Ir, I}. The Thue congruence ~-->*defined by T is the reflexive,
transitive closure of the relation ~ defined as follows: if (u, v) is an element of T, then, for all x, y, xuy ~->xvy and xvy~-->xuy. If x ~ * y , then x and y are congruent modulo T. The elements of T are called axioms or equations because they can be used in either direction. (Jantzen [6] calls a Thue system 'a symmetric semi-Thue system'.)
Two Thue systems TI and T2 are equivalent, written T1 = i/'2, if they generate the same congruence on ,~*. A semi-Thue system S is equivalent to a Thue system T if ¢:>* is the same as the Thue congruence generated by T. Note that orienting the rules of a Thue system T, in any direction, produces a semi-Thue system S equivalent to it.
Book and others [1, 2, 12] have considered different rewriting relations induced by a Thue system T. Axioms of T are oriented into rules using the length of the two words in an axiom. A Thue system T is divided into two parts: length-reducing axioms, R(T) and length-preserving axioms, SP(T). They define:
(a) x-->y i f x ~ y a n d l x l > l Y [ , (b) x m y if x ~ y and lxl = lYlLet -->* and H * denote the reflexive, transitive closures of --> and H , respectively. Note that --% the reduction relation modulo T, is Noetherian because the length of a string is always reduced by rewriting. Using the above definition of --%it is possible to extend the definition of joinability given in Section 2 as follows: Two words x and y are almost-joinable if there exist strings u and v such that
x-->*u, x-->*v and um*v.

340 D. Kapur, P. Narendran
The word problem of T is the problem of deciding whether two words are congruent modulo T. A Thue system T has the Church-Rosser property if every pair of congruent words is joinable. If other words, for every choice of x and y, x <-->*y implies that, for some z, x -->* z and y -->* z. It can be shown that, in a Church-Rosser system T, every string has a unique normal form and that a Church-Rosser system T is also canonical. T is almost-confluent if every pair of congruent words is almost-joinable. Clearly, T is almost-confluent if every rule in T is length-preserving.
Theorem 4.1 ([7]). For every finite Thue system T, if there is a finite Church-Rosser system equivalent to T, it can be effectively obtained.
A Thue system T is reduced if, for each (l, r) in T neither I nor r can be reduced modulo T-{(l, r)}. Note that this implies that if T is Church-Rosser and reduced, then SP(T), the set of size-preserving axioms in T, is empty.
Theorem 4.2 ([7, 12]). For every Church-Rosser 7hue system T, there is a unique
reduced Church-Rosser Thue system T' equivalent to T.
Note: When T is finite, this is also effectively obtainable from T. In particular, the Knuth-Bendix completion procedure applied to Thue systems as discussed in [7] produces a reduced Church-Rosser Thue system equivalent to a finite Thue system given to the procedure as input if a finite Church-Rosser system equivalent to the input Thue system exists.
Theorem 4.3. Ira Thue system T has an equivalent finite canonical semi- Thue system S, then the word problem of T is decidable.

5. The main result

We show that there exists an almost-confluent Thue system such that there is no finite canonical semi-Thue system equivalent to it.
This Thue system is T~ = { a b a o b a b } . Since labal = Ibabl, T~ is trivially almostconfluent and its word problem is decidable. In T~ we have

abbab ~--~*babba.

Using this as the basis step (i = 0, j = 0), it can be shown by induction that ai+lbJ+2ab <-->*babi+2aj+l, i,j>~O,

(1)

Further, using [bab] = {aba, bab}, where, for any x, [x] stands for the equivalence class containing the word x, we can also show by induction that

[bnab] = {b"-iabai: 0<~ i<~ n} for n > 0.

(2)

Finite Thuesystem withdecidable wordproblem

341

Similarly,
[bab"]={aJbab"-J: O<~j<~n} for n > 0 .

(3)

Also observe that strings of the form in (1), i.e.,

ai+~bJ+2ab and babi+2aJ+

are such that they can be equated to other strings only because of substrings of the
forms bkab and babk, respectively. This is so because all other substrings of strings
in (1) can be shown to have congruence classes with one element. Using these properties of T1, we show the following theorem.

Theorem 5.1. There does not exist any finite canonical semi-Thue system equivalent to Tt.

Proof. The proof follows by contradiction. Assume that there exists a finite canonical system equivalent to T~; then there is a finite reduced canonical system S~ equivalent to rl.
Since [bab] = {aba, bab}, any canonical system should contain either (aba, bab) or (bah, aba). Without loss of generality, assume the former is the case. Since the
system is reduced, all rhs's must be irreducible. Let L be the length of the longest left-hand side of the desired canonical system
Si. Choose i and j to be L in formula (1) above. That is,
aL+lbL+2ab ¢:)* babZ+2a L+l.
They should have a common descendant in $1. But the only substrings of these two
strings that can possibly be reduced in the first step are strings of the forms bkab and bah k, respectively, as all other substrings of strings in (1) can be shown to have
congruence classes with one element only. That is, there must be rules of the form
(biab, x) and (bahj, y).
But x and y will be reducible by (aba, bab) as can be seen from (2) and (3). This
contradicts the assumption that S1 is reduced. []

Jantzen [6] had raised the question whether there is a finite Thue system with a decidable word problem which has no finite canonical system equivalent to it. We
have proved a much stronger result that there is a single-rule, almost-confluent system
which has no equivalent finite canonical system.

6. On adding new symbols
F. Otto (private communication) and the present authors have independently observed that if new symbols "are allowed, then it is possible to obtain a finite

342 D. Kaput, P. Narendran
canonical system equivalent to T~. In particular, if we introduce a new symbol c, say, to stand for ab, we have Tc -- {ab*+ c, ca ~ bc}. Then an equivalent finite reduced canonical system can be obtained by applying the Knuth-Bendix completion procedure [7] as follows. We use the ordering c > b > a and use this ordering and the length to define a well-founded ordering on strings as in [7]:
(1) ab+ c (2) ca -->bc From (1) and (2) we get a new rule from the superposition cab: (3) bcb -->cc From rules (1) and (3) we have (4) ccb ~ acc The above four rules constitute a canonical system. Another example where this technique of adding new symbols will work is the Thue system {(aba, ab)} studied in [12]. It is shown in [12] that {(aba, ab)} has no equivalent finite almost-confluent system. (There is no equivalent finite preperfect system either.) In fact we can prove also that there is no finite canonical system equivalent to {(aba, ab)} using a proof technique similar to the one we have employed in the previous section. But on adding the new rule (ab ~ c) where c is a new symbol, we are able to arrive at the finite canonical system {(ab -->c), (ca + c), (cb + cc)}. A similar observation has been made by others in the context of term rewriting systems that it is sometimes essential to introduce new operators. In the next section we discuss relationships between term rewriting systems and Thue systems.
7. Relationship between term rewriting systems and Thue systems
There are two ways to relate Thue systems to term rewriting systems. A direct way is by making the concatenation on strings as an explicit operation and treating symbols in the alphabet ~ as nullery function symbols or constants. In the axioms of a Thue system T, strings are then considered as abbreviations for repeated applications of the concatenation operation on constant symbols; in addition, the associativity axiom satisfied by the concatenation operator is also included to obtain a term rewriting system equivalent to a Thue system.
An indirect approach for obtaining an equivalent term rewriting system from a Thue system is to view each symbol in the alphabet ~ as a monadic function symbol, and for every axiom (1, r) in a Thue system T, where l = a l . . . a= and r = b~ . . . bn, ai, bge,~, the corresponding term rewriting system has ( a l ( . . . a , ( . . , a = ( x ) . . . ) , b l ( . . , bj(.., b , ( x ) . . . ) ) as an axiom, where x is a variable ranging over terms; Huet and Lankford [5], for instance, use a similar construction.
To our knowledge, the observation about adding new operators in the context of term rewriting systems was first made by Knuth and Bendix [9]. Rewrite rule laboratories, REVE and RRL, under development at MIT and General Electric

Finite Thue system with decidable wordproblem

343

Research and Development Center, provide this feature of introducing a new operator as part of the Knuth-Bendix completion procedure (see [8, 11] for details).
While running the Knuth-Bendix completion procedure to generate a canonical set of rewrite rules for an equational theory presented by a finite set of equations, a new operator is usually introduced in the following situation: An equation el - e2 that is a consequence of the rules, is generated and should be added to the existing rules to make progress towards obtaining a canonical system, but (i) there are variables appearing in el which do not occur in e2 and vice versa, or (ii) under the well-founded ordering on terms being used to orient rules, em and e2 are not comparable.
The example discussed in the previous section points to a situation different from the two discussed above: namely there are cases in which neither (i) nor (ii) arise, but to generate a finite canonical system it is necessary to introduce new operators, as otherwise the completion procedure would run forever generating an infinite set of rewrite rules.

Acknowledgment
We thank Ron Book, Friedrich Otto, and an anonymous referee for helpful comments and suggestions for improving the paper.

References
[1] M. Benois and M. Nivat, Congruence parfaites et quasi-parfaites, Seminaire Dubreil 25 Annee (1971-72) 7-01-09.
[2] R. Book, Confluent and other types of Thue systems, J. A C M 29 (1) (1982) 171-182. [3] J.V. Guttag, D. Kapur and D.R. Musser, On proving uniform termination and restricted termination
of rewriting systems, S I A M J. Comput. 12 (l) (1983) 00-00. [4] G. Huet, Confluent reductions: Abstract properties and applications to term rewriting systems,
J. A C M 27 (4) (1980) 797-821. [5] G. Huet and D.S. Lankford~ On the uniform halting problem for term rewriting systems, Rapport
Laboria 283, INRIA, Paris, 1978. [6] M. Jantzen, Semi Thue systems and generalized Church-Rosser properties, Bericht Nr. 92, Fach-
bereich Informatik, Universit~it Hamburg, 1982. [7] D. Kapur and P. Narendran, The Knuth-Bendix completion procedure and Thue systems, Third
Conference on Foundations of Computer Science and Theoretical Computer Science, Bangalore, India, (1983) 363-385. [8] D. Kapur and G. Sivakumar, Experiments with and architecture of RRL, a rewrite rule laboratory, Proc. N S F Workshop on the Rewrite Rule Laboratory, Rensselaerville, NY, 1983; General Electric CRD Report No. 84GEN008 (1984) 33-56. [9] D.E. Knuth and P.B. Bendix, Simple word problems in universal algebras, in: J. Leech, ed., Computational Problems in Abstract Algebras (Pergamon Press, Oxford/New York, 1970) 263-297. [10] D.S. Lankford and G. Butler, Experiments with computer implementations of procedures which often derive decision algrorithms for the word problem in abstract algebra, Tech. Rept. MTP-7, Louisiana Tech. Univ., 1980.

344 D. Kapur, P. Narendran
[11] P. Lescanne, Computer experiments with the REVE term rewriting system generator, lOth POPL Conf., Austin, TX, 1983.
[12] P. Narendran, Church-Rosser and related Thue systems, Doctoral Dissertation, Dept. of Math. Sci., RPI, Troy, NY, 1984.
[13] F. Otto, Finite complete rewriting systems for the Jantzen monoid and the Greendlinger group, Theoret. Comput. Sci. 32 (3) (1984) 249-260.

