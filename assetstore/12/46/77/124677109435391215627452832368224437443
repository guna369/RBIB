rs 10
o
Ed
ivers
vea R
inens
ói 24
6; acc
e 4 D
F. MeAbstract
For the class of monotone boolean functions f : {0,1}n → {0,1} where all 1-certificates have size 2, we prove the tight bound
n (λ + 2)2/4, where λ is the size of the largest 0-certificate of f .
This result can be translated to graph language as follows: for every graph G = (V ,E) the inequality |V | (λ + 2)2/4 holds,
where λ is the size of the largest minimal vertex cover of G. In addition, there are infinitely many graphs for which this inequality
is tight.
© 2006 Elsevier B.V. All rights reserved.
Keywords: Finite combinatorial problems; Theory of computation; Computational complexity; Graphs; Boolean functions; Vertex cover
1. Introduction
Let f : {0,1}n → {0,1} be a monotone boolean func-
tion. A 1-certificate (0-certificate) for f is a minimal set
of variables such that if all of them are set to 1 (0) then f
evaluates to 1 (0) regardless of the values assigned to the
other variables. Measures related to certificates play an
important role in the study of monotone boolean func-
tions [1].1
In [2], Simon shows that every monotone boolean
function over a set of n variables has a certificate of size
* Corresponding author.
E-mail addresses: vaston@inf.puc-rio.br (V. Costa),
herman@inf.puc-rio.br (E. Haeusler), laber@inf.puc-rio.br
(E.S. Laber), loana@ic.uff.br (L. Nogueira).
1 In fact, the concept of certificate can be extended to every boolean
function.
at least (1/2) logn − (1/2) log logn + 1/2. In [3], We-
gener shows that this bound is tight up to O(log logn)
terms for the monotone address function.
The size μ(f ) of the largest certificate (the largest
among the 0-certificates and 1-certificates) for f plays
a role in decision tree complexity. It is known that the
minimum depth of a decision tree which evaluates f is
at most μ(f )2 and that this bound is tight [1]. This para-
meter is also important in the study of the extremal com-
petitive ratio of monotone boolean functions, a topic
that has received some attention by the theory commu-
nity recently [7]. It is known that the extremal competi-
tive ratio of a monotone boolean function f is between
μ(f ) and 2μ(f ) and it is conjectured that it is exactly
μ(f ) [7,5,6].
Here, we study an issue related to the size of the
largest certificate of f . For the class of monotoneInformation Processing Lette
A note on the size
Vaston Costa a,∗, Edward Haeusler a,
a Departamento de Informática da Pontifícia, Un
Rua Marquês de São Vicente 225, Gá
b Instituto de Computação da Universidade Federal Flum
São Domingos Niter
Received 4 January 200
Available onlin
Communicated by0020-0190/$ – see front matter © 2006 Elsevier B.V. All rights reserved.
doi:10.1016/j.ipl.2006.10.0122 (2007) 124–126
www.elsevier.com/locate/ipl
f minimal covers
uardo S. Laber a, Loana Nogueira b
idade Católica do Rio de Janeiro (DI PUC-Rio),
io de Janeiro 22453-900, RJ, Brazil
e (IC UFF), Rua Passo da Pátria 156, Bloco E 3◦ andar,
130-240, RJ, Brazil
epted 20 October 2006
ecember 2006
yer auf der Heide
V. Costa et al. / Information Processing Letters 102 (2007) 124–126 125boolean functions where all 1-certificates have size k,
the inequality n  kλk holds, where λ is the size of a
largest 0-certificate of f . This can be proved almost di-
rectly by using Lemma 7.3 presented on Jukna’s book
[4]. However, this bound is not tight.
The main result of our paper is the tight bound n 
(λ + 2)2/4 for the case k = 2. The restriction k = 2 al-
lows us to work with graphs, where 1-certificates can
be seen as edges and 0-certificates as minimal covers.
Thus, our main result can be translated to graph lan-
guage as follows: for every graph G = (V ,E), |V | 
(λ+ 2)2/4, where λ is the size of a largest minimal ver-
tex cover of G.
We note that the quadratic upper bound |V | λ+λ2
can be proved in four lines as follows. Let C be the
largest minimal cover of G and let v be the vertex of
C with maximum degree. Then, observe that the de-
gree d(v) of v is at most |C|, for otherwise any minimal
cover that does not contain v would be larger than C.
Thus, we have that |V |  |C| +∑x∈C d(x)  λ + λ2.
As a matter of fact, to obtain our main result, we need
to work harder.
2. The size of minimal covers
In order to fix the notation, we present some basic
definitions that are going to be used throughout this pa-
per.
2.1. Definitions and notations
Given an undirected graph G = (V ,E), a cover of
G is a subset V ′ of V such that for all edge (u, v) ∈ E
either u ∈ V ′ or v ∈ V ′ (or both). A cover C is said to
be minimal when ∀x ∈ C, C − x is not a cover. We say
that a cover C of G is largest minimal if and only if
|C|  |S| for all minimal cover S of G. Observe that a
largest minimal cover is not necessarily unique.
Let X ⊆ V and let x ∈ X. The external neighbor-
hood of x with respect to (w.r.t.) X is the set denoted by
NX(x) and defined by
NX(x) =
{
y
∣∣ (x, y) ∈ E and y /∈ X}.
The external neighborhood of a set U ⊆ X w.r.t. X is
denoted by NX(U) and defined by
NX(U) =
⋃
x∈U
NX(x).
Let X ⊆ V . The external degree of x ∈ X, denoted by
|N (x)|, is the cardinality of N (x), and the externalX X
degree of U ⊆ X is |NX(U)|.2.2. Results
In what follows we present a lemma that is quite use-
ful to establish our main result.
Lemma 2.1. Let G(V,E) be a simple graph and C a
largest minimal cover of G. For all x ∈ C there is a
set Sx (possibly empty) that simultaneously satisfies the
three conditions below:
(1) Sx ⊆ C − {x}.
(2) |Sx | |NC(x)| − 1.
(3) NC(Sx) ⊆ NC(x).
Proof. Let S1 = (C − x) ∪ NC(x). We have that S1 is
a cover of G (not necessarily minimal). Let T ⊆ S1 be
a minimal cover for G. We have NC(x) ⊆ T , for oth-
erwise one of the edges that touches x would not be
covered by T . Let us define Sx = S1 − T . Note that
Sx ⊆ C − x, which satisfies condition (1).
Since C is a largest minimal cover of G, we also have
that |T | |C|. Thus,
|Sx | = |S1 − T | = |S1| − |T |
 |S1| − |C| =
∣∣C − {x} ∪ NC(x)
∣∣− |C|
= ∣∣NC(x)
∣∣− 1.
Hence, we can conclude that Sx also satisfies condi-
tion (2) of the theorem.
In what follows we prove that NC(Sx) ⊆ NC(x).
Let z ∈ NC(Sx). In this case, it must exist a vertex
y ∈ Sx = S1 − T such that (y, z) ∈ E. Since y /∈ T , we
must have z ∈ T , for otherwise the edge (y, z) would
not be covered by T . Finally,
z ∈ T ⇒ z ∈ NC(x) or z ∈ C − {x}.
Since z /∈ C, we have that z ∈ NC(x). 
Theorem 2.2. Let G(V,E) be a simple graph and let C
be a largest minimal cover of G. Then
|V | (|C| + 2)
2
4
.
Proof. Let x ∈ C be the vertex with maximum external
degree w.r.t. C. We divide the proof into two cases.
Case (i). There is a vertex u ∈ C such that NC(x) ∩
NC(u) = ∅.
For each vertex v ∈ C, let Sv be the set given by the
previous lemma. Since NC(x) ∩ NC(u) = ∅, it follows
that Sx ∩ Su = ∅, for otherwise a vertex in the exter-
nal neighborhood of S ∩ S w.r.t. C would belong tox u
NC(x) ∩ NC(u). By using the same reasoning we can
126 V. Costa et al. / Information Processing Letters 102 (2007) 124–126
conclude that both x /∈ Su ∪ Sx and u /∈ Su ∪ Sx . An up-
per bound on the size of V can be obtained as follows
|V | = |C| +
∣∣∣∣
⋃
v∈C
NC(v)
∣∣∣∣
= |C| +
∣∣∣∣
⋃
v∈C−Sx−Su
NC(v)
∣∣∣∣,
where the last equality holds because NC(Sx ∪ Su) ⊆
|V | (|C| − |Sx |
)× (∣∣NC(x)
∣∣− 1)
+ 1 + |C|.
Since |Sx | |NC(x)| − 1, we have that
|V | (|C| − ∣∣NC(x)
∣∣+ 1)× (∣∣NC(x)
∣∣− 1)
+ 1 + |C|. (2)
By maximizing the upper bounds given by Eqs. (1)NC(x) ∪ NC(u) and x,u ∈ (C − Sx − Su). By isolat-
ing u, we get that
|V | |C| + ∣∣NC(u)
∣∣+
∣∣∣∣
⋃
v∈C−Sx−Su−{u}
NC(v)
∣∣∣∣
 |C| + ∣∣NC(u)
∣∣+
∑
v∈C−Sx−Su−{u}
∣∣NC(v)
∣∣.
Since x is a vertex with the largest external degree, we
have that
|V | (|C| − |Sx | − |Su| − 1
)× ∣∣NC(x)
∣∣
+ ∣∣NC(u)
∣∣+ |C|.
Since |Sx | |NC(x)| − 1 we have that
|V | (|C| − ∣∣NC(x)
∣∣− |Su|
)× ∣∣NC(x)
∣∣
+ ∣∣NC(u)
∣∣+ |C|.
Finally, by using the fact that |Su|  |NC(u)| − 1,
we conclude that the right-hand side of the expression
above is only maximized w.r.t. Su and NC(u), when
|Su| = 0 and |NC(u)| = 1. Thus,
|V | (|C| − NC(x)
)× ∣∣NC(x)
∣∣+ 1 + |C|. (1)
Case (ii). For every vertex u ∈ C, we have that
NC(x) ∩ NC(u) = ∅. In this case,
|V | = |C| +
∣∣∣∣
⋃
v∈C
NC(v)
∣∣∣∣= |C| +
∣∣∣∣
⋃
v∈C−Sx
NC(v)
∣∣∣∣.
Because x is a vertex with the largest external degree
and NC(x) ∩ NC(u) = ∅, for every u ∈ C, we have thatand (2) as a real valued function in the variable |NC(x)|,
we establish our result. 
In order to show that our bound is tight we take Kt+1,
a complete graph with t + 1 vertices, and to each vertex
of Kt+1 we connect t different vertices, each of them
with degree 1. Note that |V | = (t + 1) + (t + 1)t =
(t + 1)2. In addition, the largest minimal cover C con-
sists of t vertices from Kt+1 and t vertices adjacent to
the vertex of Kt+1 that is not picked up. Thus, |C| = 2t
and |V | = (|C| + 2)2/4.
References
[1] H. Buhrman, R. de Wolf, Complexity measures and decision
tree complexity: a survey, Theoretical Computer Science 288 (1)
(2002) 21–43.
[2] H.-U. Simon, Tight Omega(log logn)-bound on the time for paral-
lel RAM’s to compute nondegenerated Boolean functions, Infor-
mation and Control 55 (1) (1982) 102–106.
[3] I. Wegener, The critical complexity of all (monotone) Boolean
functions and monotone graph properties, Information and Con-
trol 67 (1–3) (1985) 212–222.
[4] S. Jukna, Extremal Combinatorics—With Applications in Com-
puter Science, EATCS Texts in Theoretical Computer Science,
Springer-Verlag, Berlin, 2001.
[5] F. Cicalese, E.S. Laber, A new strategy for querying priced infor-
mation, in: Proceedings of the 37th ACM Symposium on Theory
of Computing, ACM Press, Baltimore, MD, 2005.
[6] F. Cicalese, E.S. Laber, On the competitive ration of evaluating
priced functions, submitted for publication.
[7] M. Charikar, R. Fagin, V. Guruswami, J. Kleinberg, P. Raghavan,
A. Sahai, Query strategies for priced information, JCSS: Journal
of Computer and System Sciences 64 (2002) 785–819.
