NASA/CR-2001-210853 ICASE Report No. 2001-7

Tactical Conflict Detection Airspace

and Resolution

in a 3-D

Gilles Dowek INRIA, Le Chesnay Cedex, France
Cdsar Mu_oz and Alfons Geser ICASE, Hampton, Virginia

April 2001

The NASA STI Program Office...

in Profile

Since its founding, NASA has been dedicated to the advancement of aeronautics and space science. The NASA Scientific and Technical
Information (STI) Program Office plays a key part in helping NASA maintain this important role.

The NASA STI Program Office is operated by Langley Research Center, the lead center for NASA's scientific and technical information.
The NASA STI Program Office provides access to the NASA STI Database, the largest collection of aeronautical and space science STI in the world. The Program Office is also NASA's institutional mechanism for
disseminating the results of its research and development activities. These results are published by NASA in the NASA STI Report Series, which includes the following report types:

TECHNICAL PUBLICATION. Reports of completed research or a major significant phase of research that present the results of NASA programs and include extensive data or theoretical analysis. Includes compilations of significant scientific and technical data and information deemed to be of continuing reference value. NASA's counterpart of peer-reviewed formal professional papers, but having less stringent limitations on manuscript length and extent of graphic presentations.
TECHNICAL MEMORANDUM. Scientific and technical findings that are preliminary or of specialized interest, e.g., quick release reports, working papers, and bibliographies that contain minimal annotation. Does not contain extensive analysis.

CONTRACTOR REPORT. Scientific technical findings by NASA-sponsored contractors and grantees.

and

CONFERENCE PUBLICATIONS.
Collected papers from scientific and technical conferences, symposia, seminars, or other meetings sponsored cosponsored by NASA.

or

SPECIAL PUBLICATION. Scientific, technical, or historical information from NASA programs, projects, and missions, often concerned with subjects having substantial public interest.

TECHNICAL TRANSLATION.
language translations of foreign and technical material pertinent NASA's mission.

Englishscientific to

Specialized services that complement the STI Program Office's diverse offerings include creating custom thesauri, building customized data bases, organizing and publishing research results.., even providing videos.
For more information about the NASA STI Program Office, see the following:

• Access the NASA STI Program Home Page at http://www.sti.nasa.gov

• Email your question via the Internet to help@ sti.nasa.gov

• Fax your question to the NASA STI Help Desk at (301) 621-0134

• Telephone the NASA STI Help Desk at (301) 621-0390

Write to:
NASA STI Help Desk NASA Center for AeroSpace 7121 Standard Drive Hanover, MD 21076-1320

Information

NASA/CR-2001-210853 ICASE Report No. 2001-7

_i__ _

.:i_i!i....... _; _

Tactical Conflict Detection Airspace

and Resolution

in a 3-D

Gilles Dowek INRIA, Le Chesnay Cedex, France
Cdsar Mulioz and Alfons Geser ICASE, Hampton, Virginia

ICASE NASA Langley Research Hampton, Virginia

Center

Operated by Universities Space Research Association

National Aeronautics and Space Administration
Langley Research Center Hampton, Virginia 23681-2199
April 2001

Prepared for Langley Research Center under Contract NAS 1-97046

Available fi'om tile following:

NASA Center for AeroSpace 7121 Standard Drive
Hanover, MD 21076 1320 (301) 621 0390

hffomlation

(CASI)

National TectHficalhlfomlation

5285 Port Royal Road

Spfingfield, VA22161 (703) 487 4650

2171

Selwice(NTIS)

TACTICAL CONFLICT DETECTION AND RESOLUTION IN A 3-D AIRSPACE * GILLESDOWEKCt, I_SAMRUNOZA{,NDALFONGSESER§

Abstract. This paperpresentasnalgorithmfor detectionandresolutionof air trafficconflictsin a 3dimensiona(3l -D)airspacfeortwoaircraft,namelyownshipandintruder.A conflicits a projectedincursion of the intruderaircraftwithinthe protectedzoneof the ownshipA. solutionis a singlemaneuvetro, be performebdy theownshipt,hat effectivelkyeepstherequiredminimumseparatiown ithoutcooperatioonf theintruderaircraft.Theinputto thealgorithmis the stateinformationi,.e.,horizontaplositiona, ltitude, groundtrack,andverticalandgroundspeedo, f both aircraft.Thealgorithmoutputsa setof solutions. Eachsolutionmodifiesonlyonestateparameteorf the ownshipg: roundtrack,groundspeedo, r vertical speedT. heproposeadlgorithmis suitablefor formalverification.

Key words, conflicdt etectionc,onflictresolutionC, D_Ralgorithm3, -dimensionacol,llisionavoidance

Subject classification.ComputeSr cience

1. Introduction. Oneof the mainelementosf the Free-Flighctoncep[t11]is the redistributionof responsibilitiefosr air trafficseparationU. nderFree-Flighrtules,eachaircraftwith anappropriatleeveof equipmenist responsibtloe assureseparatiown ith otheraircraftin the vicinity. Tosupporthis modeof operations,everaalutomateddecisiosnupporst ystemasrebeingproposedIn. thiscontextC, onflicDt etection andResolutioanlgorithms(CD_R)aredesignetdo warnpilotsaboutanimminenltossofseparationa,nd to assistthemin a correctivme aneuver.
In this paper,wepresenat tactical CD_R algorithm in a 3-D space for two aircraft. In CD_R-related

literature,

tactical algorithms

use only state information

to project aircraft trajectories.

Due to this intention-

ally limited source of information,

they are intended to be used with short lookahead times (a few minutes,

typically 5-10) during which aircraft are supposed to follow straight flight paths. Strategic approaches,

in

contrast, use intent information

such as flight plans, and uncertainties

such as weather conditions.

They

may have lookahead

windows of several minutes and even hours. For a survey on CD_R methods see [7].

The input to our algorithm is the state information,

i.e., 3-D position, ground track, vertical speed, and

ground speed, of two aircraft. We distinguish

one aircraft as the ownship and the other as the intruder. Loss

of separation

between the aircraft is predicted via linear projections

on time of the state parameters.

In case

of a predicted conflict, the algorithm proposes several solutions for the ownship. Every solution is a single

maneuver that effectively avoids the conflict. The maneuver modifies only one parameter

of the ownship.

This constraint produces finitely many solutions, simplifies the calculations

performed by the algorithm,

and

is simple to conceive and to perform by the crew.

In Section 2, we briefly survey some methods for conflict detection and resolution that inspired our

approach.

In Section 3, we present our approach

and its theoretical

support.

In Section 4, we give an

algorithm to find convenient The last section summarizes

3-D conflict solutions. our work and suggests

A prototype

implementation

lines of research for future

is described work.

in Section 5.

*This work was supported by the National Aeronautics and Space Administration under NASA Contract No. NAS1-97046 while the authors were in residence at ICASE, NASA Langley Research Center, Hampton, VA 23681-2199, USA.
tINRIA, Domaine de Voluceau - Rocquencourt - B.P. 105, 78153 Le Chesnay Cedex, France, e-mail: Gilles.Dowek@inria.fr. {ICASE, Mail Stop 132C, NASA Langley Research Center, Hampton, VA 23681-2199, USA, e-mail: munoz@icase.edu. §ICASE, Mail Stop 132C, NASA Langley Research Center, Hampton, VA 23681-2199, USA, e-mail: geser@icase.edu.

2. Conflict Detection

and Resolution

Supporting Free Flight. Distributed Air/Ground Traffic

Management (DAG-TM) [1] is a set of conceptual elements, developed within the Advanced Air Transporta-

tion Technologies project at NASA, that defines modes of operation supporting the Free-Flight concept.

Safety assessment of new air traffic management systems is a main issue in DAG-TM. Prototype tools

such as the Autonomous Operations Planner (AOP) are being developed at NASA Langley to study the

feasibility of self separation. Systems with similar goals have been proposed in other research laboratories, e.g., the Future ATM Concepts Evaluation Tool (FACET) [3] at NASA Ames 1 and the Airborne Separation

Assurance System (ASAS) [6] at the National tools implement CD_zR algorithms.

Aerospace

Laboratory

(NLR) in the Netherlands.

All these

Standard safety assessment techniques such as testing and simulation, although useful, have serious

limitations in new systems which are significantly more autonomous than the older ones. Given the critical

nature of the problem, we believe that safety statements should be made and verified formally, and that

proofs should be checked by machine.

With the above premise in mind, we have examined at the AOP conflict detection and resolution proce-

dures. The AOP will eventually provide both tactical and strategic CD_zR resolution. In what follows, we

consider the conflict detection part of the CD_zR AOP algorithm, which is an adaptation of a deterministic

procedure implemented within the ground NASA's Center/TRANCON

Automation System (CTAS) [12]. 2

2.1. Conflicts and Protected

Zone. Two aircraft are said to be in conflict if their vertical separation

is (strictly) less than H, H > 0, and their horizontal separation is (strictly) less than D, D > 0. A body

in the 3-D space, called protected area, is assigned to each aircraft such that a conflict is equivalent to an

intrusion of another airplane into its protected area. The protected area forms a cylinder (hockey-puck,

nickel, pizza) of altitude H and radius D around the position of the aircraft. The values H -- 1000 ft (feet)

and D -- 5 nm (nautical miles) are commonly used.

Note that the boundaries are not considered part of the protected area. We will see later that this choice

enables optimal ownship maneuvers that touch the boundaries of the intruder protected area.

2.2. AOP Conflict Detection.

The input to the strategic AOP conflict detection algorithm [8] is a

set of trajectories, one of which is the ownship trajectory. A trajectory is a list of points, called nodal points,

which are assumed to be joined by linear segments. Each nodal point contains the intended aircraft state

(position and velocity vector) at a given time. Since conflict detection is assumed to be asynchronous, the

first step of the algorithm is to synchronize all the trajectories. This is done by taking time steps of duration

A and then measuring the distance between the trajectories at every step during a lookahead period of time. If after n time steps there is a violation of the ownship protected zone, then a conflict is detected.

We illustrate the situation in Figure 2.1, where a loss of separation implements several heuristics to avoid unnecessary calculations.

occurs at time hA. The algorithm

Since the algorithm does not compute of A is crucial in this approach. Indeed, CTAS uses A = 10 seconds.

the actual time when the first loss of separation occurs, the choice if A is too large, near misses can occur without being detected.

The synchronization

step introduces, in fact, a time and space discretization.

In recent work, we have

discovered that discretization makes formal verification more difficult [4]. Moreover, discretization of tra-

jectories can lead to an accumulation of modeling inaccuracies that lead to imprecise conclusions.

We

1FACET is a CD&:R analysis tool rather than a flight deck decision support tool. 2The AOP detection algorithm also detects conflicts with hazard areas. That kind of detection is outside the scope of this
paper.

0 At

F_c. 2.1. Strategic AOP conflict detection

have successfully verified a conflict alerting algorithm using a continuous trajectory trajectory models are well suited to formal verification.
The approaches exhibited in the remainder of this section use a 2-D geometry.

model [9]. Continuous

2.3. Conflict Detection.

Let a_, v_ and _, v_ be the position and ground speed vector of the ownship

and intruder aircraft, respectively, at time 0. We assume that the ground speeds are constants. Separation

is lost at time t if and only if the projected distance between both aircraft at time t is strictly less than D,

i.e.,

I(a_ - _) + t(v_ - v_)l2 < D2 .

(2.1)

This constraint has solutions for t if and only if Equation 2.2

I(a_ - _) + t(v_ - v_)l 2 = D 2

(2.2)

has two solutions tl and t2 such that tl # t2. The two solutions correspond to the times when the loss of separation starts and ends. Note that by definition, if tl = t2 no lost of separation occurs.
The above procedure is used in both ASAS (modified potential field) and FACET (Bilimoria's geometric optimization) algorithms for conflict detection in 2-D [6, 2].

2.4. Modified

Potential

Field Resolution.

If a conflict is predicted, the modified potential field

approach (originally due to [5] and implemented in ASAS) computes the time of closest separation _- between

the ownship and the aircraft (T = (tl + t2)/2). Then, a new speed vector for the ownship is calculated such

that the distance at time 7- between the aircraft is exactly D. The solution is illustrated in Figure 2.2 where

a_(T) and a_(T) are the ownship and intruder projected positions, respectively, at time T, v'o is the ownship's

new speed vector, and a_o(T) is the new projected position of the ownship at time T.

The modified potential field approach does not solve conflicts. If the ownship maneuvers towards the new

speed vector, and no further action is taken, then there will be a conflict after time T. Without cooperation

of the intruder, the ownship will have to pursue repeated maneuvers to only approximate a solution. To

completely solve the conflict, even an infinite number of maneuvers are necessary.

2.5. Geometric

Optimization

Resolution.

In this approach, proposed by Bilimoria [2] and imple-

mented in FACET, the intruder is considered fixed in space, and the ownship position g and velocity vector

g are taken relative to the intruder state, i.e., g = a_ - _ and g = v_ - v_. A new relative speed vector for

the ownship solves the conflict if it does not intersect the interior of the intruder protected area. Among

_(_ )

\\\\ \\\\ \
\
/

3o

F_G. 2.2. Modified Potential Field resolution

the infinitely many new speed vectors that solve the conflict, Bilimoria chooses angle to the original speed vector. Such speed vectors are called optimal.

those

which minimize

their

As illustrated

in Figure 2.3, any optimal solution is tangential

to the intruder's

protected

zone. Any

other solution requires a greater change of the ownship relative ground track. Each touch point A and

determines

a new ownship relative ground track which is optimal under certain constraints.

For instance the

target point A is optimal under the constraint

that only a left turn may be made. The length of the speed

vector may be arbitrarily

chosen. A minimal solution is proposed in [2].

s

•
J••
/•/i
/ ••J • J• J ••
j" J••J

\\ \
b_ /
\
/

...... B F_G. 2.3. Geometric Optimization resolution

3. An Approach

to 3-D CD_R.

The Geometric Optimization

algorithm in [2] uses a 2-D geometry,

i.e., it detects and solves conflicts in the horizontal

plane. In the Modified Potential

Field algorithm

imple-

merited in ASAS [6], 3-D conflicts are decomposed

into horizontal

and vertical conflicts which are detected

and solved independently.

Then, the solutions are composed to obtain a 3-D maneuver.

This approach is

appealing for its simplicity, but it is rather dimcult to prove correct.

We pursue a true 3-D geometric analysis to conflict detection

Bilimoria's

horizontal

CD_R approach to three dimensions.

and resolution.

In this section we extend

Given the positions and speed vectors of two aircraft (ownship and intruder),

we compute the relative

position 5 = v_ - _ and relative speed _* = v_ - _ of the ownship with respect to intruder referential.

We

take a coordinate

system where the origin is at the intruder position and a_ ( 0, au = 0 (see Figure 3.1).

a

F_G.

3.1.

3-D coordinate

system

and protected

zone

3.1. 3-D Conflict Detection.

The relative ownship trajectory L is the half line

L-- {ff+t_ I t>O}.

(3.1)

We say that there is a conflict between the ownship and the intruder aircraft if and only if ff E P, where P is the protected zone

P= {(x,y,z) l x2 +y 2 <D 2 and -H < z <H}.

(3.2)

The two aircraft are predicted to be in conflict if the relative trajectory L intersects the protected zone P. To compute the time interval where the projected intrusion occurs, we compute the intersection between L and the boundary of P. The boundary consists of two parts: (1) the lateral surface around the cylinder

Pl = {(x,Y,Z) l x2 +Y 2 = D 2 and - H < z < H}

(3.3)

and (2) the top and bottom bases

P2 = {(x,Y,Z) l x2 +Y 2 < D 2 andlzl=H}.

(3.4)

Observe that we count the top and bottom circles to the lateral surface and not to the bases.

If the half line L does not intersect P1 nor P2, then the two aircraft are predicted to be in conflict.

Otherwise, we compute times tl and t2 such that aircraft will be in conflict during the interval tl < t < t2.

Assume that the ownship and the intruder are not in conflict. The following algorithm returns true if

the two aircraft are predicted to be in conflict, and false otherwise. It has two parameters: ff -- (ax, 0, az)

and g = (vx, vu, v_).

1. Case Vz -- 0. This case corresponds to 2-D resolution. Return true if lazl _ H, Vx > 0, and the

discriminant D2(v_ + v_) - a_2vu2 is positive. Otherwise, return false.

2. Case Vz _ O. Let tl -- H--a_ and t2 - -H-a_ Vz Vz

These are the times when the trajectory reaches

the altitudes ±H. Let dl, d2 denote the squares of the horizontal distances to the intruder at times

tl, t2, respectively. We have three cases:

(a) Case dl < D 2 and d2 < D 2. There are two intersections with the bases P'2, provided that the

times tl, t2 are in the future. Return true if min(tl, t2) _ 0, and return false otherwise.

(b) Casedl _ D 2 and d2 _ D 2. In this case there are no intersections with the bases, but there may

be intersections with the lateral surface P1. Return true if vx > 0 and D 2 (v_ + v_) -- axV2 2x > O. Otherwise, return false.

(c) Case dl _ D 2 and d2 > D 2. We have one intersection with a base at time tl. Return true if

tl _ 0. Otherwise, return false. (d) Case dl > D 2 and d2 _ D 2. We have one intersection

with a base at time t2. Return true if

t2 _ 0. Otherwise, return false.

3.2. 3-D Conflict Resolution:

The Target Set. We assume that the ownship and the intruder are

not yet in conflict, but that they are predicted to be in a conflict. We want to modify the relative speed

vector _*to a vector v_ such that the half line L' = {if+ v_t I t > 0}, does not intersect the protected zone.

Among the various solutions, we focus on those that modify the vector v_ in an optimal way, i.e., such

that L' touches the boundary of P. We will also consider the special solution v_ = 0 (i.e., the two aircraft

have exactly the same speed) as optimal. Positive multiples of optimal solutions are again optimal solutions.

Hence, we shall first characterize the directions of optimal solutions.

In what follows we assume that ff is not on the boundary of the protected area P (the case where ff is

on this boundary must be handled separately), direction of an optimal solution is determined by one target

point of the half line L' with the boundary of P. We must indeed be aware of half lines touching one of the

boundary circles of the lateral surface in two points if a_ = ±H. Let a target set of ff be a set of target points

such that for every optimal solution one of its target points is in the set. The kernel of our 3-D conflict

resolution algorithm is the computation of a suitable target set.

A target point may be either on the lateral surface P1 or on the bases P'2. If we have a target point

on one of the bases, then L' must touch an open line segment of the base, and moreover it must touch the

lateral surface at two points. In this case we decide to take one of the latter points as target points. So all

target points are on the lateral surface.

A target point satisfies two things: (1) it is on the boundary of the protected zone, and (2) the half line

L' passing on this point must not intersect the protected zone (only its boundary). If the target point has coordinates (x, y, z) the first condition rephrases x 2 + y2 = D 2 and -H < z < H. The second is that for all

time t > 0, (a_ + tv_,t%,a_ + tv_) _ P. Our main goal on this computation is to remove the phrase

"for all time t > O" to get an algebraic

characterization

of the target set. Let to be the time when the half line L' crosses the target point (x, y, z),

i.e., x = a_ +v_to,y = v_' to, z = a_ + v_to. We define T = t/to as the normalized time on this half line. The half line L' can be written as the set of points (ax + T(x - a_), Ty, a_ + T(z - a_)) for T > 0. The condition

that this half line does not intersect the protected zone is rephrased: For all T > 0 either

+ T(x - + >_D

(3.5)

or

Using x 2 + y2 = D 2, Formula 3.5 yields

la_ + T(z - a_)l >_ H.

(3.6)

(T - 1)[(T - 1)((x - a_) 2 + y2) + 2(D 2 _ axx)] >_ 0

(3.7)

and Formula 3.6 yields

Iz + (T- 1)(z- a_)l _ H.

(3.s)

First we consider the target points such that -H < z < H and then those such that Izl = H. • Case -H < z < H. For some time T in an interval around 1, Formula 3.8 does not hold, i.e.,

Iz + (T- 1)(z- az)l < H.

Therefore, hence

Formula 3.7 must hold for an interval around 1. Thus, we must have D 2 - axx = 0 and

x = D2/ax.

As x 2 +y2 = D 2, we get

where c is -I-1. As the target set must be on the boundary of the protected area, we must have -a_ _> D. It is easy to check that all points such that x = D2/ax, y = -cDv/_x - D2/ax and -H < z < H are target points. • Case Izl = H. If z and z - az have the same sign, Formula 3.8 is equivalent to T _> I, and we must have for all T < 1
(T- 1)[(T- 1)((x- a_) 2 +y2) + 2(D 2 _ a_x) >_ 0
and hence D 2 - a_x < 0, i.e., x < D2/a_. Symmetrically, if z and z - a_ have different signs, we must have x > D2/ax. The relative signs of z and z - a_ depends of z, which can be +H, and the position of a_ with respect to +H. We analyze all the cases. 1. Case -H < a_ < H and -a_ > D. In this case, the target set is the set of points (x, y, z) of P1 such that x = D2/a_ or (z = H and x < D2/a_) or (z = -H and x < D2/a_). See Figure 3.2.

ff
F_G. 3.2. Target set. Case -H < az < H and -ax > D
2. Case a_ < -H and -ax > D. In this case, the target set is the set of points (x, y, z) of P1 such that x = D2/a_ or (z = H and x < D2/a_) or (z = -H and x > D2/a_). See Figure 3.3.
3. Case H < a_ and -a_ > D. In this case, the target set is the set of points (x, y, z) of P1 such that x = D2/ax or (z = H and x > D2/a_) or (z = -H and x < D2/a_). See Figure 3.4.
4. Case a_ < -H and -a_ < D. In this case, the target set is the set of points (x, y, z) of P1 such that z = -H. See Figure 3.5.
5. Case H < a_ and -a_ < D. In this case, the target set is the set of points (x, y, z) of P1 such that z = H. See Figure 3.6.

F_G3..4.Target set. Case H < az and -ax __ D

6. Case a_ = -H and -ax > D. In this case, the target set is the set of points (x, y, z) of P1 such that x = D2/ax or (z = H and x < D2/a_) or z = -H. See Figure 3.7. Notice that we get the same set of directions as the target set in Figure 3.3. These directions are already included in case (2).
7. Case a_ = H and -a_ > D. In this case, the target set is the set of points (x, y, z) of P1 such that x = D2/a_ or z = H or (z = -H and x < D2/a_). See Figure 3.8. We get the same set of directions as the target set in Figure 3.4. These directions are already included in case (3).

4. Constrained

Solutions.

In the previous section, we got an infinite set of target points (which

defines optimal directions for v_). A new ownship speed vector _ can be calculated from any point in the

target set and any length of the relative speed vector v_. Among all these vectors, representing maneuvers,

some are more convenient than others. In this section, we select solutions where only one parameter of the

(absolute) ownship speed vector is modified, i.e., ground speed, ground track, or vertical speed.

As we have seen, the target set is a subset of the set of points in the set pt _- p_ [2 P._ (see Figure 4.1), where

P[ = P._ =

{(x,y,z) {(x,y,z)

I x2 +y2 = D2 and z =cH and c = ±l}

Ix = D2/ax and y = -cDv/_

-D2/a_ andc = ±1}

(pointsincircles), (points in lines).

To get constrained solutions, we first compute the solutions on this set satisfying a given constraint. For that, we assume that at some time t, the point (x, y, z) = (a_ + t(V_o_ -vi_), t(V_o_ -vi_), a_ + t(V_o_ -vi_)) is in Pt and we proceed by case analysis on P[ and P._. A special case, when v_ = 0, is also considered. We ignore points where t > 0. Once the solutions are found, we check whether they belong to the target set or not.
4.1. Ground Speed Change Only. We have V'o = (k Vox,k Voy,Voz) for some k > 0. We must determine the possible k positive such that at some time t, the point (x, y, z) = (ax + t(V_o_ -vi_), t(V_ou viu), a_ + t(V_o_ - vi_)) is on the target set.

F_G3..5.Target set. Case az < -H and -ax < D

F_G. 3.6. Target set. Case H < az and -ax < D

1. Points on the circles P_. We have
where c -- ±1. Equation 4.2 yields t = (oH - a_)/(Vo_ - vi_).
Equation 4.1 rewrites to (ax + t(kVox - vi_)) 2 + (t(kVo_ - vi_)) 2 = D 2,

(4.1) (4.2)

i.e.,

t2(V2o_ + V2o_)]k2 + [2(a_ - tvi_)tVox - 2t2Vo_Vi_]k + [(a_ - tvi_) 2 + t2v?_ - D 2] = O.

We solve this equation for k. 2. Points on the lines P,_. We have

x = D2/a_ y = -cDv/_

- D2/a_,

(4.3) (4.4)

where c -- ±1. From Equation 4.3,

ax + t(kvo_ - vi_) = D2/a_ k = (D 2 - a_)/(ta_vox)

+ vi_/Vo_.

Equation 4.4 yields to

(D 2 - a_)vo_/(a_vo_) + tvixvo_/vo_ - tvi_ = -cDv/a_ - D2/a_.

(4.5)

F_G3..7.Target set. Case az = -H and -ax > D

F_G. 3.8. Target set. Case az = H and -ax > D

We solve Equation 4.5 in t:

t = (-cDvoxV_

- D 2 + (a_ - D2)vou)/(ax(vi_Vou

- Vo_Viu)).

Thus, we deduce

k = (viuv_ - D 2 - vi_cD)/(VouV_

- D 2 - Vo_CD).

We analyze the singularities. * Case Vo_ = vi_. The vector v_ - v_ is horizontal and will remain horizontal if we change the ground speed of the ownship. Solutions, if any, are tangential to the circle and also belong to P._ and those are handled in case 2. Therefore, there are no solutions. * Case cDvox = VouV_ - D2" No solution, since t = 0. * Case -a_ < D. No solution, since the set P._ is empty. * Case -a_ = D. There is a single line and the relative initial position of the ownship is on that line. The only way to reach a target point on that line is if _ is vertical or null. If VixVoy -- VoxViy : 0 then there is a solution: Vo' x = vi_,V'ou = Viy. Otherwise, there is none. * Case vi_Vou - VoxVi_ = 0. The horizontal components of _ and v_ are parallel, these two horizontal components cannot be the same as the aircraft are predicted to be in conflict and -a_ _ D, thus the relative speed g cannot be vertical or null. As the horizontal part of v_ is not 0, the only way to change the direction of the relative speed vector by changing the ownship ground speed is to take Vo' _ = vi_, Yo'u = Viy. This way, _ is vertical or null. If Vo_ _ vi_ then is vertical and since -a_ > D, this is not an optimal solution. If Vo_ = vi_ then we have the solution _ = 6.
* Case Vox = 0". Since vi_Vou - Vo_Viu _ 0, we have vi_ _ 0 and you _ O. We also have

x = ax --tVix

and x reaches D2/a_ at t = (a_ -D2)/(a_vi_)

independently of k. At that time, we must have

v : - V2/a

(a_ - D2)/(axvi_)(kvou

- viu) = -cD_/a_ - D2/a_

k = (viu - cDvi_/(VouV_

- D2)).

10

F_G4..1.Superset of target points

This formula is a particular case of the general one. 3. Special case v_ = 0". The only way to reach _ = 0"by changing the ownship ground speed is to have
vixVou - VoxViu = 0 and Vo_ = vi_. This is already included as a limit case above.
4.2. Ground Track Change Only. Since ground speed and vertical speed are constant, we have

Vo,2x -_-ro,2y = Vo2x -_-ro2y
Vo' z = Voz

(4.6)
(4.7)

and we must determine the possible Vo' _ and Vo' u such that at some time t, the point (x, y, z) = (a_ + t(V'o_ Vix), t(Vloy -- Viy), az + t(V'oz -- Viz)) is on the target set.
1. Points on the circles P_. We have

x 2 + y2 = D 2 z = oH.

(4.8) (4.9)

Equation 4.9 gives t = (oH - az)/(Voz - Viz). Equation 4.8 rewrites to

2t 2Vo, uVi _ = (a_ - tVix) 2 + t 2Vi2y + -_2 Vo,2x + -_2 Vo,2y_ D2+ 2(a_-tvix)tV'o_ = (ax -- tVix) 2 -4-t 2Vi2y -_-t2 Vo2x -_-t2 Vo2y _ D 2 + 2(ax - tVix)tV'ox = E + 2(ax - tvi_)tV'o_ ,

where E = (a_ - tvi_) 2 + t 2vi2u + t 2 Vo2x + t2 yo2u _D 2. Therefore,

Using Equation 4.6, we get

-4 Vo,2yVi2y = (E + 2(a_ - tvi_)tV'o_) 2.

4tnv2y(V2ox + ro2y - Vo,2x ) = (E + 2(a_ - tvix)tV'o_) 2

Hence,

4t2((a_ - tvix)2 + t 2vi2u)Vo,_2 + 4E(a_ - tvi_)tV'o_ + E 2 - 4t 4 vi2_(Vo2x + Vo2_ ) = 0.

(4.10)

11

To solve Equation 4.10 on Vo, x , we compute its discriminant A = 16v_ut4A' , where

A' = -E2 +4t2(v2ox+v2ou)((a_

_ tvi_)2 + vi_t22).

If A' _ 0, the solutions are

Vo' _ = (-E(a_ - tvix) + c'vi_tv/_)/(2t((a_ where c' = ±1. Then, we get

- tvi_) 2 + t2v?_jj_,

(4.11)

V'o_ = (E + 2(a_ - tvi_)tV'ox)/(2t2viu) = (Etvi_ + c'(a_ - tvi_)v/_)/(2t((a_

- tvi_) 2 + t2v_)).

(4.12) (4.13)

We analyze the singularities. * Case Vo_ = vi_. The vector v_ - _ is horizontal and will remain horizontal if we change the ground track of the ownship. Solutions, if any, are tangential to the circle and also belong to P._ and those are handled in case 2. * Case viu = 0 and ax _ tvi_. The two solutions of the equation for V'o_ given by the formula 4.11. There are two solutions for you

Voyt = _t _/V2ox + V o2 y -- Vot2 x "

In fact, this formula is a particular case of the general one.

* Case viu = 0 and ax = tVix. At time t, the intruder will be where the ownship is at time 0.

Changing the ownship ground track does not affect the horizontal distance between the aircraft

at time t (that will be t_/V2ox + Veoy in all cases). Therefore, 2. Points on the lines P._. We have

it does not help to solve the conflict.

x = De/a_ y = -cDvFa_

- De/a_.

(4.14) (4.15)

If -ax _ D then Vo_ = vi_ is not a solution and Equation 4.14 gives t in function

Equation 4.15 rewrites to

D e - a_ t-
a_(v% - vi_)

of v_o_

(De - a_)/(a_ (vL - vi_))(v'_ - v_) = -_D v_ - De/ax (V'o-_ v_ )l (v'o_- v_ ) = cD I v_ - D e _'o_= _D/v_ - De(_'o_- _) + _

Replacing V_ouin Equation 4.6, we get
(cD/v_ - De(v'ox- vi_) + vi_)e + V,o2_= Veo_+ Veow.

(4.16)

We solve Equation 4.16 and get Vo' _ and then yo'u. We analyze the singularities.

* Case -ax _ D. No solution since the set P._ is empty.

* Case -a_ = D. The only solution is Vo' _ = vi_, yo'u = viu. In this case, we must have

Vix2 ___V2y=

Vo2 x + Vo2 y. Hence, v_ is vertical or 0.

3. Special case v5 -- 0. The only way to get v5 -- 0 by changing the ownship ground track is to have

e e e e andVix -Jr- Viy = Vox

-Jr- roy

Voz = Viz"

In this case, we take V'o = _i"

12

4.3. Vertical

Speed Change

Only. If the target point is on the line P._, it is also in P_. We only

need to consider the cases where the point is in P_ and v-} -- 0".

1. Points on circles P_. Thus, we have

x 2 + y2 = D 2 z = oH.

(4.17) (4.18)

Equation 4.17 rewrites to

(ax + t(Vox - vi_)) 2 + (t(Vou - viu)) 2 = D 2.

(4.19)

We solve Equation

4.19 to get t. Equation 4.18 yields to
!
Vo_ = vi_ + (oH - a_)/t.

If Vo_ = vi_, you = viu, Equation conflict.

4.19 has a solution only when -a_ = D and in this case there is no

2. Special case v_ = 0. The only way to reach v_ = 0 by changing
!
Vox = Vix and roy = Viy. We take Voz = viz.

the ownship

vertical

speed is to have

5. A Prototype

Implementation.

We have experimented

this algorithm

with a prototype

imple-

mentation.

The prototype

is about a couple of hundred lines of Java, containing

only assignments

and

conditionals.

The functions used are the four operations

and square root, but no trigonometric

functions

(except in the interface, to print the ground track of the aircraft from the computed

Cartesian

coordinates

of the speed vector). The implementation

is available at http://www, icase, edu/~munoz/sources

.html.

Here is a typical execution:

We have two aircraft flying at the same altitude with a horizontal

separation

of 10 nm. In the coordinate

system where the intruder is at the origin and the ownship at coordinates

(-10, 0, 0), the ownship ground track is 0 and the intruder ground track is 180 °. The ground speed of the

ownship is 400 nm/h and that of the intruder is 300 nm/h. The ownship is climbing at a vertical speed of

1000 ft/mn and the intruder is descending

at a vertical speed of -1000 ft/mn. The input to the algorithm

is a file containing Ground distance

the following information. = i0 nm Vertical distance

= 0 ft

0wnship:

0 deg 400 nm/h

i000 ft/mn

Intruder: 180 deg

300 nm/h

-i000 ft/mn

The programs detects a conflict and proposes five solutions:

Conflict in the time interval (25.7143,29.1456)

There are 5 solutions.

Modify GROUND SPEED

317.5889 nm/h (TOP)

Modify Modify

GROUND GROUND

TRACK TRACK

29.1888 -29.1888

deg deg

(TOP) (TOP)

Modify VERTICAL SPEED 1266.8799 ft/mn (TOP)

Modify VERTICAL SPEED -3266.8799 ft/mn (BOTTOM)

The firstsolution is to reduce ground speed to 317 nm/h. The second and third modify ground track.

The last two solutions modify the vertical speed. On the other hand, in the first_ur solutions, the target

points are on the top circle of the target set. In the last solution, the target point is on the bottom.

13

Notice that some solutions may not be physically possible. For instance, the last solution proposes an absolute change of vertical speed of more than 4000 R/mn. The algorithm does not distinguish between the solutions. In fact, it is intended to be used in a more general system, where the choice of one solution, among the multiple that have been proposed, may use other kind of information such as type of aircraft, weather conditions, other potential intruders, intent information, etc.

6. Conclusion.

We have given a complete and rigorous analysis of tactical detection and resolution of

air trafllc conflicts in the 3-dimensional space and described a new CD_R algorithm that produces a set of

solutions. Each solution proposed by the algorithm is a constrained single maneuver that, when performed

by the ownship, solves the conflict without collaboration of the intruder aircraft. Experiments have indicated

that our algorithm always yields at least two solutions. After thousands of randomly generated examples

the average was three solutions per conflict.

Although the algorithm only uses state information, it can be integrated within a more general system, such as AOP, to detect and solve conflicts in piecewise linear flight plans. It is well suited to serve this purpose. First, it is efllcient. Particularly, it does not contain loops nor calls to trigonometric functions. Moreover, intent information can be used to chose among the multiple solutions that are proposed. We plan to pursue this direction of research in future work.

In the near future, we will formally verify the correctness of the algorithm in the PVS [10] seek to prove that the solutions proposed indeed solve the conflict and that there is always at least one solution proposed, and extend our approach to deal with multiple aircraft.

Acknowledgment.

The authors

versions of this manuscript.

are grateful to Rick Butler for his helpful comments

on preliminary

REFERENCES

[1] ADVANCED AIR TRANSPORTATION TECHNOLOGIES (AATT) PROJECT, Concept definition for Dis-

tributed Air/Ground Traffic Management (DAG-TM), version 1.0. NASA Ames Research Center -

NASA Langley Research Center, 1999.

[2] K. BILIMORIA, A geometric optimization approach to aircraft conflict resolution, in Guidance, Naviga-

tion, and Control Conference, no. AIAA 2000-4265, Denver, CO, August 2000.

[3] K. BILIMORIA, B. SRIDHAR, G. CHATTERJI,

K. SHETH, AND S. GRABBE, FACET: Future ATM

concepts evaluation June 2000.

tool, in 3rd USA/Europe

Air Trafllc Management

R&D Seminar, Naples, Italy,

[4] V. CARREfiO AND C. Mufioz, Aircraft trajectory modeling and alerting algorithm verification, in The-

orem Proving in Higher Order Logics: 13th International Conference, TPHOLs 2000, J. Harrison

and M. Aagaard, eds., vol. 1869 of Lecture Notes in Computer Science, Springer-Verlag,

2000,

pp. 90-105. An earlier version appears as report NASA/CR-2000-210097,

ICASE No. 2000-16.

[5] M. EBY, A self-organizational

approach for resolving air traffic conflicts, Lincoln Laboratory Journal,

7 (1994).

[6] J. HOEKSTRA, R. RUIGROK, R. VAN GENT, J. VISSER, B. GIJSBERS, M. VALENTI, W. HEESBEEN,

B. HILBURN, J. GROENEWEG, AND F. BUSSINg, Overview of NLR free flight project 1997-1999,

Tech. Report NLR-CR-2000-227,

National Aerospace Laboratory (NLR), May 2000.

14

[7] J. KUCHAR AND L. YANG, Survey o] conflict detection

and resolution

modeling

Guidance,

Navigation,

and Control Conference,

no. AIAA-97-3732,

New Orleans,

pp. 1388-1397.

methods, in AIAA LA, August 1997,

[8] J. MCDONALD AND R. VIVONA,

Tech. Report NASA

November

2000.

Contract:

Strategic airborne conflict detection o/air traffic and area hazards,

NAS2-98005

RTO-29, TITAN Systems Corporation,

SRC Division,

[9] C. MUNOZ, R. BUTLER,

algorithms.

Submitted

~munoz/Drafts/conflict

V. CARRENO, AND G. DOWEK, as NASA Technical Memorandum.
.pdf, 2001.

On the verification

o/conflict

Available at http'//www.icase.edu/

detection

[10] S. OWRE, J. M. RUSHBY, AND N. SHANKAR,

tional Conference

on Automated

Deduction

PVS: A prototype verification

system, in llth

(CADE), D. Kapur, ed., vol. 607 of Lecture

InternaNotes in

Artificial Intelligence,

Saratoga,

NY, June 1992, Springer-Verlag,

pp. 748-752.

[11] RADIO TECHNICAL COMMISSION FOR AERONAUTICS,

Final report o/ the RTCA board o/directors'

select committee

on flee flight, Tech. Report Issued 1-18-95, RTCA, Washington,

DC, 1995.

[12] B. SANFORD, K. HARWOOD, S. NOWLIN, H. BERGERON, H. HEINRICHS, G. WELLS, AND M. HART,

Center/TRA

CON automation

system: Development

and evaluation in the field, in 38th Annual Air

Traffic Control Association

Conference,

October 1993.

15

REPORT

DOCUMENTATION

PAGE

Form Approved
OMB No. 0704-0188

Public reporting burden for this collection of information is estimated to average 1 hour per response, including the time for reviewing instructions, searching existing data sources, gathering and maintaining the data needed, and completing and reviewing the collection of information. Send comments regarding this burden estimate or any other aspect of this collection of information, including suggestions for reducing this burden, to Washington Headquarters Services, Directorate for Information Operations and Reports, 1215 Jefferson
Davis Highway, Suite 1204, Arlington, VA 22202-4302, and to the Office of Management and Budget, Paperwork Reduction Project (0704-0188), Washington, DC 20503.

1. AGENCY

USE ONLY(Leave

blank)

2. REPORT DATE
April 2001

3. REPORT TYPE AND DATES
Contractor Report

COVERED

4. TITLE AND SUBTITLE
Tactical conflict detection

and resolution

in a 3-d airspace

5. FUNDING

NUMBERS

C NAS1-97046 WU 505-90-52-01

6. AUTHOR(S) Gilles Dowek, C_sar Mufioz, Alfons Geser

7. PERFORMING ORGANIZATION NAME(S) AND ADDRESS(ES) ICASE
Mail Stop 132C NASA Langley Research Center Hampton, VA 23681-2199

9. SPONSORING/MONITORING National Aeronautics and Langley Research Center Hampton, VA 23681-2199

AGENCY NAME(S) AND ADDRESS(ES) Space Administration

8. PERFORMING

ORGANIZATION

REPORT NUMBER

ICASE Report No. 2001-7

10. SPONSORING/MONITORING AGENCY REPORT NUMBER
NASA/CR-2001-210853 ICASE Report No. 2001-7

11. SUPPLEMENTARY

NOTES

Langley Technical Monitor: Dennis M. Bushnell

Final Report

Submitted to the Fourth International

Air Traffic Management

R&D Seminar ATM-2001.

12a. DISTRIBUTION/AVAILABILITY

STATEMENT

12b. DISTRIBUTION

CODE

Unclassified-Unlimited

Subject Category 60, 61

Distribution:

Nonstandard

Availability: NASA-CASI

(301) 621-0390

13. ABSTRACT

(Maximum 200 words)

This paper presents an algorithm for detection and resolution of air traffic conflicts in a 3-dimensional (3-D) airspace

for two aircraft, namely ownship and intruder. A conflict is a projected incursion of the intruder aircraft within the

protected zone of the ownship. A solution is a single maneuver, to be performed by the ownship, that effectively

keeps the required minimum separation without cooperation of the intruder aircraft. The input to the algorithm

is the state information, i.e., horizontal position, altitude, ground track, and vertical and ground speed, of both

aircraft. The algorithm outputs a set of solutions. Each solution modifies only one state parameter of the ownship:

ground track, ground speed, or vertical speed. The proposed algorithm is suitable for formal verification.

14. SUBJECT
conflict collision

TERMS
detection, avoidance

conflict

resolution,

CD&R algorithm,

3-dimensional,

17. SECURITY

CLASSIFICATION

OF REPORT
Unclassified

NSN 7540-01-280-5500

18. SECURITY

CLASSIFICATIOI_

OF THIS PAGE
Unclassified

19. SECURITY

CLASSIFICATION

OF ABSTRACT

15. NUMBER

OF PAGES

2O

16. PRICE CODE
A03

20. LIMITATION OF ABSTRACT

Standard Form 298(Rev. 2-89)
Prescribed by ANSI Std. Z39-18 298-102

