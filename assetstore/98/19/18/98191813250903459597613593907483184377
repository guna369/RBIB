Information Processing Letters 102 (2007) 124–126

www.elsevier.com/locate/ipl

A note on the size of minimal covers
Vaston Costa a,∗, Edward Haeusler a, Eduardo S. Laber a, Loana Nogueira b
a Departamento de Informática da Pontifícia, Universidade Católica do Rio de Janeiro (DI PUC-Rio), Rua Marquês de São Vicente 225, Gávea Rio de Janeiro 22453-900, RJ, Brazil
b Instituto de Computação da Universidade Federal Fluminense (IC UFF), Rua Passo da Pátria 156, Bloco E 3◦ andar, São Domingos Niterói 24130-240, RJ, Brazil
Received 4 January 2006; accepted 20 October 2006 Available online 4 December 2006
Communicated by F. Meyer auf der Heide

Abstract
For the class of monotone boolean functions f : {0, 1}n → {0, 1} where all 1-certiﬁcates have size 2, we prove the tight bound n (λ + 2)2/4, where λ is the size of the largest 0-certiﬁcate of f .
This result can be translated to graph language as follows: for every graph G = (V , E) the inequality |V | (λ + 2)2/4 holds, where λ is the size of the largest minimal vertex cover of G. In addition, there are inﬁnitely many graphs for which this inequality is tight. © 2006 Elsevier B.V. All rights reserved.
Keywords: Finite combinatorial problems; Theory of computation; Computational complexity; Graphs; Boolean functions; Vertex cover

1. Introduction
Let f : {0, 1}n → {0, 1} be a monotone boolean function. A 1-certiﬁcate (0-certiﬁcate) for f is a minimal set of variables such that if all of them are set to 1 (0) then f evaluates to 1 (0) regardless of the values assigned to the other variables. Measures related to certiﬁcates play an important role in the study of monotone boolean functions [1].1
In [2], Simon shows that every monotone boolean function over a set of n variables has a certiﬁcate of size
* Corresponding author. E-mail addresses: vaston@inf.puc-rio.br (V. Costa),
herman@inf.puc-rio.br (E. Haeusler), laber@inf.puc-rio.br (E.S. Laber), loana@ic.uff.br (L. Nogueira).
1 In fact, the concept of certiﬁcate can be extended to every boolean function.

at least (1/2) log n − (1/2) log log n + 1/2. In [3], Wegener shows that this bound is tight up to O(log log n) terms for the monotone address function.
The size μ(f ) of the largest certiﬁcate (the largest among the 0-certiﬁcates and 1-certiﬁcates) for f plays a role in decision tree complexity. It is known that the minimum depth of a decision tree which evaluates f is at most μ(f )2 and that this bound is tight [1]. This parameter is also important in the study of the extremal competitive ratio of monotone boolean functions, a topic that has received some attention by the theory community recently [7]. It is known that the extremal competitive ratio of a monotone boolean function f is between μ(f ) and 2μ(f ) and it is conjectured that it is exactly μ(f ) [7,5,6].
Here, we study an issue related to the size of the largest certiﬁcate of f . For the class of monotone

0020-0190/$ – see front matter © 2006 Elsevier B.V. All rights reserved. doi:10.1016/j.ipl.2006.10.012

V. Costa et al. / Information Processing Letters 102 (2007) 124–126

125

boolean functions where all 1-certiﬁcates have size k, the inequality n kλk holds, where λ is the size of a largest 0-certiﬁcate of f . This can be proved almost directly by using Lemma 7.3 presented on Jukna’s book [4]. However, this bound is not tight.
The main result of our paper is the tight bound n (λ + 2)2/4 for the case k = 2. The restriction k = 2 allows us to work with graphs, where 1-certiﬁcates can be seen as edges and 0-certiﬁcates as minimal covers. Thus, our main result can be translated to graph language as follows: for every graph G = (V , E), |V | (λ + 2)2/4, where λ is the size of a largest minimal vertex cover of G.
We note that the quadratic upper bound |V | λ + λ2 can be proved in four lines as follows. Let C be the largest minimal cover of G and let v be the vertex of C with maximum degree. Then, observe that the degree d(v) of v is at most |C|, for otherwise any minimal cover that does not contain v would be larger than C. Thus, we have that |V | |C| + x∈C d(x) λ + λ2. As a matter of fact, to obtain our main result, we need to work harder.
2. The size of minimal covers
In order to ﬁx the notation, we present some basic deﬁnitions that are going to be used throughout this paper.
2.1. Deﬁnitions and notations
Given an undirected graph G = (V , E), a cover of G is a subset V of V such that for all edge (u, v) ∈ E either u ∈ V or v ∈ V (or both). A cover C is said to be minimal when ∀x ∈ C, C − x is not a cover. We say that a cover C of G is largest minimal if and only if |C| |S| for all minimal cover S of G. Observe that a largest minimal cover is not necessarily unique.
Let X ⊆ V and let x ∈ X. The external neighborhood of x with respect to (w.r.t.) X is the set denoted by NX(x) and deﬁned by
NX(x) = y (x, y) ∈ E and y ∈/ X .
The external neighborhood of a set U ⊆ X w.r.t. X is denoted by NX(U ) and deﬁned by
NX(U ) = NX(x).
x∈U
Let X ⊆ V . The external degree of x ∈ X, denoted by |NX(x)|, is the cardinality of NX(x), and the external degree of U ⊆ X is |NX(U )|.

2.2. Results

In what follows we present a lemma that is quite useful to establish our main result.

Lemma 2.1. Let G(V , E) be a simple graph and C a largest minimal cover of G. For all x ∈ C there is a set Sx (possibly empty) that simultaneously satisﬁes the three conditions below:

(1) Sx ⊆ C − {x}. (2) |Sx| |NC(x)| − 1. (3) NC(Sx) ⊆ NC(x).
Proof. Let S1 = (C − x) ∪ NC(x). We have that S1 is a cover of G (not necessarily minimal). Let T ⊆ S1 be a minimal cover for G. We have NC(x) ⊆ T , for otherwise one of the edges that touches x would not be covered by T . Let us deﬁne Sx = S1 − T . Note that Sx ⊆ C − x, which satisﬁes condition (1).
Since C is a largest minimal cover of G, we also have that |T | |C|. Thus,
|Sx| = |S1 − T | = |S1| − |T |
|S1| − |C| = C − {x} ∪ NC(x) − |C|
= NC(x) − 1.
Hence, we can conclude that Sx also satisﬁes condition (2) of the theorem.
In what follows we prove that NC(Sx) ⊆ NC(x). Let z ∈ NC(Sx). In this case, it must exist a vertex y ∈ Sx = S1 − T such that (y, z) ∈ E. Since y ∈/ T , we must have z ∈ T , for otherwise the edge (y, z) would not be covered by T . Finally,
z ∈ T ⇒ z ∈ NC(x) or z ∈ C − {x}.
Since z ∈/ C, we have that z ∈ NC(x). 2

Theorem 2.2. Let G(V , E) be a simple graph and let C be a largest minimal cover of G. Then

|V |

(|C| + 2)2 .

4

Proof. Let x ∈ C be the vertex with maximum external
degree w.r.t. C. We divide the proof into two cases.
Case (i). There is a vertex u ∈ C such that NC(x) ∩ NC(u) = ∅.
For each vertex v ∈ C, let Sv be the set given by the previous lemma. Since NC(x) ∩ NC(u) = ∅, it follows that Sx ∩ Su = ∅, for otherwise a vertex in the external neighborhood of Sx ∩ Su w.r.t. C would belong to NC(x) ∩ NC(u). By using the same reasoning we can

126 V. Costa et al. / Information Processing Letters 102 (2007) 124–126

conclude that both x ∈/ Su ∪ Sx and u ∈/ Su ∪ Sx . An upper bound on the size of V can be obtained as follows

|V | = |C| + NC(v)
v∈C

= |C| +

NC(v) ,

v∈C−Sx −Su

where the last equality holds because NC(Sx ∪ Su) ⊆ NC(x) ∪ NC(u) and x, u ∈ (C − Sx − Su). By isolating u, we get that

|V | |C| + NC(u) +

NC (v)

v∈C−Sx −Su−{u}

|C| + NC(u) +

NC(v) .

v∈C−Sx −Su−{u}

Since x is a vertex with the largest external degree, we have that

|V | |C| − |Sx| − |Su| − 1 × NC(x) + NC(u) + |C|.
Since |Sx| |NC(x)| − 1 we have that

|V | |C| − NC(x) − |Su| × NC(x)
+ NC(u) + |C|.
Finally, by using the fact that |Su| |NC(u)| − 1, we conclude that the right-hand side of the expression above is only maximized w.r.t. Su and NC(u), when |Su| = 0 and |NC(u)| = 1. Thus,

|V | |C| − NC(x) × NC(x) + 1 + |C|.

(1)

Case (ii). For every vertex u ∈ C, we have that NC(x) ∩ NC(u) = ∅. In this case,

|V | = |C| + NC(v) = |C| +

NC(v) .

v∈C v∈C−Sx

Because x is a vertex with the largest external degree and NC(x) ∩ NC(u) = ∅, for every u ∈ C, we have that

|V | |C| − |Sx| × NC(x) − 1 + 1 + |C|.

Since |Sx| |NC(x)| − 1, we have that

|V | |C| − NC(x) + 1 × NC(x) − 1 + 1 + |C|.

(2)

By maximizing the upper bounds given by Eqs. (1)
and (2) as a real valued function in the variable |NC(x)|, we establish our result. 2

In order to show that our bound is tight we take Kt+1, a complete graph with t + 1 vertices, and to each vertex
of Kt+1 we connect t different vertices, each of them with degree 1. Note that |V | = (t + 1) + (t + 1)t = (t + 1)2. In addition, the largest minimal cover C con-
sists of t vertices from Kt+1 and t vertices adjacent to the vertex of Kt+1 that is not picked up. Thus, |C| = 2t and |V | = (|C| + 2)2/4.

References

[1] H. Buhrman, R. de Wolf, Complexity measures and decision tree complexity: a survey, Theoretical Computer Science 288 (1) (2002) 21–43.
[2] H.-U. Simon, Tight Omega(log log n)-bound on the time for parallel RAM’s to compute nondegenerated Boolean functions, Information and Control 55 (1) (1982) 102–106.
[3] I. Wegener, The critical complexity of all (monotone) Boolean functions and monotone graph properties, Information and Control 67 (1–3) (1985) 212–222.
[4] S. Jukna, Extremal Combinatorics—With Applications in Computer Science, EATCS Texts in Theoretical Computer Science, Springer-Verlag, Berlin, 2001.
[5] F. Cicalese, E.S. Laber, A new strategy for querying priced information, in: Proceedings of the 37th ACM Symposium on Theory of Computing, ACM Press, Baltimore, MD, 2005.
[6] F. Cicalese, E.S. Laber, On the competitive ration of evaluating priced functions, submitted for publication.
[7] M. Charikar, R. Fagin, V. Guruswami, J. Kleinberg, P. Raghavan, A. Sahai, Query strategies for priced information, JCSS: Journal of Computer and System Sciences 64 (2002) 785–819.

