Information Processing Letters 60 (1996) 165-169

Information Processing Letters

Sorting permutations by block-interchanges
David A. Christie 1
Department of Computing Science, The University of Glasgow, Glasgow G12 8QQ, Scotland, United Kingdom
Received 8 November 1995; revised 19 September 1996 Communicated by V. Ramachandran

Abstract
Various global rearrangements of permutations, such as reversals and transpositions have recently become of interest because of their applications in genome analysis. The study of such rearrangements leads to computational problems that are of interest in their own right. In this paper we introduce an operation, called block-interchange, in which two substrings, or blocks, swap positions in the permutation. We demonstrate a polynomial-time algorithm for calculating the block-interchange distance of a permutation (i.e. the minimum number of block-interchanges required to transform the permutation to the identity). We also determine the block-interchange diameter of the symmetric group.
Keywords: Algorithms; Combinatorial problems; Sorting; String comparison; Permutations

1. Introduction
In classical methods of string comparison, strings may only mutate by operations that act on individual characters, e.g., insertions, deletions, and substitutions. Recently applications in molecular biology have motivated the study of larger scale mutations such as reversals [9,3], transpositions [ 21, and translocations [ 7,101, applied, in particular, to permutations rather than to general strings. Many of the resulting problems remain open as far as polynomial-time solvability or NP-completeness is concerned, though Caprara [4] has recently proved that sorting by reversals is NP-hard.
Consideration of such “global” operations on permutations leads to a number of algorithmic problems
’ SuppoIted by a postgraduate research studentship from the Engineering and Physical Sciences Research Council. Email: christie@dcs.gla.ac.uk.

that are of interest in their own right. For example, Aigner and West [ 1] have studied the problem of sorting a list by the repeated insertion of the leading element. Bounds for sorting a permutation by prefixreversals have been obtained by Gates and Papadimitriou [ 61.
Global operations on permutations may be thought of as generators of the symmetric group (or a subgroup of the symmetric group). Given an arbitrary set of generators, the problem of finding a minimal sequence that generates a permutation has been shown to be NP-hard by Even and Goldreich [5]. Jerrum [ 81 has shown that the problem is PSPACE-complete even when the generator set contains only two generators. However when the generator set is fixed, the NP-completeness results no longer apply and in [ 81 some polynomial-time algorithms for sorting permutations using global operations are given.
In this paper we introduce a new, natural global operation - the block-interchange - which can be

0020-0190/96/$12.00 Copyright @ 1996 Elsevier Science B.V. All rights reserved. PII SOO20-0190(96)00155-X

166 D.A. Christie/Information Processing Letters 60 (1996) 165-169

524 1 3 B

13

2

4

5

12

3

4

5

Fig. I. An example of sorting by block-interchange.

viewed as a generalisation of a transposition. In a block-interchange two non-intersecting substrings of any length are swapped in the permutation. In a transposition the substrings must be adjacent.
Given a permutation 7r = [ ~1 7r2 . . . T,] , a blockinterchange with parameters (i, j, k, I), where 1 < i < j < k < 1 < n + 1, is applied to rr by exchanging the blocks [ri . . . rpl] and [7~k . . . rl_11. Note that the special case of j = k, is a transposition.
The minimum number of block-interchanges that transform 7~ into (+ is the block-interchange distance between the two permutations. This value will be the same as the block-interchange distance between 9l.U -’ and the identity permutation. So finding the block-interchange distance between two permutations is equivalent to sorting a permutation using block-interchanges. The block-interchange distance of r, bid(r), is the length of the shortest sequence of block-interchanges that transforms r into the identity permutation. For example the permutation rr = [ 5 2 4 1 31, has block-interchange distance 2 as shown in Fig. 1.
If two elements are adjacent in the permutation 7~, but are not adjacent in the identity permutation then
we say they form a breakpoint, because at some stage in the sequence of block-interchanges that sorts rr, the two elements will have to be split apart. More precisely we define breakpoints exactly as Bafna and Pevzner [2] did for transpositions, i.e., we assume ~0 = 0 and r”+l = 12+ 1, and define a breakpoint as a value of i such that 1 < i < n + 1 and ri - ri-1 # 1. Define b(r) to be the number of breakpoints in the permutation. Note that the identity permutation is the only permutation with no breakpoints, and a blockinterchange can change b(r) by at most 4.
In this paper we will show that there is a polynomial-time algorithm for the evaluation of bid(r). This will be achieved by first demonstrating that for all permutations, except the identity permutation, a block-interchange exists that removes at least

two breakpoints. Then it will be proved using a graph model for the permutations that an algorithm which repeatedly applies such block-interchanges sorts w using the fewest number of block-interchanges. We then study the permutations of n elements which require the most block-interchanges in order to sort them and show that the block-interchange diameter of the symmetric group S,, is [n/2].

2. Minimal block-interchanges

Lemma 1. It is always possible to find a blockinterchange that removes at least two breakpoints from a given permutation, T, unless IT is the identity permutation.

Proof. Since rr is not the identity permutation, there

must be at least two elements in 7r that appear in the

wrong order i.e. there must be an x and a y such that

x<ybutr=[...y

. ..x . ..I.

Now choose x to be the smallest such value and

choose y to be the largest value in r to the left of this x.

Then x - 1 must be to the left of y in 7r since otherwise

this would contradict the choice of X. Similarly y + 1

must be to the right of x in 7~. Note that in fact x is

the smallest value such that 7rX # X. Hence r has the

form

7r=[l...x-l...y...x...y+l...].

The block-interchange with parameters

(Y’(x

- 1) + 1,9+(y) 7r-‘(X),?r-*(y

transforms 7r into d

-t 1, + 1))

?r’=[l . ..X-lx...yy+l

. ..I.

Notice that before this transformation there were
breakpoints at each place where the block-interchange
cut 7~. After the block-interchange there are at least
two fewer breakpoints in the permutation. Hence the lemma. q

We will call the block-interchange described in the above lemma the minimal block-interchange. Since we can remove at most four breakpoints with any block-interchange and a minimal block-interchange

D.A. Christie/Information Processing Letters 60 (1996) 165-169

‘UT
ab

-11
Cd

-11
ef

-11
9

h

UZ af

WI, 9d

‘-1) eb

-1) Ch

Fig. 2. The black edges that change when a block-interchange (which is not a transposition) is applied.

167

&= C, ad

r* e

C ‘-) d Cf

Fig. 3. The black edges that change when a block-interchange (which is a transposition) is applied.

removes at least two breakpoints, then an algorithm that repeatedly applies the minimal blockinterchanges gives us a 2-approximation algorithm for block-interchange distance. However when we examine these block-interchanges on a graph model we discover that this algorithm returns the exact solution.
3. The graph model
The graph model we use is that of a cycle graph as introduced by Bafna and Pevzner [2] when dealing with transpositions. The cycle graph, G(r), of a permutation r is a directed edge-coloured graph with vertex set (0, 1,. . . , n + 1) and edge set defined as follows. A grey edge connects vertex i to vertex i + 1 for 0 < i < n. A black edge connects vertex ri to vertex 7ri-1 for 1 < i 6 n + 1.
Since every incoming edge of a vertex can be uniquely paired with an outgoing edge of the other colour, we can easily completely decompose the graph into alternating cycles, and furthermore this decomposition is unique. The identity permutation is the only permutation that has n + 1 alternating cycles in its graph. The number of alternating cycles in G( 7r) is denoted by c( 7r).

A block-interchange changes only black edges in the graph. Three or four black edges are removed from the graph and replaced by new black edges as shown in Figs. 2 and 3.
Lemma 2. When a minimal block-interchange is applied c(v) increases by two.
Proof. A minimal block-interchange may change 3 or 4 black edges of G( 7r). If it changes 3 edges then those edges must be part of one cycle. If it changes 4 edges then those edges must be part of either one or two cycles. The three possible cases are shown in Figs. 4, 5, and 6. In each of these cases c(r) increases by two. Note that in the figures black edges are represented by thick edges, grey edges are represented by thin edges, and paths which start and tinish with a grey edge are represented by dotted thin edges. •i
Lemma 3. It is impossible to increase c(v) by more than two with a single block-interchange.
Proof. A block-interchange changes at most four black edges in the graph, so the only way that we could increase C(T) by more than two with a single block-interchange would be if one big cycle was

168 D.A. Christie/Information Processing Letters 60 (I 996) 165-169

t+m&*
x-l a

?a,--
Y.? _-

Yb

cx

-_,
d Y+l

X-l x

,/-----\
,i- A/--
db

\
.&Y)
ca

Y Y+l

Fig. 4. How a minimal block-interchange changes G( 9).

initialise visited and T-‘; cycles := 0; for i := 0 to n do begin
if not visited[i] then begin cycles := cycles + 1;
j := i;
while not visited[j] do begin visited[ j] := true; j := j + 1; {follow grey edge} j := r[r-l(j) - 11; {follow black edge} end
end end; return (n + 1 - cycles) 12;
fig. 7. An algorithm to calculate bid(r).

Fig. 5. How a minimal block-interchange changes G(T).

, .-, ___x--

‘\%

--- ,-------~---.

L”” QZ

X-l a

Y

\
x

I\ “‘&
b

Y+l

_~._
;‘-
X-l x

,----.
dk
i

\
“:I
a

^.
./_
Y Y*l

Fig. 6. How a minimal block-interchange changes G(T).

broken into four cycles, but this is impossible. A block-interchange that changes black edges from four different cycles results in two cycles. By symmetry, a block-interchange that results in four cycles must have acted on black edges from two cycles (an example of this is shown in Fig. 5). So C(W) can be increased by at most two with a single blockinterchange. 0

while T is not sorted do begin

locate the smallest x such that vx # x

find largest value y between x - 1 and W-‘(X)

perform the block-interchange

(X,~-‘(Y),lr-‘(X),I-‘(~+

1))

end

Fig. 8. An algorithm to perform an optimal sequence of block interchanges.

4. Block-interchange distance

These three lemmas lead to our main result.

Theorem 4. The block-interchange distance bid( 7r) of a permutation r is
bid(m) = i((n + 1) - C(T)),
where c(r) is the number of alternating cycles in the cycle graph of r.

Proof. By Lemma 2, bid(w) < ~(c(I) -c(~)),and

byLemma3,bid(r)

> J(c(l)-c(P>),wherelisthe

identity permutation. So bid(r) = i( (n+ 1) -C(T)

since c(z) = n + 1. Cl

),

An algorithm which calculates the block-interchange distance is shown in Fig. 7. The algorithm performs a depth-first search of G(T), counting the number of cycles, and hence runs in linear time.
An algorithm which performs a sequence of blockinterchanges achieving the minimum is shown in Fig. 8. This algorithm has O(n*) complexity since

D.A. Christie/Information Processing Letters 60 (I 996) 165-169

169

Table 1 The number of permutations of size n that achieve BID

n 1234

56 7 8

9 10

no. 1 1 5 8 84 180 3044 8064 193248 604800

all the steps inside the while loop can be executed in linear time, and the loop itself is executed [n/2] times at most.

5. Block-interchange diameter
The block-interchange diameter, BID(n), of the symmetric group S,, is the maximum value of bid(r) taken over all n-element permutations. When ?T is the reverse permutation of length n, i.e, 7r = [nn-1 . . . I], then c(r) is given by the formula
2 if n is odd, c(?r) =
{ 1 otherwise,
i.e. c(r) is as small as possible (since c(r) E n + 1 (mod2) ). Hence BZD( n) will be achieved by the reverse permutation and is Ln/2].
There are many other permutations which achieve this upper bound, e.g., the permutation [ 246 8 13 5 71 contains only one cycle in its cycle graph, and the family of permutations like it have the same value for c(r) as the reverse permutation. Table 1 shows how many permutations achieve the BID for small values of n.

References
[ 1] M. Aigner and D.B. West, Sorting by insertion of leading elements, J. Combin. Theory Ser. A 45 ( 1987) 306-309.
(21 V. Bafna and PA. Pevzner, Sorting by transpositions, in: Proc. 6th Ann. ACM-SIAM Symp. on Discrete Algorithms (1995) 614-623.
[3] V. Bafna and PA. Pevzner, Genome rearrangements and sorting by reversals, SIAM J. Comput. 25 ( 1996) 272-289.
[4] A. Caprara, Sorting by reversals is difficult, April 1996. [5] S. Even and 0. Goldreich, The minimum-length generator
sequence problem is NP-hard, J. Algorithms 2 ( 198 1) 3 ll-
313.
[6] W.H. Gates and C.H. Papadimitriou, Bounds for sorting by prefix reversal, Discrete Math. 27 (1979) 47-57.
[7] S. Hannenhalli, Polynomial algorithm for computing translocation distance, in: Proc. 6th Ann. Symp. on Combinatorial Pattern Matching (CPM’95). Lecture Notes in Computer Science 937 (Springer, Berlin, 1995) 162-176.
[81 M.R. Jerrum, The complexity of finding minimum-length generator sequences, Theoret. Comput. Sci. 36 ( 1985) 265-
289. [9] J. Kececioglu and D. Sankoff, Exact and approximation
algorithms for sorting by reversals, with application to genome rearrangement, Algorithmica 13 (1995) 180-210. [lo] J.D. Kececioglu and R. Ravi, Of mice and men: Algorithms for evolutionary distances between genomes with translocation, in: Proc. 6th ACM-SIAM Symp. on Discrete Algorithms (1995) 604-613.

6. Conclusion
Polynomial algorithms are not known (yet) for the problem of sorting permutations by transpositions and sorting by reversals has been shown to be NP-hard. By contrast we have derived a polynomial-time algorithm for sorting by block-interchanges and have also evaluated the block-interchange diameter of S,.

