More Problems in Rewriting
?
Nachum Dershowitz
1
, Jean-Pierre Jouannaud
2
, and Jan Willem Klop
3
1
Department of Computer Science, University of Illinois, 1304 West Springeld Avenue,
Urbana, IL 61801, U.S.A, nachum@cs.uiuc.edu
2
Laboratoire de Recherche en Informatique, Bat. 490, Universite de Paris Sud,
91405 Orsay, France, jouannau@lri.lri.fr
3
CWI, Kruislaan 413, 1098 SJ Amsterdam, The Netherlands
Department of Mathematics and Computer Science, Free University,
de Boelelaan 1081, 1081 HV Amsterdam, The Netherlands, jwk@cwi.nl
1 Introduction
Two years ago, in the proceedings of the previous conference, we presented a list
of open problems in the theory of rewriting
[
Dershowitz et al., 1991a
]
. This time,
we report on progress made during the intervening time, and then list some new
problems. (A few additional questions on the subject appear in the back of
[
Diekert,
1990
]
.) We also mention a couple of long-standing open problems which have recently
been answered. The last section contains a partisan list of interesting areas for future
research. A new, comprehensive survey of the eld is
[
Klop, 1992
]
.
Please send any contributions by electronic or ordinary mail to any of us. We
hope to continue periodically publicizing new problems and solutions to old ones.
We thank all the individuals who contributed questions, updates and solutions.
2 Old Problems
Five of the forty-four problems listed in
[
Dershowitz et al., 1991a
]
have been solved
and some progress has been made on ten more. For convenience, we repeat the
problems (in small type) about which we are able to report progress.
Problem 1. An important theme that is largely unexplored is denability (or
implementability, or interpretability) of rewrite systems in rewrite systems. Which
rewrite systems can be directly dened in lambda calculus? Here \directly dened"
means that one has to nd lambda terms representing the rewrite system operators,
such that a rewrite step in the rewrite system translates to a reduction in lambda
calculus. For example, Combinatory Logic is directly lambda denable. On the
other hand, not every orthogonal rewrite system can be directly dened in lambda
calculus. Are there universal rewrite systems, with respect to direct denability?
(For alternative notions of denability, see
[
O'Donnell, 1985
]
.)
?
The rst author was supported in part by the National Science Foundation under Grants
CCR-90-07195 and CCR-90-24271 and by a Meyerho Visiting Professorship at the Weiz-
mann Institute of Science; the second author was partially supported by the ESPRIT
working groups COMPASS and CCL; the third author's work was partially supported
by ESPRIT BRA project 6454: Confer.
Some progress has been made in
[
Berarducci and Bohm, 1992
]
.
Problem 7 (H. Comon, M. Dauchet). Is it possible to decide whether the set
of ground normal forms with respect to a given (nite) term-rewriting system is a
regular tree language? See
[
Gilleron, 1991; Kucherov, 1991
]
.
This has been answered in the armative
[
Vagvolgyi and Gilleron, 1992; Kucherov
and Tajine, 1993; Hofbauer and Huber, 1993
]
.
Problem 20 (Y. Metivier
[
1985
]
). What is the best bound on the length of a
derivation for a one-rule length-preserving string-rewriting (semi-Thue) system? Is
it O(n
2
) (n is the size of the initial term) as conjectured in
[
Metivier, 1985
]
, or
O(n
k
) (k is the size of the rule) as proved there.
Rumor has it that the conjecture has been shown true.
Problem 21 (M. Dauchet). Is termination of one linear (left and right) rule
decidable? Left linearity alone is not enough for decidability
[
Dauchet, 1989
]
.
A less ambitious, long-standing open problem (mentioned in
[
Dershowitz and Joua-
nnaud, 1990
]
) is decidability for one (length-increasing) monadic (string, semi-
Thue) rule. Termination is undecidable for non-length-increasing monadic systems
of rules
[
Caron, 1991
]
. For one monadic rule, conuence is decidable
[
Kurth, 1990;
Wrathall, 1990
]
. What about conuence of one non-monadic rule?
Problem 24. The existential fragment of the rst-order theory of the \recur-
sive path ordering" (with multiset and lexicographic \status") is decidable when
the precedence on function symbols is total
[
Comon, 1990; Jouannaud and Okada,
1991b
]
, but is undecidable for arbitrary formulas. Is the existential fragment de-
cidable for partial precedences?
The 
4
(9

8

9

8

) fragment is undecidable, in general
[
Treinen, 1992
]
. The posi-
tive existential fragment for the empty precedence (that is, for homeomorphic tree
embedding) is decidable
[
Boudet and Comon, 1993
]
. One might also ask whether
the rst-order theory of total recursive path orderings is decidable. Related results
include the following: The existential fragment of the subterm ordering is decidable,
but its 
3
(9

8

9

) fragment is not
[
Venkataraman, 1987
]
. The rst-order theory of
encompassment (the instance-of-subterm relation) is claimed decidable
[
Caron et al.,
1993
]
. Once we're at it, we might as well ask what the complexity of the satisability
test for the existential fragment is|in the total case.
Problem 25 (R. Treinen
[
1990
]
). Is the theory of multisets (AC) completely
axiomatizable? In other words, is it decidable whether a rst-order formula con-
taining only equality as predicate symbol is valid in the algebra T (F)=AC(F )? It
is known that the 
3
fragment is undecidable when there are at least one unary
function symbol (besides the AC one) and one constant; the 
1
fragment is decid-
able; the full theory is decidable even when there are no other symbols (besides
constants)
[
Treinen, 1990
]
.
Whether the 
2
(9

8

) fragment is decidable remains open; see
[
Treinen, 1992
]
. A
positive answer was given for the important special case of \complement problems"
in
[
Kounalis et al., 1991
]
. One might also consider the case where one is given terms
t
1
; : : : ; t
n
and a term t containing associative-commutative symbols and free symbols,
and are to decide whether all ground instances of t are ground instances of some t
i
.
Special cases of the latter question have been studied in
[
Kounalis and Lugiez, 1991;
Kounalis et al., 1991; Fernandez, 1993; Lugiez and Moysset, 1993
]
.
Problem 27 (P. Lescanne). In
[
Lescanne, 1990
]
an extension of term embed-
ding, called \well-rewrite orderings", was introduced, leading to an extension of
the concept of simplication ordering. How can those ideas best be extended to
form the basis for some new kind of \recursive path ordering"?
Progress in this direction has been reported in
[
Weiermann, 1992
]
.
Problem 28 (P. Lescanne). Polynomial and exponential interpretations have
been used to prove termination. For the former there are some reasonable meth-
ods
[
Ben Cherifa and Lescanne, 1987; Lankford, 1979
]
that can help determine if a
particular interpretation decreases with each application of a rule. Are there other
implementable methods suitable for exponential interpretations?
Some work on this problem has been reported in
[
Lescanne, 1992
]
.
Problem 29. Any rewrite relation commutes with the strict-subterm relation;
hence, the union of the latter with an arbitrary terminating rewrite relation is
terminating, and also \fully invariant" (closed under instantiation). Which is the
nest (maximal) relation with these properties? (It is not subterm.) Is \encompass-
ment" (\containment", the combination of subterm and subsumption) the nest
relation which preserves termination (without full invariance)?
The nest relation we know of which could answer the rst question is the variant
of subterm that allows multiple occurrences of variables to be renamed apart.
Problem 33. Completion modulo associativity and commutativity (AC)
[
Peter-
son and Stickel, 1981
]
is probably the most important case of \extended comple-
tion"; the general case of nite congruence classes is treated in
[
Jouannaud and
Kirchner, 1986
]
. Adding an axiom (Z) for an identity element, however, gives rise
to innite classes. This case was viewed as conditional completion in
[
Baird et al.,
1989
]
, and solved completely in
[
Jouannaud and Marche, 1990
]
. The techniques,
however, do not carry over to completion with idempotence (I) added; how to
handle ACZI-completion eectively is open.
C. Marche
[
1993
]
has used rewriting techniques to show decidability of the word
problem for any theory comprised of a set of ground equations, associativity and
commutativity laws for arbitrarily many operators, plus identity and idempotency
laws for any number of those operators.
Problem 34. Ordered rewriting computes a given convergent set of rewrite rules
for an equational theory E and an ordering > whenever such a set R exists for >,
provided > can be made total on ground terms. Unfortunately, this is not always
possible, even if > is derivability (!
+
R
) in R. Is there a set of inference rules that
will always succeed in computing R whenever R exists for >?
A proposal appears in
[
Devie, 1991
]
; more work is called for.
Problem 38 (J. Siekmann). Is satisability of equations in the theory of dis-
tributivity (unication modulo a distributivity axiom) decidable?
The question should read \modulo one right- and one left-distributivity axiom".
(With just one of these, the problem had already been solved in
[
Tiden and Arnborg,
1987
]
.) A partial positive solution is given in
[
Contejean, 1993
]
, based on a striking
result on the structure of certain proofs modulo distributivity. Although many more
cases are described in
[
Contejean, 1992; Contejean, 1993
]
, the general case remains
open.
Problem 39. Rules are given in
[
Jouannaud and Kirchner, 1991
]
for computing
dag-solved forms of unication problems in equational theories. The Merge rule
x  s; x  t) x  s; s  t given there assumes that s is not a variable and its size
is less than or equal to that of t. Can this condition be improved by replacing it
with the condition that the rule Check* does not apply? (In other words, is Check*
complete for nding cycles when Merge is modied as above?)
The problem has been solved by H. Comon
[
1993
]
using an extended Check rule
(requiring a congruence closure step). The original question|for whatever it may
be worth|stands.
Problem 42 (H. Comon). Given a rst-order formula with equality as the only
predicate symbol, can negation be eectively eliminated from an arbitrary formula
 when  is equivalent to a positive formula? Equivalently, if  has a nite complete
set of uniers, can they be computed? Special cases were solved in
[
Comon, 1988;
Lassez and Marriott, 1987
]
.
A positive solution is given in
[
Tajine, 1993
]
.
Problem 43. Design a framework for combining constraint solving algorithms.
Some particular cases have been attacked: In
[
Baader and Schulz, 1992
]
it was shown
how decision procedures for solvability of unication problems can be combined. In
[
Baader and Schulz, 1993
]
a similar technique is applied to (unquantied) systems
of equations and disequations. In
[
Ringeissen, 1992
]
the combination of unication
algorithms is extended to the case where alphabets share constants. In related work
[
Boudet, 1992
]
, unication is performed in the combination of an equational theory
and membership constraints.
3 New Problems
Problems 45{50 appeared (with minor variations) in our technical report
[
Dershowitz
et al., 1991b
]
. In the meantime, one (no. 48) has been answered.
Problem 45 (M. Venturini-Zilli). Some reduction graphs in -calculus
[
Venturini-
Zilli, 1984
]
are isomorphic to ordinals. For example, the reduction graph of
(x:y)((z:zzz)(z:zzz)) is isomorphic to ! + 1. Which ordinals appear in this way
as reduction graphs? It is known that all ordinals less than 
0
can be so represented.
Problem 46 (D. Kapur). Ground reducibility of extended rewrite systems, modulo
congruences like associativity and commutativity (AC), is undecidable
[
Kapur et al.,
1987
]
. For left-linear AC systems, on the other hand, it is decidable
[
Jouannaud and
Kounalis, 1989
]
. What can be said more generally about restrictions on extended
rewriting that give decidability?
This problem is related to number 25.
Problem 47. For reductions of transnite length, a version of the Parallel Moves
Lemma can be proved if one consider only \strongly converging" innite reductions
in the sense of
[
Kennaway et al., 1991
]
. However, if one wants to consider converging
reductions, as in
[
Dershowitz et al., 1991c
]
, then it is not dicult to construct a
counterexample, not to the innite Parallel Moves Lemma itself, but to the method of
proof (cf.
[
Kennaway et al., 1990
]
). An innite Parallel Moves Lemma might involve
a dierent notion of \descendant".
Problem 48 (H.-C. Kong). Consider the following relation on strings over an in-
nite set X of variables: x
1
x
2
  x
m
,! y
1
y
2
  y
n
if there exists a renaming
 : X ! X such that x
i
 = y
j
i
for 1  j
1
< j
2
<    < j
m
 n. Is this \em-
bedding" relation ,! a well-quasi-ordering (that is, must every innite sequence of
strings contain two strings, such that the rst embeds in the second)?
The answer is \yes". (Map each variable to the position of its leftmost occur-
rence and use the fact that strings of natural numbers are well-quasi-ordered by the
embedding extension of  to strings.)
Problem 49 (M. Hermann). Suppose ordinary completion (as in
[
Dershowitz and
Jouannaud, 1990
]
, for example) is non-terminating for some initial set of equations
E, completion strategy, and reduction ordering. Must there be a nite depth N for
E such that for any n > N restricting the generation of critical pairs to overlaps at
positions that are no deeper than n in the overlapped left-hand side (but otherwise
not changing the strategy) also produces a non-terminating completion sequence?
Problem 50. Combinations of typed -calculi with term-rewriting systems have
been studied extensively in the past few years
[
Barbanera, 1990; Breazu-Tannen
and Gallier, 1989; Dershowitz and Okada, 1990; Dougherty, 1991
]
. The strongest
termination result allows rst-order rules as well as higher-order rules dened by
a generalization of primitive recursion. Suppose all rules for functional constant F
follow the schema:
F (

l[

X];

Y )! v[F (r
1
[

X];

Y ); :::; F (r
m
[

X];

Y );

Y )]
where the (not necessarily disjoint) variables in

X and

Y are of arbitrary order,
each of

l; r
1
; :::; r
m
is in T (F ;f

Xg), v[z;

Y ] is in T (F ;f

Y ; zg), for new variables z of
appropriate types, and r
1
; : : : ; r
m
are each less than

l in the multiset extension of the
strict subterm ordering. If T (F ;X ) is the term-algebra which includes only previously
dened functional constants|forbidding the use of mutually recursive functional
constants|termination is ensured
[
Jouannaud and Okada, 1991a
]
. Does termination
also hold when there are mutually recursive denitions? Does this also hold when the
subterm assumption is unfullled? (In
[
Jouannaud and Okada, 1991a
]
an alternative
schema is proposed, with the subterm assumption weakened at the price of having
only rst-order variables in

X.) Questions of conuence of combinations of typed
-calculi and higher-order systems also merit investigation.
These results have been extended to combinations with more expressive type
systems
[
Barbanera and Fernandez, 1993a; Barbanera and Fernandez, 1993b
]
.
Problem 51 (H. Comon, M. Dauchet). Is the rst order theory of one-step rewrit-
ing (!
R
) decidable? Decidability would imply the new result on the decidability of
the rst-order theory of encompassment (that is, being an instance of a subterm),
based on pumping properties
[
Caron et al., 1993
]
. (It is well known that the theory
of !

R
is in general undecidable.)
Problem 52 (R. Statman). It has been remarked by C. Bohm
[
Barendregt, 1984
]
that Y is a xed point combinator if and only if Y $

(SI)Y (Y and SIY are
convertible). Also, if Y is a xed point combinator, then so is Y (SI). Is there is a
xed point combinator Y for which Y $

Y (SI)?
Problem 53 (R. Statman). A termM in Combinatory Logic or -calculus is recur-
rent if N !

M whenever N $

M (this notion is due to M. Venturini-Zilli.) Let's
call M hyper-recurrent if N is recurrent for all N $

M . (Equivalently,M is hyper-
recurrent if P !

Q!

P whenever P $

Q$

M .) Are there any hyper-recurrent
combinators? (The problem comes up immediately when the Ershov-Visser theory
[
Visser, 1980
]
for$

is applied to!

. It is known that hyper-recurrent combinators
don't exist for Combinatory Logic
[
Statman, 1991
]
.)
Problem 54 (R. Statman). Recall thatM is a universal generator if each combina-
tor P has a superterm Q such that M !

Q. Call M a uniform universal generator
if there exists a context C[] such that, for each combinator P , we have M !

C[P ].
Is there a uniform universal generator? (For Combinatory Logic, if we restrict the
context C[] to be of the form (N ), no such term exists
[
Statman, 1992
]
.)
Problem 55 (R. Statman). It has been proved that (in -calculus or Combinatory
Logic) every recursively enumerable set of ground terms that is closed under con-
version has the form fM jPM $

Qg for some P and Q. Which sets have the form
fM jQ!

PMg?
Problem 56 (V. van Oostrom). An abstract reduction system is \decreasing
Church-Rosser", if there exists a labelling of the reduction relation by a well-founded
set of labels, such that all local divergences can be completed to form a \decreas-
ing diagram" (see
[
Oostrom, 1992
]
for precise denitions). Does the Church-Rosser
property imply decreasing Church-Rosser? That is, is it always possible to localize
the Church-Rosser property? This is known to be the case for (weakly) normalizing
and nite systems.
Problem 57 (F. Baader
[
1990
]
). Does there exist a semigroup theory (without con-
stants in the equations) for which there is a reduced canonical term-rewriting system
(with the right-hand side and subwords of the left in normal form) which is not length
decreasing?
Problem 58 (M. Oyamaguchi). Is any \strongly" non-overlapping right-linear
term-rewriting system conuent? (\Strong" in the sense that left-hand sides are non-
overlapping even when the occurrences of variables have been renamed apart
[
Chew,
1981
]
.) On the one hand, strongly non-overlapping systems need not be conuent
[
Huet, 1980
]
; on the other hand, strongly non-overlapping right-ground systems are
[
Oyamaguchi and Ohta, 1993
]
.
Problem 59 (M. Kurihara, M. Krishna Rao). One of the earliest results estab-
lished on modularity of combinations of term-rewriting systems is the conu-
ence of the union of two conuent systems which share no symbols
[
Toyama,
1987
]
; if symbols are shared modularity is not preserved by union
[
Kurihara and
Ohuchi, 1992
]
. Some sucient conditions for modularity of conuence of constructor-
sharing systems that are terminating have been found
[
Kurihara and Ohuchi, 1992;
Middeldorp and Toyama, 1991
]
. Are there interesting sucient conditions that are
independent of termination?
Problem 60 (H. Zantema). Let R be a many-sorted term-rewriting system and R
0
the one-sorted system consisting of the same rules, but in which all operation symbols
are considered to be of the same sort. Any rewrite in R is also a rewrite in R
0
. The
converse does not hold, since terms and rewrite steps in R
0
are allowed that are not
well-typed in R. In
[
Zantema, 1993
]
it was shown that termination of R is in general
not equivalent to termination of R
0
, but it is if R does not contain both collapsing
and duplicating rules. Are termination of R and of R
0
equivalent in the case where
all variables occurring in R are of the same sort? If this statement holds, it would
follow that simulating operation symbols of arity n greater than 2 by n   1 binary
symbols in a straightforward way does not aect termination behavior.
Problem 61 (T. Nipkow, M. Takahashi). For higher-order rewrite formats as given
by combinatory reduction systems
[
Klop, 1980
]
and higher-order rewrite systems
[
Nipkow, 1991; Takahashi, 1993
]
, conuence has been proved in the restricted case
of orthogonal systems. Can conuence be extended to such systems when they are
weakly orthogonal (all critical pairs are trivial)? When critical pairs arise only at
the root, conuence is known to hold.
Problem 62 (V. van Oostrom). Let R and S be two left-linear, conuent combi-
natory reduction systems with the same alphabet. Suppose the rules of R do not
overlap the rules of S. Is R[S conuent? This is true for the restricted case when R
is a term-rewriting system (an easy generalization of a result by F. Muller
[
1992
]
), or
if neither system has critical pairs. (The restriction to the same alphabet is essential,
since conuence is in general not preserved under the addition of function symbols,
not even for left-linear systems.)
Problem 63 (M. Oyamaguchi). Is conuence of right-ground term-rewriting sys-
tems decidable? Compare
[
Oyamaguchi, 1987; Dauchet et al., 1990; Dauchet and
Tison, 1990; Oyamaguchi and Ohta, 1993
]
.
Problem 64. Is conuence of ordered rewriting (using the intersection of one step
replacement of equals and a reduction ordering that is total on ground terms) de-
cidable when the (existential fragment of the) ordering is? This question was raised
in
[
Nieuwenhuis, 1993
]
, where some results were given for the lexicographic path
ordering.
Problem 65 (D. Cohen, P. Watson
[
1991
]
). An interesting system for doing arith-
metic by rewriting was presented in
[
Cohen and Watson, 1991
]
. Unfortunately, its
termination has not been proved.
Problem 66 (F. Baader, K. Schulz
[
1992
]
). Is there an equational theory for which
unication with constants is decidable, but general unication (where free function
symbols of arbitrary arity may occur) is undecidable? From the results in
[
Baader
and Schulz, 1992
]
it follows that this question can be reformulated as follows: Is
there an equational theory for which unication with constants is decidable, but
unication with linear constant restrictions is undecidable? Another way of formu-
lating the question is: Consider positive rst-order formul containing equality as
the only predicate symbol, and function symbols from a given alphabet F . Is there
an equational theory E with alphabet F such that whether E j=  is decidable for
closed formulae with quantier prex 8

9

, but undecidable for arbitrary quantier
prexes.
Problem 67 (F. Baader, K. Schulz
[
1992
]
). It was shown in
[
Baader and Schulz,
1992
]
that being able to solve unication problems with linear constant restrictions
is a necessary and sucient condition for the possibility of combining unication al-
gorithms. Other approaches
[
Schmidt-Schau, 1989; Boudet, 1990
]
require solvability
of constant elimination problems, which was shown to be equivalent to presuppos-
ing solvability of unication problems with arbitrary constant restrictions
[
Baader
and Schulz, 1992
]
. Is there an equational theory for which solvability of unication
problems with linear constant restrictions is decidable, but solvability of unication
problems with arbitrary constant restrictions is undecidable? Is there an equational
theory for which unication problems with linear constant restrictions always have
a nite complete set of solutions, but unication problems with arbitrary constant
restrictions sometimes don't?
Problem 68 (H. Comon). Consider the existential fragment of the theory dened
by a binary predicate symbol , a nite set of function symbols f
1
; : : : ; f
n
; the
function symbols \;[;:, and the projection symbols f
 1
i;j
for j  arity(f
i
). Variables
are interpreted as subsets of the Herbrand Universe. With the obvious interpretation
of these symbols, is satisability of such formul decidable? Special cases have been
solved in
[
Heintze and Jaar, 1990; Aiken and Wimmers, 1992; Bachmair et al., 1993;
Gilleron et al., 1993
]
.
Problem 69 (C. Kirchner, J. Zhang). What is the syntactic type (maximumnum-
ber of top-level steps needed in an equational proof
[
Boudet and Contejean, 1992
]
) of
the distributivity axiom?What is the syntactic type of \three-way" commutativity:
f(x; y; z) = f(x; z; y) = f(y; x; z) = f(y; z; x) = f(z; x; y) = f(z; y; x)
f(f(x; y; z); u; x) = f(x; y; f(z; u; x))
What are the unication type, decidability, and syntactic type of \mid-
commutativity": (x+ y) + (u+ v) = (x+ u) + (y + v)?
Problem 70 (J.-C. Raoult). There exist nite automata for words, trees, and dags.
No really good comparable notion is available for graphs. (Perhaps there is one akin
to the ideas in
[
Litovski et al., to appear
]
on label rewriting.)
Problem 71 (J.-C. Raoult). There are good algorithms for pattern-matching for
words and trees, but not yet for graphs.
Problem 72 (J.-C. Raoult). Graph rewritings, like term or word rewritings, are
usually nitely branching. There are relations that are not nitely branching, yet
satisfy good properties: rational transductions of words, tree-transductions. A good
denition of graph transduction, that extends rational word transductions is still
lacking.
Problem 73 (J.-C. Raoult). Termination is, as we know, undecidable. Yet, there
are several sucient conditions ensuring termination for word and term rewritings.
Most are suitable extensions of Higman's or Kruskal's embeddings
[
Kruskal, 1960
]
.
Robertson and Seymour
[
Robertson and Seymour, 1982
]
have achieved a similar
theorem for undirected graphs. However, no embedding theorem has yet been proved
for directed graphs, and (consequently?) powerful termination orderings remain to
be designed.
Problem 74 (D. Plump). Graph rewriting systems that implement term rewriting
systems (see, for example,
[
Barendregt et al., 1987; Homann and Plump, 1991
]
)
are terminating whenever term rewriting is. The converse, however, does not hold
[
Plump, 1991
]
. How can termination orderings for term rewriting be adapted to cover
those cases in which graph rewriting is terminating although term rewriting is not?
Problem 75 (D. Plump). In contrast to term rewriting, conuence of general
(hyper-)graph rewriting|in the \Berlin approach"|is undecidable, even for termi-
nating systems
[
Plump, 1993
]
. What sucient conditions make conuence decidable?
4 New Solutions
Two old problems (omitted from our previous list) which have recently been solved
are the following:
Problem 76. Cycle unication
[
Bibel et al., 1992
]
is undecidable
[
Devienne, 1993;
Hanschke and Wurtz, 1993
]
. This was a long standing open problem, related to the
non-termination of simple logic programs.
Problem 77. J. Jezek, J. B. Nation, and R. Freese
[
Freese, 1993
]
have shown that
there is no nite, normal form, associative-commutative term-rewriting system for
lattices. This is somewhat surprising because every lattice term is equivalent under
lattice theory to a shortest term which is unique up to associativity and commuta-
tivity (known as \Whitman canonical form").
5 Research Areas
Current research topics in rewriting include the following ten:
Typed Rewriting Under reasonable assumptions, virtually everything in ordinary
(untyped) rewriting extends to the multisorted case. Adding subsorts supports in-
heritance and allows functions to be completely dened without having to introduce
error elements for when they are applied outside their intended domains. But de-
duction in such \order-sorted" algebras presents some diculties. The most popular
approach is to insist that the sort of the right-hand side is always contained in that
of the left; see
[
Dick and Watson, 1991
]
. A general approach requires a subcase of
second-order unication
[
Comon, 1992
]
. A subject of vigorous investigation is that
of typed -calculi
[
Bezem and Groote, 1993
]
. Though the relevance of this subject
resides largely in the elds of automated deduction and of proof theory, a consid-
erable segment pertains to term rewriting. For example, much attention has been
devoted to termination proofs of typed -calculi.
Higher-order rewriting Beginning with
[
Breazu-Tannen and Gallier, 1989
]
, re-
searchers have been looking at ways of combining terminating conuent calculi
with rst-order (\algebraic") rewriting in such a way as to preserve their con-
vergence, thereby endowing rewriting with higher-order capabilities. Recent con-
tributions are
[
Jouannaud and Okada, 1991a; Barbanera and Fernandez, 1993a;
Barbanera and Fernandez, 1993b
]
. Of a more general nature, proposals have been
made for quite general rewriting formats that include rewriting with bound variables
as in typed -calculi, yielding pleasant mixtures of pattern matching and variable
binding. The suggestions in
[
Klop, 1980; Nipkow, 1991; Takahashi, 1993
]
are quite
close, which is encouraging, as it may hint at a canonical framework for higher-order
rewriting.
AC termination Recent work on proving termination of associative-commutative
rewriting (the most prevalent extension of term rewriting) includes
[
Kapur et al.,
1990; Rubio and Nieuwenhuis, 1993; Delor and Puel, 1993
]
. It would be nice to
somehow combine these results in an ordering that could orient distributivity the
right way and be total when the precedence is. The ordering in
[
Kapur et al., 1990
]
was incorporated in the Rrl system, but most of this work has yet to lter down into
widespread implemented tests that can be used within those rewrite-based theorem
provers which support associativity and commutativity.
Hierarchical systems From the point of view of software engineering, it is important
that properties of rewrite programs, like termination and conuence, be modular.
That is, we would like to be able to combine two terminating systems, or two conver-
gent systems, and to have the same properties hold for the combined system. This
is not true in general, not even when one system makes no reference to the func-
tion symbols and constants used in the other. Finding useful cases when systems
may safely be combined is a current area of study; see, for example,
[
Toyama, 1987;
Toyama et al., 1989; Middeldorp, 1990; Middeldorp and Toyama, 1991; Kurihara
and Ohuchi, 1992; Dershowitz, 1993
]
.
Logic programming Rewriting techniques have found applications in logic program-
ming and constraint-based programming (besides their obvious application to func-
tional programming). Semantic unication using rewrite-rules has been proposed by
a number of people (
[
Reddy, 1986; Dershowitz and Plaisted, 1988
]
, among others)
as an ideal basis for a synthesis of functional and logic programming; the SLOG
language
[
Fribourg, 1985
]
is a case in point. Renements of universal unication for
when a rewrite system is available have been found (see
[
Jouannaud and Kirchner,
1991
]
). Combining constraints with deduction, whether equational
[
Kirchner and
Kirchner, 1989
]
or full rst order
[
Kirchner et al., 1990
]
, is another potential growth
area.
Theorem proving and symbolic computation Since the pioneering work of Lankford
[
1975
]
, research on the application of ideas from rewriting to more traditional refu-
tational theorem provers for rst-order predicate calculus has proceeded in bits and
spurts. Recent work has shown that using orderings on terms and formul helps
restrict deduction and increase the amount of simplication and redundancy elimi-
nation that can be incorporated without forfeiting completeness. For a survey, see
[
Hsiang et al., 1992
]
. These successes ought to be extended to higher-order calculi,
which have been enjoying success in their own right. Ad-hoc rewriting has always
been present in symbolic computation systems (e.g. Reduce, Macsyma); Grobner-
basis techniques are an integral part of some modern systems. The time appears
ripe|indeed some projects have been initiated|to pursue signicant applications
of rewriting and typed calculi (supporting inheritance) in computer algebra and
proof checking.
Complexity issues There is a dearth of results on the complexity of problems in
rewriting and unication. (This, despite the problems posed in our lists.) One of the
handful of exceptions (this one on AC-unication) is
[
Kapur and Narendran, 1992
]
.
There is room for a lot more work on this side of theory.
Rewriting, automata and symbolic constraints Rewriting ground terms has much
to do with formal language theory. In particular, bottom-up tree automata can be
represented naturally by rewrite systems. The language of ground terms in normal
form for a given system appears to be a key to many problems. Automata are also
useful for solving symbolic constraints, following up on an idea pioneered by Buchi
and Rabin. By encoding the set of solutions of an atomic constraint by some kind
of automaton (closed under the usual Boolean operations), it is possible to solve
arbitrary quantier-free constraints. This technique has been widely used extensively
in the past few years
[
Dauchet et al., 1990; Dauchet and Tison, 1990; Gilleron, 1991;
Kucherov, 1991; Kucherov and Tajine, 1993; Gilleron et al., 1993; Caron et al., 1993
]
.
Concurrency Conuent systems, in general, and orthogonal ones, in particular, are
natural candidates for parallel processing, since rewrites at dierent positions are
more or less independent of each other. Work is being undertaken on language and
implementation issues raised by this possibility; see, for example,
[
Goguen et al.,
1987; Meseguer, 1992; Berry and Boudol, 1992
]
. Much work is being done on com-
binations of -calculus and process calculi. A well-known example is the -calculus,
which extends Milner's CCS, as well as -calculus; see
[
Milner et al., 1992
]
.
Graph rewriting The notion of rewriting (as it appeared already in Thue's
[
1914
]
work) can protably be applied to structures other than nite terms. Graph rewrit-
ing is one such (graphs allow one to represent structure-sharing); another is innite
terms (see
[
Dershowitz et al., 1991c; Inverardi and Nesi, 1991; Kennaway et al.,
1991
]
). Graph rewriting is often called \term-graph rewriting" to distinguish it from
the more general approach of graph grammars. At present, (term) graph rewrit-
ing is only beginning to enjoy the attention of researchers in term rewriting. The
lack of popularity thus far may be due to the intrinsic diculty of nding workable
formalisms for graph rewriting, avoiding on the one hand overly abstract category-
theoretic formulations, and on the other hand overly implementation-oriented for-
mulations with pointers, redirections, and the like.
References
[
Aiken and Wimmers, 1992
]
A. Aiken and E. Wimmers. Solving systems of set constraints.
In Proceedings of the Seventh Symposium on Logic in Computer Science, pages 329{340,
Santa Cruz, CA, June 1992. IEEE.
[
Baader, 1990
]
Franz Baader. Rewrite systems for varieties of semigroups. In M. Stickel,
editor, Proceedings of the Tenth International Conference on Automated Deduction
(Kaiserslautern, West Germany), volume 449 of Lecture Notes in Computer Science,
pages 381{395, Berlin, July 1990. Springer-Verlag.
[
Baader and Schulz, 1992
]
Franz Baader and Klaus Schulz. Unication in the union of
disjoint equational theories: Combining decision procedures. In D. Kapur, editor, Pro-
ceedings of the Eleventh International Conference on Automated Deduction (Saratoga
Springs, NY), volume 607 of Lecture Notes in Articial Intelligence, Berlin, June 1992.
Springer-Verlag.
[
Baader and Schulz, 1993
]
Franz Baader and Klaus Schulz. Combination techniques and
decision problems for disunication. In C. Kirchner, editor, Proceedings of the Fifth
International Conference on Rewriting Techniques and Applications (Montreal, Canada),
Lecture Notes in Computer Science, Berlin, 1993. Springer-Verlag.
[
Bachmair et al., 1993
]
Leo Bachmair, Harald Ganzinger, and Uwe Waldmann. Set con-
straints are the monadic class. In Proceedings of the Symposium on Logic in Computer
Science (Montreal, Canada). IEEE, 1993.
[
Baird et al., 1989
]
Timothy Baird, Gerald Peterson, and Ralph Wilkerson. Complete sets
of reductions modulo Associativity, Commutativity and Identity. In N. Dershowitz, edi-
tor, Proceedings of the Third International Conference on Rewriting Techniques and Ap-
plications (Chapel Hill, NC), volume 355 of Lecture Notes in Computer Science, pages
29{44, Berlin, April 1989. Springer-Verlag.
[
Barendregt, 1984
]
Henk P. Barendregt. The Lambda Calculus, its Syntax and Semantics.
North-Holland, Amsterdam, second edition, 1984.
[
Barbanera, 1990
]
F. Barbanera. Combining term rewriting and type assignment systems.
International J. of Foundations of Computer Science, 1:165{184, 1990.
[
Barbanera and Fernandez, 1993a
]
F. Barbanera and M. Fernandez. Modularity of termi-
nation and conuence in combinations of rewrite systems with 
!
. In Proceedings of
the 20th International Colloquium on Automata, Languages, and Programming, Lund,
Sweden, 1993.
[
Barbanera and Fernandez, 1993b
]
F. Barbanera and M. Fernandez. Combining rst and
higher order rewrite systems with type assignment systems. In Proceedings of the Inter-
national Conference on Typed Lambda Calculi and Applications, Utrecht, Holland, 1993.
[Barendregt et al., 1987
]
H. P. Barendregt, M. C. J. D. van Eekelen, J. R. W. Glauert,
J. R. Kennaway, M. J. Plasmeijer, and M. R. Sleep. Term graph rewriting. In Pro-
ceedings of the European Workshop on Parallel Architectures and Languages, volume 259
of Lecture Notes in Computer Science, pages 141{158, Berlin, 1987. Springer-Verlag.
[
Ben Cherifa and Lescanne, 1987
]
Ahlem Ben Cherifa and Pierre Lescanne. Termination
of rewriting systems by polynomial interpretations and its implementation. Science of
Computer Programming, 9(2):137{159, October 1987.
[
Berarducci and Bohm, 1992
]
Alessandro Berarducci and Corrado Bohm. A self-
interpreter of lambda calculus having a normal form. Rapporto tecnico 16, Dip. di
Matematica Pura ed Applicata, Universita di L'Aquila, October 1992.
[
Berry and Boudol, 1992
]
G. Berry and G. Boudol. The chemical abstract machine. The-
oretical Computer Science, 96:217{248, 1992.
[
Bezem and Groote, 1993
]
M. Bezem and J. F. Groote, editors. Proceedings of the Interna-
tional Conference on Typed Lambda Calculi and Applications (Utrecht, The Netherlands),
volume 664 of Lecture Notes in Computer Science, Berlin, 1993. Springer-Verlag.
[
Bibel et al., 1992
]
W. Bibel, S. Holldobler, and J. Wurtz. Cycle unication. In D. Kapur,
editor, Proceedings of the Eleventh International Conference on Automated Deduction
(Saratoga Springs, NY), volume 607 of Lecture Notes in Articial Intelligence, pages
94{108, Berlin, June 1992. Springer-Verlag.
[
Boudet, 1990
]
Alexandre Boudet. Unication in combination of equational theories: An
ecient algorithm. In Proceedings of the Tenth International Conference on Automated
Deduction (Kaiserslautern, Germany), volume 449 of Lecture Notes in Computer Science.
Springer-Verlag, 1990.
[
Boudet, 1992
]
Alexandre Boudet. Unication in order-sorted algebras with overloading.
In D. Kapur, editor, Proceedings of the Eleventh International Conference on Automated
Deduction (Saratoga Springs, NY), volume 607 of Lecture Notes in Articial Intelligence,
Berlin, June 1992. Springer-Verlag.
[
Boudet and Comon, 1993
]
Alexandre Boudet and Hubert Comon. About the theory of
tree embedding. In J.-P. Jouannaud, editor, Proceedings of the Colloquium on Trees in
Algebra and Programming (Orsay, France), Lecture Notes in Computer Science, Berlin,
April 1993. Springer-Verlag.
[
Boudet and Contejean, 1992
]
Alexandre Boudet and E. Contejean. On n-syntactic equa-
tional theories. In H. Kirchner and G. Levi, editors, Proceedings of the Third Inter-
national Conference on Algebraic and Logic Programming (Pisa, Italy), volume 632 of
Lecture Notes in Computer Science, pages 446{457, Berlin, September 1992. Springer-
Verlag.
[
Breazu-Tannen and Gallier, 1989
]
Val Breazu-Tannen and Jean Gallier. Polymorphic
rewriting conserves algebraic strong normalization. In Proceedings of the Sixteenth Inter-
national Colloquium on Automata, Languages and Programming (Stresa, Italy), volume
372 of Lecture Notes in Computer Science, pages 137{150, Berlin, July 1989. European
Association of Theoretical Computer Science, Springer-Verlag.
[
Caron, 1991
]
A.-C. Caron. Linear bounded automata and rewrite systems: Inuence of
initial congurations on decision properties. In Proceedings of the International Joint
Conference on Theory and Practice of Software Development, volume 1: Colloquium on
Trees in Algebra and Programming (Brighton, U.K.), volume 493 of Lecture Notes in
Computer Science, pages 74{89, Berlin, April 1991. Springer-Verlag.
[
Caron et al., 1993
]
A.-C. Caron, J.-L. Coquide, and M. Dauchet. Encompassment prop-
erties and automata with constraints. In C. Kirchner, editor, Proceedings of the Fifth
International Conference on Rewriting Techniques and Applications (Montreal, Canada),
Lecture Notes in Computer Science, Berlin, 1993. Springer-Verlag.
[Chew, 1981
]
Paul Chew. Unique normal forms in term rewriting systems with repeated
variables. In Proceedings of the Thirteenth Annual Symposium on Theory of Computing,
pages 7{18. ACM, 1981.
[
Cohen and Watson, 1991
]
D. Cohen and P. Watson. An ecient representation of arith-
metic for term rewriting. In R. Book, editor, Proceedings of the Fourth International
Conference on Rewriting Techniques and Applications (Como, Italy), volume 488 of Lec-
ture Notes in Computer Science, pages 240{251, Berlin, April 1991. Springer-Verlag.
[
Comon, 1988
]
Hubert Comon. Unication et Disunication: Theorie et Applications.
PhD thesis, l'Institut National Polytechnique de Grenoble, 1988.
[
Comon, 1990
]
Hubert Comon. Solving inequations in term algebras (Preliminary version).
In Proceedings of the Fifth Annual Symposium on Logic in Computer Science, pages 62{
69, Philadelphia, PA, June 1990. IEEE.
[
Comon, 1992
]
Hubert Comon. Completion of Rewrite Systems with Membership Con-
straints. In Proceedings of the 19th International Conference on Automata, Languages
and Programming, Vienna, Austria, 1992.
[
Comon, 1993
]
H. Comon, personal communication, 1993.
[
Contejean, 1992
]
Evelyne Contejean. Elements pour la Decidabilite de l'Unication Mod-
ulo la Distributivite. PhD thesis, Universite de Paris-Sud, Orsay, France, 1992.
[
Contejean, 1993
]
Evelyne Contejean. A partial solution for D-unication based on a re-
duction to AC1-unication. In Proceedings of the Twentieth International Colloquium
on Automata, Languages and Programming (Lund, Sweden, July 1993), Lecture Notes in
Computer Science, Berlin. Springer-Verlag.
[
Contejean, 1993
]
Evelyne Contejean, personal communication, 1993.
[
Dauchet, 1989
]
M. Dauchet. Simulation of Turing machines by a left-linear rewrite rule.
In N. Dershowitz, editor, Proceedings of the Third International Conference on Rewriting
Techniques and Applications (Chapel Hill, NC), volume 355 of Lecture Notes in Computer
Science, pages 109{120, Berlin, April 1989. Springer-Verlag.
[
Dauchet et al., 1990
]
Max Dauchet, Thierry Heuillard, Pierre Lescanne, and Sophie Tison.
Decidability of the conuence of nite ground term rewriting systems and of other related
term rewriting systems. Information and Computation, 88(2):187{201, October 1990.
[
Dauchet and Tison, 1990
]
M. Dauchet and S. Tison. The theory of ground rewrite sys-
tems is decidable. In Proceedings of the Fifth Symposium on Logic in Computer Science,
pages 242{248, Philadelphia, PA, June 1990.
[
Delor and Puel, 1993
]
C. Delor and L. Puel. Extension of the associative path ordering
to a chain of associative commutative symbols. In C. Kirchner, editor, Proceedings of
the Fifth International Conference on Rewriting Techniques and Applications (Montreal,
Canada), Lecture Notes in Computer Science, Berlin, 1993. Springer-Verlag.
[
Dershowitz, 1993
]
Nachum Dershowitz. Hierarchical termination. Technical report 93-?,
Leibnitz Center for Research in Computer Science, Hebrew University, Jerusalem, Israel,
1993.
[
Dershowitz and Jouannaud, 1990
]
Nachum Dershowitz and Jean-Pierre Jouannaud.
Rewrite systems. In J. van Leeuwen, editor, Handbook of Theoretical Computer Science,
volume B: Formal Methods and Semantics, chapter 6, pages 243{320. North-Holland,
Amsterdam, 1990.
[
Dershowitz et al., 1991a
]
Nachum Dershowitz, Jean-Pierre Jouannaud, and Jan Willem
Klop. Open problems in rewriting. In R. Book, editor, Proceedings of the Fourth Inter-
national Conference on Rewriting Techniques and Applications (Como, Italy), volume 488
of Lecture Notes in Computer Science, pages 445{456, Berlin, April 1991. Springer-Verlag.
[
Dershowitz et al., 1991b
]
Nachum Dershowitz, Jean-Pierre Jouannaud, and Jan Willem
Klop. Open problems in rewriting. Technical report CS-R9114, Computer Science, CWI,
Amsterdam, December 1991.
[Dershowitz et al., 1991c
]
Nachum Dershowitz, Stephane Kaplan, and David A. Plaisted.
Rewrite, rewrite, rewrite, rewrite, rewrite,: : : . Theoretical Computer Science, 83(1):71{
96, 1991.
[
Dershowitz and Okada, 1990
]
Nachum Dershowitz and Mitsuhiro Okada. A rationale for
conditional equational programming. Theoretical Computer Science, 75:111{138, 1990.
[
Dershowitz and Plaisted, 1988
]
Nachum Dershowitz and David A. Plaisted. Equational
programming. In J. E. Hayes, D. Michie, and J. Richards, editors, Machine Intelligence
11: The logic and acquisition of knowledge, chapter 2, pages 21{56. Oxford Press, Oxford,
1988.
[
Devie, 1991
]
Herve Devie. Une Approche Algebrique de la Reecriture et son Application a
la derivation de Procedures de Completion. PhD thesis, Universite de Paris-Sud, Orsay,
France, 1991.
[
Devienne, 1993
]
Phillipe Devienne, personal communication, 1993.
[
Dick and Watson, 1991
]
A. J. J. Dick and P. Watson. Order-sorted term rewriting. Com-
puting J., 34(1):16{19, February 1991.
[
Diekert, 1990
]
Volker Diekert, editor. Proceedings of the Workshop of the ERBA-Working-
Group No. 3166 on Algebraic and Syntactic Methods in Computer Science (ASMICS),
Munich, Germany, January 1990. Technische Universitat Munchen.
[
Dougherty, 1991
]
Daniel Dougherty. Adding algebraic rewriting to the untyped lambda
calculus (extended abstract). In Ron Book, editor, Proceedings of the Fourth Interna-
tional Conference on Rewriting Techniques and Applications (Como, Italy), volume 488
of Lecture Notes in Computer Science, pages 37{48, Berlin, April 1991. Springer-Verlag.
[
Fernandez, 1993
]
Maribel Fernandez. AC-complement problems: Validity and negation
elimination. In C. Kirchner, editor, Proceedings of the Fifth International Conference on
Rewriting Techniques and Applications (Montreal, Canada), Lecture Notes in Computer
Science, Berlin, 1993. Springer-Verlag.
[
Freese, 1993
]
R. Freese, personal communication, 1993.
[
Fribourg, 1985
]
Laurent Fribourg. SLOG: A logic programming language interpreter
based on clausal superposition and rewriting. In Proceedings of the Symposium on Logic
Programming, pages 172{184, Boston, MA, July 1985. IEEE.
[
Gilleron, 1991
]
R. Gilleron. Decision problems for term rewriting systems and recogniz-
able tree languages. In Proceedings of the Eighth Symposium on Theoretical Aspects of
Computer Science, February 1991.
[
Gilleron et al., 1993
]
Remy Gilleron, Sophie Tison, and Marc Tommasi. Solving systems
of set constraints using tree automata. In Proceedings of the Symposium on Theoretical
Aspects of Computer Science (Wurzburg, Germany), Lecture Notes in Computer Science,
Berlin, 1993. Springer-Verlag.
[
Goguen et al., 1987
]
J. A. Goguen, C. Kirchner, and J. Meseguer. Concurrent term
rewriting as a model of computation. In R. Keller and J. Fasel, editors, Proceedings of
Graph Reduction Workshop (Santa Fe, NM), volume 279 of Lecture Notes in Computer
Science, pages 53{93. Springer-Verlag, 1987.
[
Hanschke and Wurtz, 1993
]
Philipp Hanschke and Jorg Wurtz. Satisability of the small-
est binary program. Information Processing Letters, 45(5):237{241, April 1993.
[
Heintze and Jaar, 1990
]
Nevin Heintze and Joxan Jaar. A decision procedure for a class
of set constraints. In Proceedings of the Fifth Symposium on Logic in Computer Science
(Philadelphia, PA), pages 42{51. IEEE, June 1990.
[
Hofbauer and Huber, 1993
]
D. Hofbauer and M. Huber. Computing linearizations using
test sets. In M. Rusinowitch, editor, Proceedings of the Third International Workshop
on Conditional Rewriting Systems (Pont-a-Mousson, France, July 1992), volume 656
of Lecture Notes in Computer Science, pages 287{301, Berlin, January 1993. Springer-
Verlag.
[Homann and Plump, 1991
]
B. Homann and D. Plump. Implementing term rewriting
by jungle evaluation. RAIRO Theoretical Informatics and Applications, 25(5):445{472,
1991.
[
Hsiang et al., 1992
]
Jieh Hsiang, Helene Kirchner, Pierre Lescanne, and Michael Rusinow-
itch. The term rewriting approach to automated theorem proving. J. Logic Programming,
14(1&2):71{99, October 1992.
[
Huet, 1980
]
Gerard Huet. Conuent reductions: Abstract properties and applications to
term rewriting systems. J. of the Association for Computing Machinery, 27(4):797{821,
October 1980.
[
Huet and Oppen, 1980
]
Gerard Huet and Derek C. Oppen. Equations and rewrite rules:
A survey. In R. Book, editor, Formal Language Theory: Perspectives and Open Problems,
pages 349{405, New York, 1980. Academic Press.
[
Inverardi and Nesi, 1991
]
P. Inverardi and M. Nesi. Innite normal forms for non linear
term rewriting systems. Technical Report B4-41, Istituto di Elaborazione, Pisa, Italy,
October 1991.
[
Jouannaud and Kirchner, 1991
]
Jean-Pierre Jouannaud and Claude Kirchner. Solving
equations in abstract algebras: A rule-based survey of unication. In J.-L. Lassez and
G. Plotkin, editors, Computational Logic: Essays in Honor of Alan Robinson. MIT Press,
Cambridge, MA, 1991.
[
Jouannaud and Kirchner, 1986
]
Jean-Pierre Jouannaud and Helene Kirchner. Completion
of a set of rules modulo a set of equations. SIAM J. on Computing, 15:1155{1194,
November 1986.
[
Jouannaud and Kounalis, 1989
]
Jean-Pierre Jouannaud and Emmanuel Kounalis. Auto-
matic proofs by induction in equational theories without constructors. Information and
Computation, 81(1):1{33, 1989.
[
Jouannaud and Marche, 1990
]
Jean-Pierre Jouannaud and Claude Marche. Completion
modulo associativity, commutativity and identity. In Alfonso Miola, editor, Proceedings of
the International Symposium on the Design and Implementation of Symbolic Computation
Systems (Capri, Italy), volume 429 of Lecture Notes in Computer Science, pages 111{120,
Berlin, April 1990. Springer-Verlag.
[
Jouannaud and Okada, 1991a
]
Jean-Pierre Jouannaud and Mitsuhiro Okada. Executable
higher-order algebraic specication languages. In Proceedings of the Sixth Symposium on
Logic in Computer Science, pages 350{361, Amsterdam, The Netherlands, 1991. IEEE.
[
Jouannaud and Okada, 1991b
]
Jean-Pierre Jouannaud and Mitsuhiro Okada. Satisabil-
ity of systems of ordinal notations with the subterm property is decidable. In J. Leach
Albert, B. Monien, and M. Rodrguez Artalejo, editors, Proceedings of the Eighteenth
EATCS Colloquium on Automata, Languages and Programming (Madrid, Spain), volume
510 of Lecture Notes in Computer Science, pages 455{468, Berlin, July 1991. Springer-
Verlag.
[
Kapur and Narendran, 1992
]
Deepak Kapur and Paliath Narendran. Double-exponential
complexity of computing a complete set of AC-uniers (Preliminary report). In Proceed-
ings of the Seventh Symposium on Logic in Computer Science, pages 11{21, Santa Cruz,
CA, June 1992. IEEE.
[
Kapur et al., 1987
]
Deepak Kapur, Paliath Narendran, and Hantao Zhang. On su-
cient completeness and related properties of term rewriting systems. Acta Informatica,
24(4):395{415, August 1987.
[
Kapur et al., 1990
]
Deepak Kapur, G. Sivakumar, and Hantao Zhang. A new method for
proving termination of AC-rewrite systems. In Proceedings of the Tenth International
Conference of Foundations of Software Technology and Theoretical Computer Science,
volume 472 of Lecture Notes in Computer Science, pages 133{148, Berlin, 1990. Springer-
Verlag.
[Kennaway et al., 1990
]
J. R. Kennaway, J. W. Klop, M. R. Sleep, and F. J. de Vries.
Transnite reductions in orthogonal term rewriting systems. Technical Report CS-R9041,
CWI, Amsterdam, 1990.
[
Kennaway et al., 1991
]
J. R. Kennaway, J. W. Klop, M. R. Sleep, and F. J. de Vries.
Transnite reductions in orthogonal term rewriting systems (Extended abstract). In Ron
Book, editor, Proceedings of the Fourth International Conference on Rewriting Techniques
and Applications (Como, Italy), Lecture Notes in Computer Science, pages 1{12, Berlin,
April 1991. Springer-Verlag.
[
Kirchner and Kirchner, 1989
]
C. Kirchner and H. Kirchner. Constrained equational rea-
soning. In Proceedings of the ACM-SIGSAM 1989 International Symposium on Symbolic
and Algebraic Computation, Portland (Oregon), pages 382{389. ACM Press, July 1989.
Report CRIN 89-R-220.
[
Kirchner et al., 1990
]
C. Kirchner, H. Kirchner, and M. Rusinowitch. Deduction with
symbolic constraints. RAIRO Theoretical Informatics and Applications, 4(3):9{52, 1990.
Special issue on Automatic Deduction.
[
Klop, 1980
]
Jan Willem Klop. Combinatory Reduction Systems, volume 127 ofMathemat-
ical Centre Tracts. Mathematisch Centrum, Amsterdam, 1980.
[
Klop, 1992
]
Jan Willem Klop. Term rewriting systems. In S. Abramsky, D. M. Gabbay,
and T. S. E. Maibaum, editors, Handbook of Logic in Computer Science, volume 2, chap-
ter 1, pages 1{117. Oxford University Press, Oxford, 1992.
[
Kounalis and Lugiez, 1991
]
Emmanuel Kounalis and Denis Lugiez. Compilation of pat-
tern matching with associative commutative functions. In Proceedings of the International
Joint Conference on Theory and Practice of Software Development, volume 1: Colloquium
on Trees in Algebra and Programming (Brighton, U.K.), Lecture Notes in Computer Sci-
ence, pages 57{73, Berlin, April 1991. Springer-Verlag.
[
Kounalis et al., 1991
]
Emmanuel Kounalis, Denis Lugiez, and L. Pottier. A solution of
the complement problem in associative-commutative theories. In A. Tarlecki, editor,
Proceedings of the Sixteenth International Symposium on Mathematical Foundations of
Computer Science (Kazimierz Dolny, Poland), volume 520 of Lecture Notes in Computer
Science, pages 287{297, Berlin, September 1991. Springer-Verlag.
[
Kruskal, 1960
]
Joseph B. Kruskal. Well-quasi-ordering, the Tree Theorem, and Vazsonyi's
conjecture. Transactions of the American Mathematical Society, 95:210{225, May 1960.
[
Kucherov, 1991
]
G. Kucherov. On relationship between term rewriting systems and reg-
ular tree languages. In Ron Book, editor, Proceedings of the Fourth International Con-
ference on Rewriting Techniques and Applications (Como, Italy), volume 488 of Lecture
Notes in Computer Science, pages 299{311, Berlin, April 1991. Springer-Verlag.
[
Kucherov and Tajine, 1993
]
G. Kucherov and M. Tajine. Decidability of regularity and
related properties of ground normal form languages. In M. Rusinowitch, editor, Pro-
ceedings of the Third International Workshop on Conditional Rewriting Systems (Pont-
a-Mousson, France, July 1992), volume 656 of Lecture Notes in Computer Science, pages
272{286, Berlin, January 1993. Springer-Verlag. To appear in Information and Compu-
tation.
[
Kurihara and Ohuchi, 1992
]
M. Kurihara and A. Ohuchi. Modularity of simple termina-
tion of term rewriting systems with shared constructors. Theoretical Computer Science,
103:273{282, 1992.
[
Kurth, 1990
]
W. Kurth. Termination und Konuenz von Semi-Thue-Systems mit nur
einer Regel. PhD thesis, Technische Universitat Clausthal, Clausthal, Germany, 1990.
[
Lankford, 1975
]
Dallas S. Lankford. Canonical inference. Memo ATP-32, Automatic The-
orem Proving Project, University of Texas, Austin, TX, December 1975.
[Lankford, 1979
]
Dallas S. Lankford. On proving term rewriting systems are Noetherian.
Memo MTP-3, Mathematics Department, Louisiana Tech. University, Ruston, LA, Oc-
tober 1979.
[
Lassez and Marriott, 1987
]
J.-L. Lassez and K. G. Marriott. Explicit representation of
terms dened by counter examples. J. Automated Reasoning, 3(3):1{17, September 1987.
[
Lescanne, 1990
]
P. Lescanne. Well rewrite orderings. In J. Mitchell, editor, Proceedings
of the Fifth Symposium on Logic in Computer Science, pages 239{256, Philadelphia, PA,
1990.
[
Lescanne, 1992
]
Pierre Lescanne. Termination of rewrite systems by elementary inter-
pretations. In H. Kirchner and G. Levi, editors, Proceedings of the Third International
Conference on Algebraic and Logic Programming (Pisa, Italy), volume 632 of Lecture
Notes in Computer Science, pages 21{36. Springer-Verlag, September 1992.
[
Litovski et al., to appear
]
Igor Litovski, Yves Metivier, and Eric Sopena. Denitions and
comparisons of local computations on graphs. Mathematical Systems Theory, to appear.
Available as internal report 91-43 of LaBRI, University of Bordeaux 1.
[
Lugiez and Moysset, 1993
]
D. Lugiez and J.-L. Moysset. Complement problems and tree
automata in AC-like theories. In Proceedings of the Symposium on Theoretical Aspects
of Computer Science (Wurzburg, Germany), Lecture Notes in Computer Science, Berlin,
1993. Springer-Verlag.
[
Marche, 1993
]
Claude Marche, personal communication, 1993.
[
Meseguer, 1992
]
Jose Meseguer. Conditional rewriting logic as a unied model of concur-
rency. Theoretical Computer Science, 96:73{155, 1992.
[
Metivier, 1985
]
Yves Metivier. Calcul de longueurs de cha^nes de reecriture dans le
monode libre. Theoretical Computer Science, 35(1):71{87, January 1985.
[
Middeldorp, 1990
]
Aart Middeldorp. Modular Properties of Term Rewriting Systems.
PhD thesis, Vrije Universiteit, Amsterdam, The Netherlands, 1990.
[
Middeldorp and Toyama, 1991
]
Aart Middeldorp and Yoshihito Toyama. Completeness
of combinations of constructor systems. In R. Book, editor, Proceedings of the Fourth In-
ternational Conference on Rewriting Techniques and Applications (Como, Italy), volume
488 of Lecture Notes in Computer Science, pages 174{187, Berlin, April 1991. Springer-
Verlag.
[
Milner et al., 1992
]
R. Milner, J. Parrow, and D. Walker. A calculus of mobile processes,
I and II. Information and Computation, 100:1{77, 1992.
[
Muller, 1992
]
Fritz Muller. Conuence of the lambda calculus with left-linear algebraic
rewriting. Information Processing Letters, 41:293{299, April 1992.
[
Nipkow, 1991
]
Tobias Nipkow. Higher-order critical pairs. In Proceedings of the Sixth
Symposium on Logic in Computer Science, pages 342{349, Amsterdam, The Netherlands,
1991. IEEE.
[
Nipkow, 1991
]
Tobias Nipkow. Higher-order critical pairs. In Proceedings of the Sixth
Symposium on Logic in Computer Science, pages 342{349, Amsterdam, The Netherlands,
1991. IEEE.
[
Nieuwenhuis, 1993
]
Robert Nieuwenhuis. A new ordering constraint solving method and
its applications. In C. Kirchner, editor, Proceedings of the Fifth International Confer-
ence on Rewriting Techniques and Applications (Montreal, Canada), Lecture Notes in
Computer Science, Berlin, 1993. Springer-Verlag.
[
O'Donnell, 1985
]
Michael J. O'Donnell. Equational Logic as a Programming Language.
MIT Press, Cambridge, MA, 1985.
[
Oostrom, 1992
]
V. van Oostrom. Conuence by decreasing diagrams. IR 298, Vrije Uni-
versiteit, Amsterdam, The Netherlands, August 1992. To appear in Theoretical Computer
Science.
[Oyamaguchi, 1987
]
M. Oyamaguchi. The Church-Rosser property for ground term rewrit-
ing systems is decidable. Theoretical Computer Science, 49(1):43{79, 1987.
[
Oyamaguchi and Ohta, 1993
]
M. Oyamaguchi and Y. Ohta. On the conuent property of
right-ground term rewriting systems. Trans. IEICE, J76-D-I:39{45, 1993.
[
Peterson and Stickel, 1981
]
Gerald E. Peterson and Mark E. Stickel. Complete sets of
reductions for some equational theories. J. of the Association for Computing Machinery,
28(2):233{264, April 1981.
[
Plump, 1991
]
D. Plump. Implementing term rewriting by graph reduction: Termination
of combined systems. In S. Kaplan and M. Okada, editors, Proceedings of the Second
International Workshop on Conditional and Typed Rewriting Systems (Montreal, Canada,
June 1990), volume 516 of Lecture Notes in Computer Science, pages 307{317, Berlin,
1991. Springer-Verlag.
[
Plump, 1993
]
D. Plump. Hypergraph rewriting: Critical pairs and undecidability of con-
uence. In M. R. Sleep, M. J. Plasmeijer, and M. C. van Eekelen, editors, Term Graph
Rewriting: Theory and Practice, chapter 15. Wiley, 1993. To appear.
[
Reddy, 1986
]
Uday S. Reddy. On the relationship between logic and functional languages.
In D. DeGroot and G. Lindstrom, editors, Logic Programming: Functions, Relations, and
Equations, pages 3{36. Prentice-Hall, Englewood Clis, NJ, 1986.
[
Ringeissen, 1992
]
Christophe Ringeissen. Unication in a combination of equational theo-
ries with shared constants and its application to primal algebras. In A. Voronkov, editor,
Proceedings of the Conference on Logic Programming and Automated Reasoning (St. Pe-
tersburg, Russia), volume 624 of Lecture Notes in Articial Intelligence, Berlin, July 1992.
Springer-Verlag.
[
Robertson and Seymour, 1982
]
Neil Robertson and P. D. Seymour. Graph minors IV.
Tree-width and well-quasi-ordering. Submitted 1982; revised January 1986.
[
Rubio and Nieuwenhuis, 1993
]
A. Rubio and R. Nieuwenhuis. A precedence-based total
AC-compatible ordering. In C. Kirchner, editor, Proceedings of the Fifth International
Conference on Rewriting Techniques and Applications (Montreal, Canada), Lecture Notes
in Computer Science, Berlin, 1993. Springer-Verlag.
[
Schmidt-Schau, 1989
]
M. Schmidt-Schau. Unication in a combination of arbitrary dis-
joint equational theories. J. Symbolic Computation, 8(1&2):51{99, 1989.
[
Statman, 1991
]
R. Statman. There is no hyperrecurrent S,K combinator. Research Re-
port 91{133, Department of Mathematics, Carnegie Mellon University, Pittsburgh, PA,
1991.
[
Statman, 1992
]
R. Statman. A short note on a problem of Ray Smullyan. Rapport,
Institut National de Rechereche en Informatique et en Automatique, Le Chesnay, France,
1992.
[
Tajine, 1993
]
M. Tajine. Negation elimination for syntactic equational formula. In
C. Kirchner, editor, Proceedings of the Fifth International Conference on Rewriting Tech-
niques and Applications (Montreal, Canada), Lecture Notes in Computer Science, Berlin,
1993. Springer-Verlag.
[
Takahashi, 1993
]
M. Takahashi. -calculi with conditional rules. In M. Bezem and J. F.
Groote, editors, Proceedings of the International Conference on Typed Lambda Calculi
and Applications (Utrecht, The Netherlands), volume 664 of Lecture Notes in Computer
Science, pages 406{417, Berlin, 1993. Springer-Verlag.
[
Thue, 1914
]
A. Thue. Probleme uber veranderungen von zeichenreihen nach gegeben
regeln. Skr. Vid. Kristianaia I. Mat. Naturv. Klasse, 10/34, 1914.
[
Tiden and Arnborg, 1987
]
Erik Tiden and Stefan Arnborg. Unication problems with
one-sided distributivity. J. of Symbolic Computation, 3:183{202, 1987.
[
Toyama, 1987
]
Yoshihito Toyama. On the Church-Rosser property for the direct sum of
term rewriting systems. J. of the Association for Computing Machinery, 34(1):128{143,
January 1987.
[
Toyama et al., 1989
]
Yoshihito Toyama, Jan Willem Klop, and Hendrik Pieter Baren-
dregt. Termination for the direct sum of left-linear term rewriting systems. In Nachum
Dershowitz, editor, Proceedings of the Third International Conference on Rewriting Tech-
niques and Applications (Chapel Hill, NC), volume 355 of Lecture Notes in Computer
Science, pages 477{491, Berlin, April 1989. Springer-Verlag.
[
Treinen, 1990
]
Ralf Treinen. A new method for undecidability proofs of rst order theories.
In K. V. Nori and C. E. Veni Madhavan, editors, Proceedings of the Tenth Conference on
Foundations of Software Technology and Theoretical Computer Science, volume 472 of
Lecture Notes in Computer Science, pages 48{62. Springer-Verlag, 1990.
[
Treinen, 1992
]
Ralf Treinen. A new method for undecidability proofs of rst order theories.
J. Symbolic Computation, 14(5):437{457, November 1992.
[
Vagvolgyi and Gilleron, 1992
]
S. Vagvolgyi and R. Gilleron. For a rewrite system it is de-
cidable whether the set of irreducible, ground terms is decidable. Bulletin of the European
Association for Theoretical Computer Science, 48:197{209, October 1992.
[
Venkataraman, 1987
]
K. N. Venkataraman. Decidability of the purely existential fragment
of the theory of term algebras. J. of the Association for Computing Machinery, 34(2):492{
510, 1987.
[
Venturini-Zilli, 1984
]
M. Venturini-Zilli. Reduction graphs in the Lambda Calculus. The-
oretical Computer Science, 29:251{275, 1984.
[
Visser, 1980
]
A. Visser. Numerations, lambda calculus, and arithmetic. In Hindley and
Seldin, editors, Essays on Combinatory Logic, Lambda-Calculus, and Formalism, pages
259{284. Academic Press, 1980.
[
Weiermann, 1992
]
Andreas Weiermann. Well-rewrite orderings and the induced recursive
path orderings. Unpublished note, Institut fur Mathematische Logik und Grundlagen-
forschung, 1992.
[
Wrathall, 1990
]
C. Wrathall. Conuence of one-rule Thue systems. In Proceedings of the
First International Workshop on Word Equations and Related Topics (Tubingen), volume
572 of Lecture Notes in Computer Science, pages 237{246, Berlin, 1990. Springer-Verlag.
[
Zantema, 1993
]
H. Zantema. Type removal in term rewriting. In M. Rusinowitch, edi-
tor, Proceedings of the Third International Workshop on Conditional Rewriting Systems
(Pont-a-Mousson, France, July 1992), volume 656 of Lecture Notes in Computer Science,
pages 148{154, Berlin, January 1993. Springer-Verlag.
This article was processed using the LT
E
X macro package with LLNCS style
