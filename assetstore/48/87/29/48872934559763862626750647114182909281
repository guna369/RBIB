NASA/CR-2002-211637
ICASE Report No. 2002-12
Air Traffic Conflict Resolution and Recovery
Aljons Geser and COsar Mu_oz
ICASE, Hampton, Virginia
Gilles Dowek
INRIA, Le Chesnay Cedex, France
Florent Kirchner
ENA C, Toulouse, France
May 2002
The NASA STI Program Office... in Profile
Since its founding, NASA has been dedicated
to the advancement of aeronautics and space
science. The NASA Scientific and Technical
Information (STI) Program Office plays a key
part in helping NASA maintain this
important role.
The NASA STI Program Office is operated by
Langley Research Center, the lead center for
NASA's scientific and technical information.
The NASA STI Program Office provides
access to the NASA STI Database, the
largest collection of aeronautical and space
science STI in the world. The Program Office
is also NASA's institutional mechanism for
disseminating the results of its research and
development activities. These results are
published by NASA in the NASA STI Report
Series, which includes the following report
types:
TECHNICAL PUBLICATION. Reports of
completed research or a major significant
phase of research that present the results
of NASA programs and include extensive
data or theoretical analysis. Includes
compilations of significant scientific and
technical data and information deemed
to be of continuing reference value. NASA's
counterpart of peer-reviewed formal
professional papers, but having less
stringent limitations on manuscript
length and extent of graphic
presentations.
TECHNICAL MEMORANDUM.
Scientific and technical findings that are
preliminary or of specialized interest,
e.g., quick release reports, working
papers, and bibliographies that contain
minimal annotation. Does not contain
extensive analysis.
CONTRACTOR REPORT. Scientific and
technical findings by NASA-sponsored
contractors and grantees.
CONFERENCE PUBLICATIONS.
Collected papers from scientific and
technical conferences, symposia,
seminars, or other meetings sponsored or
cosponsored by NASA.
SPECIAL PUBLICATION. Scientific,
technical, or historical information from
NASA programs, projects, and missions,
often concerned with subjects having
substantial public interest.
TECHNICAL TRANSLATION. English-
language translations of foreign scientific
and technical material pertinent to
NASA's mission.
Specialized services that complement the
STI Program Office's diverse offerings include
creating custom thesauri, building customized
data bases, organizing and publishing
research results.., even providing videos.
For more information about the NASA STI
Program Office, see the following:
• Access the NASA STI Program Home
Page at http://www.sti.nasa.gov
• Email your question via the Internet to
help@sti.nasa.gov
• Fax your question to the NASA STI
Help Desk at (301) 621-0134
• Telephone the NASA STI Help Desk at
(301) 621-0390
Write to:
NASA STI Help Desk
NASA Center for AeroSpace Information
7121 Standard Drive
Hanover, MD 21076-1320
NASA/CR-2002-211637
ICASE Report No. 2002-12
y
Air Traffic Conflict Resolution and Recovery
Aljons Geser and COsar Mu_oz
ICASE, Hampton, Virginia
Gilles Dowek
INRIA, Le Chesnay Cedex, France
Florent Kirchner
ENA C, Toulouse, France
ICASE
NASA Langley Research Center
Hampton, Virginia
Operated by Universities Space Research Association
May 2002
Prepared for Langley Research Center
under Contract NAS 1-97046
Available from the following:
NASA Center for AeroSpace Information (CASI)
7121 Standard Drive
Hanover, MD 21076-1320
(301) 621-0390
National Technical Information Service (NTIS)
5285 Port Royal Road
Springfield, VA 22161-2171
(703) 487-4650
AIR TRAFFIC CONFLICT RESOLUTIONAND RECOVERY*
ALFONSGESER1,Ct)SARMUIKIOZ_,GILLESDOWEK§,ANDFLORENTKIRCHNER¶
Abstract. Anessentialelementin theFreeFlightconceptis thedetectionandavoidanceof airtraffic
conflicts.A conflictoccurswhentherequiredseparationbetweentwoaircraft,namelytheownshipandthe
intruder,is lost. Conflictdetectionandresolutionsystemspredictlossof separationandoutputconflict
avoidancemaneuversthat diverttheownshipfromits originaltrajectory.In thispaper,weaddressthe
problemof redirectingtheownshipto its originalpath,in a geometricoptimalway,withoutintroducing
newconflicts.WecallthisconceptResolution and Recovery. Given the current 3-dimensional position and
velocity vectors of two aircraft in predicted conflict and the ownship's required time of arrival at the target
point, the resolution and recovery algorithm outputs a choice of maneuvers. Each maneuver comprises an
escape course and a recovery course to be followed by the ownship. The escape course brings the ownship off
the predicted conflict and the recovery course returns it to the original target point. We provide a rigorous
mathematical description of the problem and show that the algorithm is correct, i.e., no matter which of
the proposed maneuvers the ownship picks, it will arrive at the target point at the scheduled time while
maintaining the minimum required separation to the intruder at all times.
Key words, conflict detection and resolution, 3-dimensional airspace, traffic avoidance, fl'ee flight
Subject classification. Computer Science
1. Introduction. Conflict Detection and Resolution (CD&R) systems are designed to warn air traffic
controllers and/or pilots about an imminent loss of separation between aircraft, and to assist them in a
corrective maneuver. Algorithms for CD&R have been largely studied over the last decade (for a survey on
CD&R methods see [11]) and new algorithms are proposed every day.
With the emerging of more reliable surveillance and communication technologies, air borne CD&R capa-
bility is becoming a fundamental feature of new concepts for air traffic management such as Free Flight [14]
and DAG-TM (Distributed Air/Ground Traffic concept) [1]. These concepts address the expected increase
in air traffic density in the next decades, by distributing among the different actors of the airspace system
the responsibility for keeping minimum traffic separation. In contrast to ground-based systems, on board
systems have a limited access to computational resources and, by their nature, are distributed. To target
the complexity of a fl'ee-ffight environment, new approaches for CD&R have been proposed based on non-
standard programming techniques such as genetic algorithms [6, 12, 9], neural networks [5], game theory
[15], graph theory [3], or semidefinite programming [8]. These approaches deal with issues such as multi-
ple aircraft conflicts and uncertainties in the prediction of aircraft trajectories. Given the computational
complexity of some of these approaches, they may require time and space diseretizations.
A more classical approach to CD&R is the so-called geometric approach [7, 10, 2, 4]. In this approach,
aircraft trajectory predictions are based on linear projections of current aircraft states. This approach
exploits the facts that linear projections can be computed efficiently and that prediction errors are negligible
*This work was supported by the National Aeronautics and Space Administration under NASA Contract No. NAS1-97046
while the authors were in residence at ICASE, NASA Langley Research Center, Hampton, VA 23681-2199, USA.
IICASE, Mail Stop 132C, NASA Langley Research Center, Hampton, VA 23681-2199, USA, e-maih geser©icase.edu.
$ICASE, Mail Stop 132C, NASA Langley Research Center, Hampton, VA 23681-2199, USA, e-maih munoz©icase.edu.
§INRIA, Domaine de ¥%lueeau - Roequencourt - B.P. 105, 78153 Le Chesnay Cedex, France, e-maih Gilles .Dowek©inria.fr.
¶ENAC, 7 Avenue Edouard Belin, 31000 Toulouse, France, e-maih fkirchne©mis.enac.fr.
during short look-ahead times. For this reason, this approach is also referred as tactical. For large look-
ahead times a more strategic approach that looks at the (pilot) intent irtformatiort, i.e., the flight plan, is
in order. While tactical approaches have well-understood geometric descriptions that allow for efficient and
clear algorithms, they fall short on pilots' expectations in some field studies [16]. Strategic approaches seem
to be more appreciated by pilots, but their theory is far less understood.
In a previous work [4], we have proposed a geometric optimization algorithm for CD&R in a 3-D airspace.
In this paper, we address the recovery problem, that is, redirecting the ownship to the original path while
maintaining the minimum required separation at all times. The new proposed algorithm is on the border
between tactical and strategic algorithms. Its inputs are the three-dimensional position and velocity vectors
of two aircraft, which we call the ownship and the intruder aircraft, and the time where the ownship is
required to arrive at its target point ("Required Time of Arrival", RTA). The RTA defines the position of
the target point by the ownship's constant movement. RTA is a limited form of intent information: the target
point may be the next trajectory change point in the ownship flight plan. Assuming a loss of separation
between two aircraft, the algorithm outputs a choice of maneuvers for the ownship. Each maneuver consists
of an escape course that brings the ownship off the predicted conflict, and a subsequent recovery co_ar'se that
leads the ownship back to its original path. If the ownship follows any proposed maneuver then it arrives
at RTA at the scheduled position without having experienced a loss of separation at any time. In the mean
time, the intruder aircraft is assumed to continue its current trajectory, that is, ownship resolution and
recovery maneuvers take place assuming no cooperation of the intruder aircraft.
The various maneuvers that our algorithm proposes differ in the constraints they satisfy. For example,
one constraint requires that during the maneuver, the ownship may only change its ground speed, but not
its heading or its vertical speed. Another constraint requires that only the vertical speed of the ownship
may change. Imposing such constraints restricts the number of choices to finitely many, simplifies the
calculations performed by the algorithm, is simple to conceive and to perform by the crew, and enhances
passenger comfort. The maneuvers that our algorithm outputs may be rendered at a display for the air traffic
controller or the pilot who may select among the proposed solutions. Our algorithm is also suitable for use
underneath a trajectory planner which may perform the selection. However, we do not address the question
of physical implementability of the maneuvers proposed by the algorithm. In particular, the algorithm
does not check for minimum/maximum altitude/airspeed. Nor does it implement cost-based analysis such
as fuel consumption. It depends on the capabilities of the ownship whether a proposed maneuver can be
implemented or not. Since aircraft performance data are not available to the algorithm, we assume that
these kinds of analysis are implemented in an external module.
The algorithm is computationally efficient, suitable for embedding in a flight-deck computer, and appro-
priate for formal verification. In particular, we have a rigorous analysis, by pencil and paper, of the algorithm.
Mechanically checked proofs are currently under development. We strongly believe that given the critical-
ity of CD&R, rigorous techniques and well-understood mathematical models are required to guarantee the
overall safety of the new, and more autonomous, air traffic systems.
Notation. Variables denoting positions are named "s", velocities are named "v", and times are named
"t"; ownship variables are subscripted by "o"; intruder variables are subscripted by "i"; relative and generic
variables have neither subscript. Coordinate names (x,y, or z) are appended as a subscript to the name.
Variables assigned to the escape course receive a prime; variables assigned to the recovery course receive
' denotes the x coordinate of the ownship escape speed, vy denotes the ya double prime. For instance Vo_
coordinate of the original relative speed, and t' denotes the time the escape course ends.
2. Definitionofthe Problem.Forconflictdetectionpurposes,aircraftareassumedtobesurrounded
byanavoidance region, which is typically a cylinder of diameter 5 nautical miles and height 1000 feet. Two
aircraft are said to be in conflict when their avoidance regions overlap. In this paper, we take an alternative,
but equivalent view, where aircraft are surrounded by pfvtected zones twice as big as the individual avoidance
regions. In this view, a conflict is the incursion of one aircraft in the protected zone of another one.
We assume the airspace given as a three-dimensional Cartesian coordinate system, where the z-axis points
upward in the vertical direction. We consider two aircraft, namely ownship and intruder. The ownship's
initial position (i.e., its position at time t = 0) is given by the vector _ = (sox, so_, So_). The ownship's
original velocity vector is given by _ = (Vox, Vov, vow). Likewise the intruder's initial position, _, and the
intruder's velocity vector, _, are given. It is convenient to consider the ownship's motion relative to the
intruder. For this purpose, we introduce a relative coordinate system where the intruder's position is at the
origin, and we consider the relative position vector g = (s_, sv, s_) = _ - _ and the relative velocity vector
,7 = (v_, vy, v_) = _ - _. In this coordinate system, the protected zone is a cylinder P around the intruder
defined as follows:
P= {(x,y,z) l x2 + y2 < D 2 and Izl < H].
In the usual view, D and H denote the diameter and height of the avoidance region, respectively.
The aircraft are said to be in conflict at time t when g+ tg C P. They are in predicted conflict if they
are in conflict at some time 0 < t.
Given a velocity vector _g= (Vx, vy, v_), we define the following concepts.
• Ground speed: Length of the horizontal projection of g, i.e., \/v_ + V 2 ,
• Vertical speed: Vertical component of ,7, i.e., v_.
• Heading: Direction of the horizontal projection of 9', i.e., angle a such that vx = vcos(a) and
vy = v sin(a), where v is the ground speed of _g. We avoid explicit references to a in our analytical
description of the escape-recovery maneuvers.
The task of the resolution and recovery algorithm (RR3D) is defined as follows:
Inputs:
• Initial relative ownship's position g.
• Absolute velocity vectors t_, v_ of ownship and intruder aircraft, respectively. The relative velocity
vector is given by _b"= fro - _.
• Required Time of Arrival (RTA) or target time t" > 0, which determines the target point
#' = g+ t"_. (2.1)
Assumptions:
• Courses, i.e., trajectories between way-points, are line segments. Hence, courses are described by
a position, a velocity vector, and a time interval. Moreover, we assume that changes of course or
speed are implemented in zero time by an aircraft.
2 _2
• Absolute ground speeds are not zero, i.e.. %, + roy _ 0 and v_ + v? # 0.Zy
• Neither at initial time nor at target time are the aircraft in conflict, i.e., g, if' _ P.
• Neither at initial time nor at target time is the ownship at the boundary of the intruder's protected
zone, i.e.,g,s'• {(x,y,z) I x_+y_ ¢ D_ or Izl >H}.
• The aircraft are in predicted conflict before t", i.e., g+ t_7 • P for some time 0 < t < t".
Outputs: A list of maneuvers each one a triple, , .7 .7,(t ,%, vo), composed of
Protected zone
t=0
O_'{rjgjzlalCo _ zO_a_ishiP?rrent_ R_....i._u_ er'sfixeposition _Se _ Intruder's fixed position _H
Ownship' s scheduled
trajectory change point
FIG. 2.1. Predicted conflict scenario
t=0
change point
FIG. 2.2. Escape-recovery maneuver
• A time of switch t' such that 0 < t' < t".
• An escape velocity vector _do that determines a conflict-free escape course for the ownship, i.e., let
= - <, then
g+tv 3_P for all times0<t<t'. (2.2)
• A recovery velocity vector @ that determines a conflict-free and on-time recovery co_arse for the
ownship, i.e., let v7' = @ - v_, then
g+ t'_d + (t - t')_J ' _ P for all times t' < t < t", and (2.3)
g+ + (t" - = J,. (2.4)
In other words, if the ownship flies the escape course from time 0 to t', and the recovery course from
time t' to t", then (1) it shall not be in conflict at any time (by (2.2) and (2.3)) and (2) it arrives at s" at
time t" (by (2.4)). We assume no cooperation from the intruder aircraft, i.e., the intruder does not need to
maneuver. The original situation is depicted in Figure 2.1, and the escape and recovery courses are depicted
in Figure 2.2. Henceforth, we call the ownship's change of the velocity vector from v_ to v3othe escape step,
and its change from _ to @ the recovery step.
The ownship's maneuvers shall be constrained in such a way that both _ and @ satisfy one of the
following conditions:
1. Change of vertical speed only. The ownship's vertical speed may change but neither its heading nor
, H and t/ Hits ground speed, i.e., vo_ = Vo_ = Vo_ ov = roy = Vov.
2. Change of ground speed only. The ownship's ground speed may change but neither its heading nor
' and
' =kVo_,V' =kvov, andvo_ =Vo_,its vertical speed. Formally, there is a k > 0 such that %, ov
,, • ,,
there is a j > 0 such that Vo_ = JVo,, Vov = jVov, and t/o'_ = Vow.
FIG. 3.1. Escape/Recovery courses: Line case
3. Change of heading. In the two dimensional projection, the escape course and the recovery course
(each in absolute coordinates) form a triangle. By the triangle inequality, the escape course and the
recovery course together are longer than the original course. To arrive at the target point at time
t", the ownship has to compensate the longer way by a greater average ground speed as opposed to
its original ground speed. Hence, maneuvers where only heading changes are allowed cannot reach
the target point in time. In this case, we propose a change of heading combined with a change of
ground speed at time t'. For the escape step, the ownship's heading may change, but neither its
ground speed nor its vertical speed; for the recovery step in addition to a heading change, one must
/2 t2 2 2 ,l gild " Voz.allow for g change of ground speed as well. Formally, Vox + Voy = Vox + Voy , Vo_ = Vow, vo_ =
Furthermore, we require that the escape-recovery maneuvers are tangential to the lateral surface of the
protected zone. We conjecture that tangential maneuvers are optimal, among all maneuvers that satisfy the
same set of constraints, in the following sense. The amount of change in one step is expressed by the velocity
'_ v_ and Av 7' ,7, _ The effort of a maneuver is the sum of squares of itschange vectors A_d = v o - = Vo - Vo'.
velocity change vectors, i.e., IAv_l2+ lavV,I2. X maneuver is called optimal if its effort is less than, or equal
to, the effort of any other maneuver.
3. Correctness Criteria. In this section we use Y, _Y,t in an generic way, i.e., they do not necessarily
refer to the relative variables. We define the infinite cylinder" as the set of points
P_={W,>z) lx _+y_ <O_},
and we define the infinite slice as the set of points
S_ = {(x,y,z) llzI < H}.
The algorithm only considers two kinds of escape and recovery courses:
• Line case: Courses that are tangential to the lateral surface of the protected zone (Figure 3.1). That
is, for some point Y, g is tangent to Po+.
• Circle case: Courses that are incident to one of the disks of the protected zone without intersecting
2 2 = D 2, I<l -- H, and the moving pointits interior (Figure 3.2). That is, for some point g, s, + sy
either enters the infinite cylinder upon leaving the infinite slice or leaves the infinite cylinder upon
entering the infinite slice.
Note that the case where the lateral surface is touched and the touching point is incident with a circle is
counted as a line case, and that the case v_ = 0, Is_l = H is counted as a circle case.
Below we provide a rigorous proof that line and circle cases are correct, i.e., they describe conflict-fl'ee
courses. Since escape and recovery courses touch P, we state without proof that they are also optimal from
a geometric point of view. In order to provide the correctness proof, we first take a time reference relative
to the time of the tangent point in the line case and relative to the time of the incident point in the circle
case, and define vertical and horizontal separation criteria.
FIG. 3.2. Escape/Recovery courses: Circle cases
For the first criterion we consider only the vertical coordinate.
LEMMA 3.1 (Vertical separation). Let a moving point _ + tg be at time 0 at the surface of S_, i.e.,
Is_l = H. (1) If s;v_ >_0 holds then ls_ + tv_ I >_H for" all t >_O. (2) If s_v; <_0 holds then ls_ + tv_ I >_ H
for all t <_O.
Pro@
2=H 2 (s_+tv_) 21. We prove that (s_ + tv;) 2 >_ H 2, and so Is_ + tv_ I >_H, for all t _> 0. Since s_ , =
H 2 + 2ts_v_ + t2v_. By hypothesis, s_v_ >_ O. Thus, (s_ + tv_) 2 >_ H 2 for t _>0.
2. By substitution of -v_ for v_ and -t for t in (1).
D
REMARK 3.2. If V_ = 0 then we have vertical separation for" all times t.
For the second criterion we consider only the horizontal plane. We are going to need a technical definition.
2 = D 2 art entry point to the infinite cylinderDEFINITION 3.3 (Entry point, exit point). We call _, s_ +sy
(for" _g), if the derivative, with respect to t, of the squared horizontal distance (s_ + tv_) 2 + (sy + try) '2 at
time 0 is non-positive; and art exit point fl'om the infinite cylinder if it is non-negative (see Figure 3.3). If
the derivative is equal to zero then we have a tangent point, which is both art entry point and an exit point.
Formally, g"is an entry point if
S_Vx + SyVy < O, (3.1)
an exit point if
and a tangent point if
S_Vx + SyVy > O, (3.2)
S_Vx + suvy = 0. (3.3)
LEMMA 3.4 (Horizontal separation). Let a moving point _+ t_ be at time 0 at the lateral surface of P,
i.e., s_ + sy2 = D 2. (1) If _ is art exit point then (s, + tv_) 2 + (s u + tVy) 2 _> D e for" t _>O. (2) If _ is art entry
point then (s_ + tv_) 2 + (sy +tvy) 2 > D 2 for t <_ O.
Pro@
1. The point g'is an exit point, i.e.,, SxV_ + SyVy >_ O. Since s_2+ Sy2= D 2, (s_ + tv_) 2+ (Sy + tVy) 2 = D 2+
2t(s_, + s_v_) + t_(_ + _). By hypothesis, (S_x + s_v_) _>0. Thus, (s_ + tvJ + (s_+ tv_)_ >_0 2
for t > 0.
2. By substitution of -g for g and -t for t in (1).
D
REMARK 3.5. If _ is a tangent point we have horizontal separation for all times t.
Distance
Distance of
closest approach
diM(t) 2
En__oint Ei_t point
Time of closest approach
FIG. 3.3. Entry and exit points to/from an infinite cylinder
Finally, we provide correctness proofs for the line and circle cases.
THEOREM 3.6 (Line Case Correctness). Let _ + t_ be a moving point such that g is tangent to Po_.
Then, (Sx + tVx) 2 + (s_ + tvv) _ >_ 1) _ for aU ti,_cs t.
Proof. At tittle 0 we have a tangent point to the lateral surface of the infinite cylinder. Using the
horizontal separation criterion twice, we conclude that horizontal separation holds for all times.
THEOREM 3.7 (Circle Case Correctness). Let g+ t_ be a moving point such that s_ + s 2 = D 2, Is_l = H,
and cither (1) sxvx + SyVy <_ 0 and s_v_ >_ 0 or (2) s_vx + suvy >_ 0 and s_v_ <_ O. Then, for all timcs t,
either (a) horizontal separation: (Sx + tVx) 2 + (s v + tvv) 2 >_ D 2 or" (b) vertical separation: Is_ + tv_] >_ H.
Proof. In case (1) we get vertical separation for all t _> 0 and horizontal separation for all t _< 0. In
case (2) we get vertical separation for all t _< 0 and horizontal separation for all t _> 0. [5
4. Resolution and Recovery Algorithm. In this section we develop the algorithm for conflict resolu-
tion and recovery, namely RR3D. We present the algorithm as a set of formulas that describe escape-recovery
maneuvers, i.e., triples (t',%,%),.7 .7' where t' is a time of switch, vo'_ is a velocity vector that determines an
.7, is a velocity vector that determines a recovery course. The formulas are organizedescape course, and v o
according to the constraints that the escape-recovery maneuvers satisfy. As explained in Section 2, we con-
sider three constraints: change of vertical speed only, change of ground speed only, and change of heading
combined with a change of ground speed at time t _. For each of these constraints we distinguish several
cases according to the part of the surface of P that is touched during the escape and recovery courses. We
identify the following cases: line/line (Figure 4.1), line/circle (Figure 4.2), circle/line (Figure 4.3), one-circle
(Figure 4.4), circle/circle (Figure 4.5), escape-circle (Figure 4.6), and recovery-circle (Figure 4.7). As we will
see below, not all the cases are possible in all situations.
In all the cases, we use the following approach:
1. We find candidates to maneuvers by solving the equations given by the constraints and the case
analysis.
2. We disregard candidates that contradict the specification. This may require sanity checks with the
implicit meaning that only solutions satisfying them are considered any further.
3. Candidates that survive the last check are the maneuvers returned by the algorithm.
Correctness is guaranteed by construction. Furthermore, we aim for a set of candidates that is a superset
of the set of solutions.
In the algorithm, when we solve a quadratic equation with non-null coefi%ients, we assmne that the
discriminant is non-negative. If the discriminant happens to be negative, we tacitly infer that there are no
FIG. 4.1. Line/line (top view, perspective view, and side view)
FIG. 4.2. Line/circle (top view, perspective view, and side view)
FIG. 4.3. Circle/line (top view, perspective wew, and side view)
FIG. 4.4. One-circle cases (side views)
2>
FIG. 4.5. Circle-circle cases (side views)
__-----x
FIG. 4.6. Escape-circle cases (side views)
H ............ --_ H ............ %)<
I.
solutions to the equation.
FIG. 4.7. Recovery-circle cases (side views)
4.1. Common Definitions. We first introduce a set of technical definitions that can be used as
procedures in an actual implementation of RR3D.
The times at which a moving point g + t_g intersects the lateral surface of the infinite cylinder are
determined by
(Sx + tvx) 2 + (sy + try) 2 = D 2. (4.1)
2 2 > O, then (4.1) reduces to a quadratic equationIf the ground speed is different fl'om zero, i.e., v x + vv
in t:
2_D 2:0. (4.2)
The discriminant A is defined as
' 2 _ D2) (4.3)
: + v,9 - (sxv -
If A _< 0 then the moving point does not intersect Poo. In particular, if A = 0 we have the tangent case.
DEFINITION 4.1 (Tangent condition). A moving point g+ t(g is tangent to Poo if and only if
D2 (%2 + v 2)_= (s,vy - svvx) 2. (4.4)
For a moving point that is tangent to Poo, the time r of closest approach in the horizontal plane is the one
solution of (4.2):
SxV x -H 8yVy
T-- (4.5)
v_ +v_
DEFINITION 4.2 (Entering and leaving Po_). IrA > 0, we get two solutions for (4.2)
Oi = -SxVx - SyVy -V_
v_ +v_ ' (4.6)
O" = -SxVx - SyVy +v/_
_ +v_ (4.7)
By definition, ®1 < 011. It is easy to check that ®1 is an entry point and that 011 is an exit point.
We may need (4.4) and (4.5) instantiated with the parameters of the escape and the recovery courses.
For the escape course we get the tangent condition
D2_ ,12 I2 1 2t_x + % ) = (sx_'_- sy_x), (4.8)
and the tittle of closest approach in the horizontal plane
TI _ sxv; + SyV; (4.9)
_12 __ 12
tx Vy
The moving point J' + (t - t')J I describes the recovery course in a translated time t - t". Therefore, for
the recovery course we get the tangent condition
D2(v_2 .2x II l/ II H 2+%)=(s/%-%v_), (4.10)
and the tittle of closest approach in the horizontal plane
It It 11 11
-}- SyVy
'1 s_vx t". (4.11)9- -- -H
Vtt2 4_ ,t_1/2
x ---y
DEFINITION 4.3 (Reaching altitude H or -H). If v_ _ 0 then the times when the ownship reaches
altitude H or" -H are the solutions of I& + tv_l = H for" t:
0' = - sign(v0H - & , (4.12)
Vz
0" = sign(v0H - & (4.13)
Vz
By definition, 0 1 < 0 II.
DEFINITION 4.4 (Time of switch). The time t' of switch firm the escape course to the recovery course
is given by (2.4) and _71 = _+ t'g. This time satisfies
t'(_;'- J,) = t"(v- J'),
or in coordinate notation
t'(V'x- <) = t"(vx - <),
I I 11 II
t" (vyt % -- %) = -- %),
t'(v2 - if) = t"(v_ - v").
(4.14)
(4.15)
(4.16)
10
I 11.
It a[_d II i[]- terl_S of t I , v x , v x .The equations (4.14) and (4.15) allow us to express v v v,
t'% - t' v" (4.17)II
v x -- t__ _ t_
t"vv - t'v'v (4.18)1! I
Vy t II _ t I
4.2. Change of vertical speed only. We impose the constraint that only the vertical component of
the velocity vector may change. Formally,
'" and ' " (4.19)
_l)lox = Vox = l/ox roy = roy = _Uoy.
If the relative ground speed is zero (v_ + v_ = 0) then either the ownship is inside the infinite cylinder
2 < D2), and there is no vertical solution, or else there is no predicted conflict. Otherwise, O' and
®" are defined as in equations (4.6) and (4.7), and we may have the following independent solutions.
• Escape-circle. If 0 < ®' < t" and I8_l _> H then there is an escape-circle solution (Figure 4.6). It
is given by t' = ®',
II
v" - sign(v_)H - 8_
oz = viz + 0 I-t" '
t11(Voz - _iz) - (t 11 - 01)(vl k - vi_)I
Voz = Viz jr O'
IIt"(vo -vo )
- o' +v'L.
• Recovery-circle. If 0 < O" < t" and Is_l _> H then there is a recovery-circle solution (Figure 4.7).
It is given by t' = O",
- sign(v_)H - 8_/
Voz = Viz 4-
11
- - o"(vL -II
Voz = Viz 4-
t" - 0 I'
t"vo_ - O"v'o_
I
t" - 0 'I
One-circle. If 0 < O' and O" < t" then for both e E {-1, 1} there may be a one-circle solution.
Figure 4.4 shows the case where a one-circle solution exists for each e = 1 (left) and c = -1 (right).
If g8_ < H and es_ < H, then we compute the vertical speeds
cH - 8z
! I
VOZ = Viz Jr- 01 ,
,, cH - 8'.!
Voz = viz + 0'1 - t '-_'"
If v'_ 7_ V'o'_, then t' is given by (4.16)
t I tllfV H i ii
= I I Vo_) ",0% VO_)/(Vo_
In this case, there is a one-circle solution for c given by Vo;,'' Vo_,'' and t'.
We remark that there are no vertical solutions that touch the lines, neither circle-circle solutions.
11
4.3. Change of ground speed only. We impose the constraint that only the ground speed of the
ownship changes in each step. Formally, there are factors k, j > 0, such that
' = kvox, ' = kvoy, ' (4.20)Vox Yoy Vo z z Vo z,
" " " " (4.21)%,. = J Vox, roy = jVoy, Voz = Voz.
Since absolute ground speeds are different from zero, either %, =/=0 or Vou _ O. In the first case we get
t'(k - j) = t"(1 - j) (4.22)
from (4.14). In the second case, i.e., Vov 7_ O, we get the same formula (4.22) fl'om (4.15).
Ifk =j then from (4.22), 0 = t"(1-j). Sincet" > 0, we havej = land sok = 1. So there is no
predicted conflict at tittle 0. Since this contradicts the premise, we must have k ¢ j. Therefore, the time t'
of switch can be obtained from (4.22) as
t' - t"(1 - j) (4.23)
/_.-j
We have the following independent solutions. For the cases involving an escape line course, we check for
sanity that 0 < r' < t', where r' is defined as in (4.9). For the cases involving a recovery line course, we
check for sanity that t' < r" < t" , where r" is defined as in (4.11). Furthermore, for the cases involving a
circle course, we assume that relative vertical speed is not zero, i.e., v_ 7_ 0; otherwise, there is no solution.
In all the cases, we check for sanity that k,j > O.
• Line/line. During the escape course and during the recovery course, the lateral surface of P is
touched (Figure 4.1).
In the tangent condition for the escape course (4.8), we instantiate using _d = [70 -_ and (4.20):
D2((kvo_ - Vix) 2 + (kVoy - viv) 2) = (s_(kvoy - viv) - sv(kVox - vi_)) 2. (4.24)
This reduces to a quadratic equation in k:
k2[D2(v2ox + V2oy) - (SxVoy - SvVox) 2] +
2k[-D"(Vo V .+ + - - +
2 2D (V x+ - - = 0.
This quadratic equation in k can be solved to obtain v'o_ and V'o_. If all coefficients in the quadratic
equation for k are zero then the aircraft are not in predicted conflict at tittle 0.
The tangent condition for the recovery course (4.10), instantiated using v7' = vTo' - _Y/and (4.21),
D2((jVo. - vix) 2 + (jVoy - viv) 2) = (s_(jVoy - viv) - s_(jvo_ - Vix)) 2, (4.25)
" and "can be reduced likewise to a quadratic equation in j. We solve it to obtain Vo_ roy.
The tittle t' of switch is obtained from (4.23).
Line/eirele. During the escape course, the lateral surface of P is touched. During the recovery
course, one of the two circles is intersected (Figure 4.2).
For the line case, we have to solve the tangent condition for the escape course (4.24), which we can
solve for k as in the line/line case.
12
For the circle case, we get 0" by (4.13). We check for sanity that 0 < 0" < t". At time 0" the circle
is intersected:
(s_ + (Or' - t")(jVox - vix)) 2 + (s_ + (0" - t")(jVoy - viy)) 2 = D 2. (4.26)
This equation yields a quadratic equation in j that can be solved:
j2(O,, .,,,2_ 2 2 2
-_ ) _vox+voy) +
,, _ (Or'2j(O" - t"_@"v,,_ o_ - (0" - t")vi_Vox + SuVou - t")viyVoy) +
,!(s_ - (0" - t")vi_) 2 + (sy - (0" - t"_v.,_,_2 _ D 2 = 0. (4.27)
Using (3.1), we check for sanity that 0" is an entry point to the infinite cylinder:
(s_ + (0" - t")(jVox - vix))(jVox - Vix) d- (By d- (0 H -- t")(jVoy - Viy))(jVoy -- Viy) <_ O. (4.28)
The tittle t' of switch is obtained from (4.23). We check for sanity that t' < 0".
• Circle/line. The escape course intersects one of the circles, and the recovery course touches the
lateral surface, of P. This case is depicted in Figure 4.3.
For the circle, we get 0' by (4.12). We check for sanity that 0 < 0' < t".
The circle is intersected at time 0':
(Sx + O'(kvox - vix)) 2 + (sy + O'(kvou - viu)) 2 = D 2. (4.29)
This equation yields a quadratic equation in k that can be solved:
k2o'2(vL+ +
2kO' (sxVo_ - O'vixVo_. + SuVou - O'viuVou) +
(sx - O'vi_) 2 + (s, - O'viy) 2 - D 2 = 0. (4.30)
Using (3.2), we check for sanity that 0' is an exit point from the infinite cylinder:
(Sx + O'(kVox - v_x))(kVo_ - v_) + (sy + O'(kVoy - v_y))(kVoy - v_y) > 0. (4.31)
For the line, we have to satisfy the tangent condition for the recovery course (4.25), which can be
solved for j as in the line/line case.
The time t' of switch is obtained from (4.23). For sanity, we check that 0' < t'.
• Circle/circle. We may have a circle-circle solution (Figure 4.5) when times 0', 0", given by (4.12)
and (4.13), satisfy 0 < 0' and 0" < t" or, equivalently, when either (s_ < -H and H < s_)
or (s_' < -H and H < s_). We solve the two quadratic equations (4.27) and (4.30) for j and k
respectively. We check for sanity that time 0' defines an exit point from the infinite cylinder (4.31)
and that at time 0" there is an entry point (4.28).
The time t' of switch is obtained from (4.23). We check for sanity that 0' < t' < 0".
• Escape-circle. We have an escape-circle solution if there is only one intersection with a circle at
time 0" given by (4.13). This case is shown in side view in Figure 4.6. We check for sanity that
0 < 0" < t". At time 0" the circle is intersected (4.26). We solve the quadratic equation (4.27) for
j and check for sanity that at time 0" there is an entry point to the infinite cylinder (4.28).
The time of switch is given by t' = 0". The speed factor k of the escape step is obtained from (4.22)
as
k= j(O"-t") +t"
0 H
13
Recovery-circle. We have a recovery-circle case if there is only one intersection with a circle at
time 0' given by (4.12). This case is shown in side view in Figure 4.7. We check for sanity that
0 < 0' < t". At time 0' the circle is intersected (4.29). We solve the quadratic equation (4.30) for k
and check for sanity that at time 0' there is an exit point from the infinite cylinder (4.31).
The time of switch is given by t' = 0'. The speed factor j of the recovery step is obtained from (4.22)
as
In this case there are no one-circle solutions.
4.4. Change of heading. W_ impose the constraint that for the escape step only the heading of
the velocity vector may change. For the recovery step the heading and the horizontal speed may change.
Formally,
,2 ,,2 2 2 ' " (4.32)Vox -}- ?Joy = Vox -}- Voy and Voz = Voz = Voz.
For the cases involving an escape line course, we assume that s is not in the infinite cylinder neither at
2 2 > D 2. We also check for sanity that 0 < r' < t', where r' is defined as in (4.9).its boundary, i.e., s, + sy
Symmetrically, for the cases involving a recovery line course, we assume that s" is not in the infinite cylinder
tt2 -- .2 D2neither at its boundary, i.e., s x + sy > and we check for sanity that t' < r" < t" , where r" is defined
as in (4.11). Furthermore, for the cases involving a circle course, we assume that relative vertical speed is
not zero, i.e., v_ # 0; otherwise, there is no solution. We have the following independent solutions.
• Line/line. The situation is shown in Figure 4.1. For the escape step we consider cases:
_2 ,2 2 t2 So there areCase v" = 0. Then the tangent condition (4.8) specializes to lav v = SxV v .
escape courses
,, , = -\/ e e 2 by (4.32), for each g E {-1, 1}, when v e e > ,2• _Uox _ Vix , roy c Vox Jr- roy -- Vix _ ox q- roy -- Vix
(sanity check) and D e = s_, and
,t ,t 2 2 2 V 2
• _box = Vix, ?Joy = Yiy, when Vox Jr- roy = vix Jr- zy"
Case %' _ 0. We mavo define a' = v_/%: ' In this case the tangent condition (4.8) reduces to
De(1 + a te ) = (s_a t - sy) '_,
and further to a quadratic equation in a':
a'e(D e - s_) + 2c_'s_sv + D e - sye = 0. (4.33)
If D e = s_2 then sy _ 0, because s is not at the boundarv_ of the infinite cylinder.. In this case,
D e 2
- Sy
ogt --
2SxSy
Otherwise, Equation (4.33) has solutions
i 2 _ D e--SxSy _- ctD s 2 _- 8y
Ogt
D e - s_
where s' C {-1, 1}.
Equation (4.32) and _ = _ - _er/yields a quadratic equation in v',:
e +v_v_ ,2 ,2 =0. (4.34)+ + + + -
t t tW_ get v,' by solving (4.34) and v_ by v v = %a .
14
For the recovery step we consider cases:
Case v_ = 0. W_ check for sanity that v" ¢ 0. In order to satisfy the tangent condition (4.10)
we must satisfy _ ''_ ,,2 ,,,2D_vv _ = s, v v . This gives two cases:
,11 ,11
* Lo x z Vix, Loy _ Viy.
& ,11 y2 D 2 11'2* _Cox vix, %v C {ylV'o "2 + # 0}, when
_ 8. x .
From the time t' of switch we get the equation system
e'v; = t'%, (4.35)
I I II II
t u (Vyt % - v,) = - v_). (4.36)
From (4.35) we get t' as t' = t"v_/v'. We finally get v" by (4.18).
Y
II _11 II
Case v_ ¢ 0. We define c_" = vy/v x. The tangent condition (4.10) then reduces to
D_(1 + _"_) = (_" - %;"'_. (4.37)
If D 2 7_ sx"2, Equation (4.37) yields a quadratic equation in ct" with solutions:
V/ u2 _ D 2" "+d'D S'x'2+sy--SxSy
Off !
D 2 _ ._u2
_x
,,2 then " _ 0, because s" is not at the boundary of the infinitewhere c" C {-1, 1}. If D 2 = s_ sy
cylinder. In this case,
D 2 //2
-- 8y
OJ I --
The time t' of switch is given by the equation system (4.14) and (4.15). Replacing v_' with
v"_" and subtracting from (4.15) the a"-multiple of (4.14), we get
x ,
t'(v' v - a"v') = t"(% - a"v_). (4.38)
' _ " ' From (4.38). t' is obtained asW_ check for sanity that vy a v x.
t' - t"(vv - a"Vx) (4.39)
! II !
Vy -- O_ V x
" by " " " The absolute ownship's velocity is obtained from
" by (4.17) and vu vyW_ get v x = v x a .
the relative one.
Line/circle. The situation is depicted in Figure 4.2. The line case of the escape step is solved
' and ,' For the circle case of the recovery step,exactly as in the case line/line. Thus, we get v_ vy.
we determine the time of contact with the circle 0", given by (4.13). For sanity, we check that
r' < 0" < t", where r' is defined as in (4.9).
The horizontal distance to the origin at time 0" is D:
(Sx + t'V'x + (0" - t')v'!) 2 + (sy + t'v'y + (0" - t"')vy)"'2 = D 2. (4.40)
This equation reduces via (4.17), (4.18), and (2.1) to the quadratic equation in t'
t'_[(_" + (0" - t")v') _+ (_ + (o" - t")v'_)_- o _] +
l! II I II 112t'[-(_" + (o" - t'%',_,_t'%,_ + o'%) - % + (o" - t )v_)t (_ + o _) + t"o _]+
t"_((_ + o'%) _+ (_ + O"v_)_ - o _) = 0.
15
Byconstructionofthelinecaseandr' 7_ 0" we get (s_ + (0" - t")v" ) 2 + (Sy + (0" - t")vy) 2 > D 2.
" and " are obtained as follows:We solve the quadratic equation to yield t'. Speeds %, Vov
tuv i iu _ x -- t Vx
Vox tu _ tl + Vix_
u tl_vy i 1
--tVy
Voy -- tl I _ tt -}- Viy.
Using (3.1), we check for sanity that 0" is an entry point to the infinite cylinder:
II I1 I1 II(87+ (e1'- t")(v"x - V_x))(V'o'_,- vix)+ % + (e'I - t )(_'o_- _,i_))(Vo_- _i_)_<o. (4.41)
Circle/line. A circle/line maneuver is shown in Figure 4.3. For the circle case of the escape step,
we get the time 8' of contact with the circle, given by by (4.12). We check for sanity that 0 < 8' < t".
The escape course satisfies
(8x 4- O'(Vtox - Vix)) 2 4- (8y 4- O'(Vtoy - Viy)) 2 = D 2, (4.42)
which reduces to
- 2(8y - 01viy)O'v:y =
(8_ O'v_.)_+(8_ o'_ _ 2(8x _1_,_ _,_ ,_ _D_.- - iw + -O'vix)O'v_x +_ Vox+_ Voy
Squaring both sides and using
/
yields a quadratic equation in Vox
where
12 2 2 t2
roy _ Vox Jr- Voy -- Vox
12 1
Vox A + VoxB + C = O,
(4.43)
(4.44)
(4.45)
A = 40'2((8x - O'vix) 2 + (8y - Olviy)2),
B = 4(8, - 01v_)O'E,
C E 2 4(8 u O'v _O"elv 2 2
-- -- iy] \ ox Jr- Voy)_
E (sx O'vix) 2+(s_ 01v _'2 ,,12 2 _12 2 _D 2.= -- -- iy] + {1 Vox + U roy
If A ..... 0, then sx O'vi_ and 8v = O'viy, and so B 0 and C E 2. If E 0, i.e., 0 '2 ,2 + 0'2Voy'2-- _OX
D e , then
(Sx 4- O'(Vox - Vix)) 2 4- (Sy 4- O'(Voy - Viy)) 2 = D 2,
so there is no predicted conflict. If E ¢ 0 then there is no solution.
If A ¢ 0, we get two solutions for v'ox which yields solutions for V'ov , via (4.44). We check for sanity
2 2 _ t2that Vox + Vou _ Vox.
Using (3.2), we check for sanity that 0' is an exit point from the infinite cylinder:
(8_ + 01(vlo_, - vix))(V'o_ - Vix) + (8v + 01(V'ov - viy))(V'o_ - viv) >_ O. (4.46)
For the line case of the recovery step, we have to satisfy- the tangent condition
2/ /12 u2_ iI u u 1/_2
_% + Vu ) = (8/% -- Ss%) .
We consider the following cases:
16
" = vy/% and getCase v, 7_ 0. We substitute a" " "
D2(1 + c_,,2) = (S,,xCt,,_ sv),,,2.
This equation reduces the quadratic equation in a"
OZ.2 (D2 112x . II II 1/2
-s x )+(* 2SxSy+D 2-sy =0.
If D 2 = sx"2 _hen sy" 7_ 0, because s" is not at the boundaryo of the infinite cylinder. In this case
c_" (D 2 ,,2 ,, ,,= - _y )/(2<_y).
Otherwise, we solve the quadratic equation for c_".
It It
The time of switch t' yields (4.39) and so t', %, vy as in the line/line case. We check for sanity
that 0' < t'.
= = " (4.18).' " 0. From (4.14) we get t' t"v_/v', and finally we get Vy byCase v_ ¢ 0 and %.
Circle/circle. Circle-circle solutions (Figure 4.5) may exist if the times 0',0", given by (4.12)
and (4.13), satisfy 0 < 0' and 0" < t" or, equivalently, if either (& < -H and H < s_) or
(s_ < -H and H < &).
' and ' as in the circle/line case.From (4.42) and (4.32) we get Vo, roy
At time 0" the circle is intersected:
(_"+ (0" - t")v") _+ (_ + (0" - t">")_; = D_
By (4.17) and (4.18) this reduces to the quadratic equation in t':
t'2 [(.5'_ -- (0'" -- _"")Vtx) 2 + (Syt' + (0" -- t,'"'X)Vy)'"2nJ+
t'[-2t"(_" + (o" - t")C)(_" + (o" - t,,v,,,_,_ 2t"%"+ (o" - t")v,,)%'"+ (o" - t">y)] +
t"_' " (0" ""_ " (0" - D_(t'' - t')_ = 0.
_+ -t">J+_ %+ -t'%) _
If v,' = -Sx/(O" " - t") and v v' = -Sy/(O" " - t") then this equation has no solution. Otherwise, we
I!
solve this equation for t' and we get v_ and vy from (4.17) and (4.18), respectively.
We check for sanity that 0' < t' < 0", that time 0' defines an exit point from the infinite cylin-
der (4.46), and that at time 0" there is an entry point (4.41).
gseape-eirele. Escape-circle solutions (Figure 4.6) may exist if there is only one intersection with
a circle at time 0" defined by (4.18). We check for sanity that 0 < 0" < t".
At time 0" the circle is intersected:
(_+0"(Cx -_,_))_ +(_;+0"(C_ - _))_ =DL
' and ' are derived as in the circle/line case, but for 0" instead of 0'. The time of switchSpeeds Vox roy
t' is given by t' = 0". The velocity vector of the recovery case is given by (4.14) and (4.15) as follows:
i i -- t'V
. t Vox ox
Vox -- 0" - t" ' (4.47)
i i -- t'V
,, t Voy ov (4.48)
v°Y -- O" -- t"
We check for sanity that at time 0" there is an entry point to the infinite cylinder (4.41).
17
Recovery-circle. Recovery-circle solutions (Figure 4.7) may exist if there is only one intersection
with a circle at time 0' defined by (4.12). We check for sanity of 0' that 0 < 0' < t".
At time t' = 0' the circle is intersected:
' ' ' ' - v 2 D 2"(Sx+ e (Vox- vix))2 + (By+ e (_o_ _)) =
' and v' exactly as in the circle/line case. We check for sanity that at timeWe derive solutions for Vox o,
o " and " are obtained0' there is an exit point from the infinite cvlinder (4.46). The values for Vox Voy
from (4.47) and (4.48), respectively.
In this case there are no one-circle solutions.
5. Conclusion and Future Work. We presented a resolution and recovery algorithm for two aircraft,
namely ownship and intruder. The algorithm outputs a choice of maneuvers for the ownship, which is
predicted to be in conflict with an intruder aircraft when flying towards a target point. Each maneuver
consists of an escape velocity vector, a recovery velocity vector, and a time of trajectory change t'. Together
they determine an escape course, a recovery course, and a new trajectory change point. If the ownship flies
the escape course from time 0 to time t' and then switches to the recovery course at time t', it arrives at the
original target point at the scheduled time, while maintaining minimum separation at all times.
We gave a rigorous mathematical description of the problem and proved that the recovery and resolution
algorithm (RR3D) is correct: given some initial assumptions, e.g., there is a predicted conflict and the aircraft
are not in violation of the minimum separation, the algorithm outputs a choice of conflict-free maneuvers
that lead the ownship to the target point at the scheduled time. We intend to check the correctness proof
using the PVS theorem prover [13].
The maneuvers returned by the algorithm are optimal in a geometric way, i.e., escape and recovery
courses are tangential to the intruder's protected zone. They differ in the constraints they satisfy. For
instance, one constraint requires that only a change of heading is allowed for the escape course. These
constraints, which are not limitations imposed by the aircraft, are there to reduce the number of solutions to
the problem. Our set of constraints is by no means exhaustive or unique. Other constraints may, however,
easily be added. Specifically, we are currently working on the following additional constraints:
• A change of heading and ground speed for the escape step such that the ground speed does not
,,2 ,,2 ,2 +vr_ and ' = Vo_ " This case yieldschange during the recovery step, i.e., Vo_ + Voy = Vo_ Vo_ = Vow.
surprisingly difficult systems of equations, including polynomials of degree 3, 4, and 6.
• Optimal solutions satisfying no constraints. These solutions may be difficult to implement by a
human pilot since they require a simultaneous change of several parameters of the aircraft (heading,
vertical speed, and ground speed). However, in the future, they could be suitable for a flight guidance
system.
A prototype of RR3 has been implemented in Java. Currently, we are conducting experiments and
simulations to study the applicability of RR3D as the inner loop of a strategic conflict detection and resolution
approach.
Acknowledgments. The idea to extend KB3D [4] with recovery courses is due to David Wing. We
acknowledge stimulating discussions with the DAG-TM team, Hanne Gottliebsen, and Victor Carrefio.
18
REFERENCES
[1] ADVANCED AIR TRANSPORTATION TECHNOLOGIES (AATT) PROJECT, Conc@t definition for dis-
tributcd air/ground traffic management (DAG-TM), version 1.0. NASA Ames Research Center -
NASA Langley Research Center, 1999.
[2] K. BILIMORIA, A geometric optimization approach to aircraft conflict resolution, in Guidance, Naviga-
tion, and Control Conference, vol. AIAA 2000-4265, Denver, CO, August 2000.
[3] Y.-J. CHIANC, J. KLOSOWSKY, C. LEE, AND J. MITCHELL, Geometric algorithms for conflict de-
tection/resolution in air" traffic management, in 36th IEEE Conference on Decision and Control,
1997.
[4] G. DOWEK, C. M_T_oz, AND A. GESER, Tactical conflict detection and resolution in 3-D airspace, in
4th USA/Europe Air Traffic Management R&D Seminar (ATM-2001), Santa Fe, New Mexico, 2001.
[5] N. DURAND, J.-M. ALLIOT, AND F. MEDIONI, Neural nets trained by gcnetic algorithms for collision
avoidance, in Applied Artificial Intelligence, no. 3, 2000.
[6] N. DURAND, J.-M. ALLIOT, AND J. NOAILLES, Automatic aircraft conflict resolution using genetic
algorithms, in Symposium on Applied Computing, Philadelphia, PA, 1996.
[7] M. EBY, N self-organizational approach for resolving air traffic conflicts, Lincoln Laboratory Journal,
7 (1994), pp. 239 254.
[8] E. FRAZZOLI, Z.-H. MAO, J.-H. OH, AND E. FERON, Resolution of conflicts involving many aircraft
via scmidcfinite programming, Journal of Guidance, Control, and Dynamics, 24 (2001), pp. 79 86.
[9] G. GRANGER, N. DURAND, AND J.-M. ALLIOT, Optimal resolution of en routc conflicts, in 4th
USA/Europe Air TraiIic Management R&D Seminar (ATM-2001), Santa Fe, New Mexico, 2001.
[10] J. HOEKSTRA, R. RUIGROK, R. VAN GENT, J. VISSER, B. GIJSBERS, M. VALENTI, W. HEESBEEN,
B. HILBURN, J. GROENEWEC, AND F. BUSSINK, Overview of NLR free flight project 1997-1999,
Tech. Report NLR-CR-2000-227, National Aerospace Laboratory (NLR), May 2000.
[11] J. KUCHAR AND L. YANG, Survey of conflict detection and resolution modeling methods, in AIAA
Guidance, Navigation, and Control Conference, vol. AIAA-97-3732, New Orleans, LA, August 1997,
pp. 1388 1397.
[12] J. McDONALD AND R. VIVONA, Strategic airborne conflict detection of air" t_uJfic and area hazards,
Tech. Report NASA Contract: NAS2-98005 RTO-29, TITAN Systems Corporation, SRC Division,
November 2000.
[13] S. OWRE, J. M. RUSHBY, AND N. SHANKAR, IPVS: A prototype verification system, in 11th Interna-
tional Conference on Automated Deduction (CADE), D. Kaput, ed., vol. 607 of Lecture Notes in
Artificial Intelligence, Saratoga, NY, June 1992, Springer-Verlag, pp. 748 752.
[14] RADIO TECHNICAL COMMISSION FOR AERONAUTICS, Final rcport of the RTCA board of directors'
select committee on free flight, Tech. Report Issued 1-18-95, RTCA, Washington, DC, 1995.
[15] C. TOIVILIN, G. PAPPAS, AND S. SASTRY, Conflict resolution for air traffic management: A study in
multi-agent hybrid systems, IEEE Transactions on Automatic Control, (1998).
[16] D. WING, R. ADAMS, B. BARMORE, AND D. MOSES, Airborne use of traffic intent information in
a distributed air-ground tTuffic management concept: Experiment design and preliminary results, in
4th USA/Europe Air Traffic Management R&D Seminar (ATM-2001), Santa Fe, New Mexico, 2001.
19
REPORT DOCUMENTATION PAGE Form ApprovedOMB No. 0704-0188
Publicreportingburdenfor this collection of informationisestimatedto average] hour per response,includhTgthe time for reviewinginstructions, searchingexistingdata sources,
gathering and maintainlngthe data needed,and completingand reviewingthe collectionof information. Sendcommentsregardingthis burdenestimateorany other aspectof this
collection of information, includingsuggestionsfor reducingthis burden, to WashingtonHeadquartersServices,Dkectoratefor InformationOperationsand Reports,1215Jefferson
DavisHighway,Suite 1204, Arlington, VA 222024302, and to the Office of Managementand Budget, PaperworkReductionProject (07040188), Washington,DC 20503.
1. AGENCY USE ONLY(Leave blank) 2. REPORT DATE 3. REPORT TYPE AND DATES COVERED
May 2002 Contractor Report
4. TITLE AND SUBTITLE
Air tratTic conflict resolution and recovery
6. AUTHOR(S)
Alfons Geser, C6sar Mufioz, Gilles Dowek, and Florent Kirchner
7. PERFORMING ORGANIZATION NAME(S) AND ADDRESS(ES)
ICASE
Mail Stop 132C
NASA Langley Research Center
Hampton, VA 23681-2199
9. SPONSORING/MONITORING AGENCY NAME(S) AND ADDRESS(ES)
National Aeronautics and Space Administration
Langley Research Center
Hampton, VA 23681-2199
5. FUNDING NUMBERS
C NAS1-97046
WU 505-90-52-01
8. PERFORMING ORGANIZATION
REPORT NUMBER
ICASE Report No. 2002-12
10. SPONSORING/MONITORING
AGENCY REPORT NUMBER
NASA/CR-2002-211637
ICASE Report No. 2002-12
11. SUPPLEMENTARY NOTES
Langley Technical Monitor: Dennis M. Bushnell
Final Report
Submitted to the 21st Digital Avionics Systelns Conference.
12a. DISTRIBUTION/AVAILABILITY STATEMENT
Unclassified Unlimited
Subject Category 60, 61
Distribution: Nonstandard
Availability: NASA-CASI (301) 621-0390
12b. DISTRIBUTION CODE
13. ABSTRACT (Maximum 200 words)
An essential element in the Free Flight concept is tile detection and avoidance of air traffic conflicts. A conflict
occurs when tile required separation between two aircraft, namely the ownship and tile intruder, is lost. Conflict
detection and resolution systems predict loss of separation and output conflict avoidance maneuvers that divert tile
ownship from its original trajectory. In this paper, we address the problem of redirecting the ownship to its original
path, ill g geometric optimal way, without introducing new conflicts. We call this concept Resolution and Recovery.
Given the current 3-dimensional position and velocity vectors of two aircraft in predicted conflict and the ownship's
required time of arrival at the target point, the resolution and recovery algorithm outputs a choice of maneuvers.
Each maneuver comprises an escape course and a recovery course to be followed by the ownship. The escape course
brings the ownship off the predicted conflict and the recovery course returns it to the original target point. We
provide a rigorous mathematical description of tile problem and show that the algorithm is correct, i.e., no matter
which of the proposed maneuvers the ownship picks, it will arrive at the target point at the scheduled time while
maintaining the minimum required separation to the intruder at all times.
14. SUBJECT TERMS
conflict detection and resolution, 3-dimensional airspace, traffic avoidance, free flight
15. NUMBER OF PAGES
24
16. PRICE CODE
A03
17. SECURITY CLASSIFICATION 18. SECURITY CLASSIFICATION 19. SECURITY CLASSIFICATION 20. LIMITATION
OF REPORT OF THIS PAGE OF ABSTRACT OF ABSTRACT
Unclassified Unclassified
NSN 7540-01-280-5500 Standard Form 298(Rev. 2-89)
Prescribedby ANSI Std. Z39 18
298 102
