Strong SequentiRaleiwtyriotfeLSeyfstt-eLminsear Overlapping
Jean-Pierre Jouannaud? and Walid Sad
Laboratoire de Recherche en Informatique CNRS / Universite Paris-Sud Ba^timent 490 91405 Orsay Cedex, France
jouannaud@lri.fr sad @ensi.rnrt.tn
Abstract. Con uent term rewriting systems can be seen as a model for
functional computations, in which redexes corresponding to instances of left hand sides of rules are repeatedly replaced by their corresponding right hand side instance. Lazy sequential strategies reduce a given redex in a term if and only if this redex must be reduced by any other sequential strategy computing the normal form of the term. Lazy strategies always terminate when a normal form exist, and are indeed optimal. In a landmark paper, Huet and Levy showed that such a strategy always exists for left linear nonoverlapping rewrite systems that are strongly sequential, a property that they proved decidable for such systems. This paper generalises the result to the case of left-linear, possibly overlapping rewrite systems.
1 Introduction
Con uent term rewriting systems can be seen as a model for functional computations, in which redexes corresponding to instances of left hand sides of rules are repeatedly replaced by their corresponding right hand side instance. As in other functional languages, the question arises whether normal forms can be computed e ectively on a sequential machine, and when they can, whether this can be done by performing the minimum possible amount of computation.
Non-ambiguous linear term rewriting systems (also called orthogonal systems) enjoy the confluence property, hence are a good candidate for such a model. Besides, normal forms can always be computed when they exists by a parallel outermost strategy. Such a strategy, however, reduces redexes that are not needed, hence is not optimal. Let us call optimal, or lazy, a sequential strategy in which a redex in a term t is reduced if and only if this redex must be reduced by any other sequential strategy computing the normal form of t, and sequential, a rewrite system for which an optimal sequential strategy exists. Huet and Levy have shown that not all orthogonal rewrite systems are sequential 3], and moreover that sequentiality is undecidable2.
? Partially supported by the ESPRIT BRA COMPASS. 2 Huet and Levy 's paper was aimed at generalizing the most important syntactic
properties of -calculus to left-linear non-overlapping term rewriting systems. Their original paper was published in 79 as an INRIA report. This paper was immediately

They have also introduced a decidable su cient condition for sequentiality, called strong sequentiality, for which the optimal strategy amounts to reduce redexes at particular positions called indexes. Their decision procedure for strong sequentiality yields as an additional output an e cient implementation of index reduction in the form of a matching dag which generalizes to trees the famous construction by Knuth, Morris and Pratt of an automaton for e ciently matching strings.
Although Huet and Levy's framework was extended to several kinds of rewritings (priority rewriting 8], order-sorted rewriting 5], head-constructors systems 4], sufcient sequentiality 7]), orthogonality could not be really removed until Toyama introduced left-linear root-balanced systems 9]. The root-balanced property together with left-linearity ensure the Church-Rosser property, hence it replaces the nonambiguity property. Besides, Toyama claimed that strong-sequentiality was decidable for left-linear ambiguous systems, and suggested that Klop and Middeldorp's reformulation of Huet and Levy's proof would work without any modi cation. This is not true, however, as explained in this paper.
Our goal is therefore to prove Toyama's statement that strong sequentiality remains decidable for left-linear, possibly ambiguous rewrite systems by generalizing Klop and Middeldorp's proof.

2 Preliminaries

In this section we brie y present some notations and de nitions borrowed from

Dershowitz and Jouannaud 1, 2].

The set T (F; V) (abbreviated to T ) denotes the set of terms built from a denume-

rable set of function symbols, F, and a denumerable set of variable symbols, V,

where F \ V = ; and such that if f 2 F has

t

=

f(t1; :::; The set

tn) 2 T (F; V). of positions in

a

term

t

is

denotes

arity n and t1; by Pos(t) and

:::; tn 2 T (F; V) is inductively de

then ned

as follows: Pos(t) = f"g if t 2 V, and Pos(t) pttinjo=pstbi.ftyiT(ottnh1h;eep::dt:,;eettrp(nmtp)h).sWfo(inRre t)twh.roeTiftrheaoejoprdtejewsfpoyrtrmhittebh(oestly)loseotnfefgtmajtph,tReoarfnmiads

tpt=oisss]fiptt"higtoehnempfta,eix:trpjmipmosfaoo(lbtrilt)etahnineg: teshd1ubobtfyearirmeppoolsanficttgiinoaingtf the maximal depth of the left hand

sides of rules in R. Positions are partially ordered by the pre xe ordering : p q

if 9p0 such that q = p:p0, and we de ne accordingly p=q = p0. If p q and p 6= q

we write p < q and if neither p q nor q p we write p k q. Finally, we write

t t

ss]1Pj:::wjshne]np1

jt:h::jepnsiaasraenalalleteqrunaaltitvoe

for s, P

tbse1i]npg1

st2h]ep2s:e::t

sonf]ppnarwahlleenl

ppo1siktio::n:skwphne,reantdo

perform the replacement.

A rewrite rule is a pair l ?! r such that the left-hand side l is not a variable

and all variables wich occur in the right-hand side r also occur in l. The rewrite

considered as important, and generated an active stream of research partly reported in this introduction. It was however notoriously di cult to read, which may explain why it was only published more than 10 years later in a journal format. At the same time, a comprehensive reformulation of the sequentiality question was published by Klop and Middeldorp 6].

rule l ?! r is called left linear if l does not contain multiple occurences of the

same variable symbol. A term rewriting system or a rewrite system, is a nite set

of rewrite rules. It is called left-linear if all its rewrite rules are left-linear. A redex

is an instance by a substitution of some left hand side of rule l. We use a post x

notation for substitution application, hence the redex is written as l . A term is in

normal-form if it contains no redex.

A rewrite system R de nes a rewrite relation 9 ; 9li ?! ri 2 R; 9p 2 Pos(t) such that tjp = li rewrite step, and may omit the subscripts. The re is denoted by ?R!. ?Rk! denotes a reduction of k (k

a?en!xdiRvse-=otnratTnrsiiat]ispv.euWsculeaolsc:uartlel?to!?fRp!R?!ss Riaf 0) steps. In the sequel we omit

the subscript R. A term t has a normal form if t?!s for some normal form s.

A rewrite system R is con uent (respectively locally con uent) if 8s; t; u 2 T

with s?!t and s?!u (respectively s ?! t and s ?! u) then 9v 2 T such that

t?!v and u?!v.

Two rules l ?! r and l0 ?! r0 overlap if there exists a non-variable position

p a

2 pos(l) and critical pair.

a substitution After Toyama,

such we say

that that

ljp = l0 a critical

. The pair pair (s; t) is

(l r0 ]p; r )
root-balanced

is called joinable

if s?InRk!tsh0isanpdapt?eRrk!, tw0efowr isllomonelytecrmonsti0daenrdlekft-lin0.ear rewriting systems. When all its

critical pairs are root-balanced joinable, a left-linear rewriting system will be called

balanced, and orthogonal when it has no overlapping rules.

3 Strong Sequentiality
In this section, we focus on those sequential strategies that compute a normal form for every term that posseses one, even in presence of non-terminating reductions issuing from the term. Such a strategy is called normalizing. This section is devoted to the introduction of the key concept of strong sequentiality. Most of the material is borrowed from 3, 6], but is applied to left-linear systems instead of orthogonal ones. Only those proofs that su er changes are given here.
Let be a new constant symbol representing an unknown part of a term, T the set T (F ; V) of -terms, and Pos (t) the set of -positions in a term t. The set of terms in T nT which are in normal form for R is denoted by NFR. De nition1. The pre x ordering on T is de ned as follows: (i) t for all t 2 T . (ii) f(t1; :::; tn) f(s1; :::; sn) if ti si for i = 1; :::; n We write t s if t s and t 6= s. De nition2. Two -terms s and u are compatible if there exists t 2 T such that s t and u t.
A redex scheme is a left-hand side of rule in which all variables are replaced by .

An -term t is redex-compatible if it is compatible with some redex scheme. The R -rewriting relation is de ned as follows:

t ?!pR t ]p i tjp 6= and tjp is redex compatible: Lemma 3. R -reductions are con uent and terminating.

The proof of of t with respect previous lemma.

this to

le-mredmuactiisonst.raNiogthetftohrwatartd#.RLetistw#Rell-ddeennoetde

the normal form according to the

The following de nition appears as a characteristic property of indexes in 6],

and as a de nition in 9].

De nition
an index of

4. Let t if (t

be ]p#R

a new )jp =

constant symbol. . We use I(t) for

The the

position p such that set of indexes of t.

tjp

=

is

We recall now a few standard results about indexes that do not assume the non-overlapping restriction.

Proposition5. .

(a) (b) (c)

if if if

ppp:2q22II((Itt)()tt)thhteehnnen88qtp0k2pIts(ut:chp]pt2h)aIat(ntt0djq#qR]2p).I=(tjp).:

p

2

I(t

]q)

The converse of the rst statement does not hold in general, i.e. the following transitivity property for indices is not true: if p 2 I(t) and q 2 I(s) then p:q 2 I(t s]p). However Klop and Middeldorp have shown a partial transitivity result which does not depend upon the non-ambiguityassumption, hence remains true for overlapping left-linear rewrite systems 6]:

Proposition

R

?
If

1. p2

2

I

(t

6.

Let ]p2 ),

t 2 T , p1; p2; p3 and p3 2 I(tjp1)

2 pos(t) such that then p3 2 I(t).

p1

p2 < p3 and jp2=p1j

Our interest in indexes lies in a fundamental result by Toyama which generalizes Huet and Levy's result to the case of balanced rewrite systems. Before to state it, we need the notion of strong sequentiality, which roughly says that the computation of the normal form of a term can be done at particular positions called indexes.
De nition7. A left-linear rewrite system is strongly sequential if there exists no
index-free term in NFR.
De nition8. Given a stronly sequential rewrite system R, the associated index reduction is a reduction strategy which at each step, rewrites a redex of a term t at a position p such that p is an index of t ]p. Theorem 9. 9] Index reduction is a normalizing strategy for balanced stronly sequen-
tial rewrite systems.

))
(a) (b)

q tjq#R =

)q
(c)

R?1 )
(d)

Fig. 1. Transitivity properties of indexes
We are left with the question that will be adressed in turn in the following section. Is strong sequentiality decidable for ambiguous left rewrite system ? Toyama stated that it was the case for the more general class of left-linear rewrite systems, by refering to Klop and Middeldorp's proof for orthogonal rewrite systems. This proof however, does not apply as such, although Toyama's intuition was right as we show now.
4 Decidability of Strong Sequentiality
The basic idea of Klop and Middeldorp hidden in Huet and Levy's work is to construct a particular index-free term when the rewrite system is not sequential. Before to give the construction, we need to show that if there exists any free term at all, then there exists one which can be constructed by means of gluing special terms together called preredexes. We rst state the key intermediate results that lead to this construction. Most of them apply to left-linear rewrite systems without any change in the proof. We will mention any change needed in a proof or a de nition explicitely.
De nition10. : A term t 2 NFR is called omegated if t#R = . Proposition11. 6]: R is strongly sequential i there exists no omegated index-free
term. By induction on the derivation of particular omegated terms, called decomposable
terms, to their normal form , we are now going to slice them down into small pieces called atomic preredexes, a notion which re nes the notion of preredex by Huet and Levy. In order to perform this construction, we need some elaboration.
De nition12. : A preredex is a term which is smaller or equal to a redex scheme
in the ordering . A proper preredex is neither a redex scheme nor . A maximal atomic preredex is a maximal proper preredex s satisfying the following
properties:

(i) for any redex scheme t compatible with s, s t, (ii) any strict subterm of s is not a preredex.

An atomic preredex is a proper preredex which is smaller or equal under to a maximal atomic preredex.

Example 1. Let R = ff(hhx; hgy; gz) !; f(hgx; hhy; gz) !; hggx !g. Then f(h ; h ; ) is a preredex which is not atomic since, in particular, it contains the preredex h . f( ; ; g ) is an atomic preredex, which is also maximal.

For orthogonal rewrite systems, every proper preredex is in R-normal form, but this is not true for the case of overlapping rules, as exampli ed by the rewrite system

ff(g(b; h(a)); x) ?! :::; g(b; x) ?! :::g

for which the term f(g(b; h( )); ) is a proper preredex but is not in R-normal form. This is one of the reasons for the introduction of atomic preredexes. Note also that preredexes may overlap, even for non-overlapping rewrite systems, but this is not the case of atomic ones. Our notion of atomic preredex gives rise to a notion of decomposition adapted from Klop and Middeldorp:

De nition13. A set
called a decomposition

fh(epaid; seid)gbiy2J(po;fs)piairs

of

positions

and

atomic

preredexes

is

(i) 8i 2 J; p pi (ii) 8i 2 J s:t: pi 6= p; 9j 2 J s:t: sjjpi=pj = :
Pairs in a decomposition are naturally ordered by the pre x ordering on their rst component.
The term (D) associated to the above decomposition D is de ned inductively as follows:

(i) (D) = s if D is reduced to its head, (ii) (D) = (D n f(p; s); (pi; si) s:t: sjpi=p = g f(p; s si]pi=p)g):
A term t is called decomposable i there exists a decomposition D such that t = (D) 2 NFR.
Example 2. Let R = ff(hhx; hgy; gz) !; f(hgx; hhy; gz) !; hggx !g. Then f(h ; hh ; g ) is decomposable into four atomic peredexes: f( ; f( ; ; g )); (1; h ); (1:1; h ); (2; h )g.

Note that a decomposition can be seen as a tree (traversed depth- rst) by

pNoroodsteietriioannlgsointhtthehaentuotdnheieqsup(eopmsi;itatiixo)inmlepaxili=capotgoinrmaitpchhpeicraearblleoydvewexidtwehhirnceihstpiiosencbtimgtguoesrtthtcheoiarrnressrpisnot ntchdoemtooprdoaennreinntg-.

. We naly want to stress that the term associated with a given decomposition may

nwoitthbtehloensgtatnodNarFdRcabseec,awusheicohf

possible forces us

ovelapping rewrite to state explicitely

rules. This is a di erence that decomposable terms

are in normal form.

We now show a strong relationship between decomposable and omegated terms. It is clear that decomposable terms are omegated terms, by a bottom-up reduction of the atomic preredexes in their decomposition to . This property admits a sort of converse: any omegated term can be recursively transformed into a decomposable term by eliminating unnecessary subterms. This process which can be performed by induction on an R -reduction to is the key to the following result:

Proposition14. A left-linear rewrite system is strongly sequential i there is no
index-free decomposable term.

Proof. Since decomposable terms are particular omegated terms, we simply need to show that there exists a index-free decomposable term whenever the rewrite system

is not stronly sequential. Consider an index-free omegated term of minimal size. We

will show that it is indeed a decomposable term. To this end, let us consider an innermost R reduction
t l?!p! u ?R!

from t to . Since the reduction is innermost, l is a preredex which does not contain

another preredex. Besides, since a rule in R. Hence, there exists

t a

2unNiqFuRe,altoismnioctparnereindsetxanrcecoomf paalteifbtlehawnidthsildaenodf

maximal with respect to equal in size than t, and

. Let assume

ufosrnaowmocomnesnidtetrhtahteitteisrmindt erx]p-frweeh.icThhiesns,mra=llelr

or by

minimality assumption on t. An induction on lengths of derivations easily yields the

result that all rules have an atomic preredex on their left hand side. We can then

readily associate a decomposition to the derivation, resulting in the needed property.

-pTohsietiponroqofinthramt atyr]cpomiseineidtehxe-rfrferoemreasunlts-fproosmititohneincolnosrtrfuroctmioan

of r. Indeed, an variable position

in a redex scheme g compatible with l. In the former

it would have case, q cannot

been an index in t be an index, since

tl]rp

because r ]q is compatible with g.

by property (b) ]q]p rewrites to

ocfasper,owpeorseitiqonan5.inIdnexthienltatrt]epr, t ]p with the rule r ]q ! ,

Klop and Middeldorp's decision procedure of strong sequentiality is based on the construction of a minimal index-free term, that is an index-free term with the minimal number of non- -positions. Unfortunately, their construction does not work as such when there are overlapping rules, because substituting a term in R-normal form to an R-leaf in another term in R-normal form may result in a term which is not in -normal form. Our construction is di erent in two respects. First, we try to construct a minimal decomposable term, by using atomic preredexes only. Second, the construction must work di erently, so as to cope with the above mentionned problem.
The tentative construction of a minimal index-free decomposable term proceeds by stacking atomic preredexes on top of one another at non-index positions and eliminating terms reducible by R so as to obtain all possible decomposable terms in turn, then check whether they are or are not index-free. In order to stop the process, it will be necessary to look for the repetition of particular patterns in the term associated to a sequence of atomic preredexes.

Since a decomposition D is indeed a tree, we can consider branches in this tree. The branch of head (p; s) and tail (q; t) is the subset f(o; r) : p o qg of D. (q; t) must be be a leaf of D, that is no pair (o; r) 2 D satis es o < q. The size of a branch is the length of the word q=p.

De nition15. (R) ? 1

A branch f(pi; si)g1

i

n is special i

jpn=p1j

(R)?1 and jpn=p1j <

A decomposition D headed by (p1; s1) is a pattern i it has the following properties:

(i) It has a non-trivial special branch f(pi; si)g1 i n. (ii) Any branch headed by (p1; s1) is special or has a size at most (R) ? 1.

Because there are nitely many atomic preredexes, there are nitely many patterns. The next step consists in extracting patterns from large decompositions.

pDaettenrnitioofnD16h.eaGdeivdenbya(pd1e;cso1m) paosstihtieonlonDgeastndpaattepranirB(p1;Ds1.) 2 D, we de ne a

R?1>

R?1

Pattern
Fig. 2. Patterns

Pattern in a decomposition

Note that our de nition of a pattern is quite di erent from the de nition of a special tower in 6]. Given now a decomposable index-free term which is big enough so as to contain at least twice the same pattern along a path from the root to a leaf, we will construct another smaller index-free decomposable term. This will result in a decision procedure for strong sequentiality as a corollary. This procedure will simply construct a tree of bigger and bigger terms not containing twice the same pattern on a path from the head, by attaching atomic preredexes at an index position of the term labelling a leaf in the tree, eliminating those whose associated term is not in R-normal form, and stop whenever an index free-term is reached (hence the rewrite system is not strongly sequential), or when all leaves contain twice the same pattern on a path from the head (hence the rewrite system is strongly sequential). Since there are nitely many such patterns, this procedure will enumerate nitely many decompositions, hence always terminate.

\succes", index-free term

stop: reducible term

stop: repeated pattern
Fig. 3. Strong sequentiality decision algorithm

Since patterns are made from atomic preredexes, we can extend our de nition of a decomposition, by allowing for patterns as well as atomic preredexes. More generally, we may allow for any term built from atomic preredexes. We will actually be interested in decompositions having one distinguished pattern or twice the same pattern from the root to a leaf of the associated term.

Lemma 17. Let D and D0 be two decompositions containing an identical pattern

f(aw(rpee:picnia; nsRi)-ognf1ocroimunarlsaeftoarpsmossu.imtTioehnetnph:aptt100pi1=n
decomposable term.

D = t

and f(p0:pi;
). Assume

si)g1
that

ti

n
=

at position
(D) and

t0jp0:p1]p:p1 is in R-normal form,

tp00:=p1

in D0 (D0)

hence is a

t 2 NFR

t0 2 NFR

t00 2 NFR =)

Fig. 4. Substitution of a pattern instance

Proof. Since t00 is built with atomic preredexes, the only positions where a rule

may apply are the positions of the preredexes. Subterms at positions which are not

smaller normal

than form

pb:yp1asasruemepitthioenr .sWubetearrmesthofere(foDre0),leofrt

subterms with the

of (D), subterms

hence are in at positions

srmuleallle!r trha2nRp.:pB1.yAdsesunmiteiotnhoefsaubptaetrtmernatinpoasditeicoonmpp:poisictaionnb, ealrlepworsiitttieonnswiniththseomsete

p:pi:P, where P is the or to the subterms of

set t00

of non-variable positions in l, belong either below the tail of a special branch. Hence,

to the pattern, these positions

were already in t. Since the two terms t and t00 do not di er at these positions, and

because the rules are left-linear, t would be reducible, a contradiction.

We can see the importance of our de nition of pattern whose role is to ensure the previous lemma. This is where our construction di ers most signi cantly from Klop and Middeldorp's work.

Lemma 18. Let t = (D) a decomposable term such that the decomposition D

contains two identical patterns headed
t = (D) is not a minimal index-free

by (p1; s1) and (p:p1;
decomposable term.

s1)

with

p:p1

>

p1.

Then

t p1 p:p1

p1 t0 = t tjp:p1]p1

Proof.
Fig. 5. Contraction of identical patterns

Suppose lemma 17, t0

tisisinanmorimniaml afolrdmec.oWmeptohsearbefleoriendsiemx-pflryeeneteedrmtoasnhdowletthta0 t=ittistjipn:pd1e]xp1-f.rBeey.

The proof is based on the way t0 is constructed and properties of indexes including

the partial transitivity property stated in proposition 6. Our construction di ers

from the construction by Klop and Middeldorp in the fact that we need to replace

all subterms of the head of the rst occurrence of the pattern by all subterms of the

head of the second occurrence of the pattern instead of replacing only one subterm

of the tail (taking advantage of the absence of critical pairs). These di erences do

not have any impact on the proof that t0 is index-free if so is t. This ends the proof.

We can now conclude:

Theorem 19. Strong sequentiality of left linear possibly overlapping rewrite system
is a decidable property.

The decision procedure, of course, is exponential. The possibility of having overlapping rules forced us to introduce the notion of atomic preredexes. Building on that, we were able to de ne decompositions, decomposable terms, and patterns in an abstract way, which leaves away many details of Klop and Middeldorp's constructions. As a result, our proofs are mostly simpler, and easier to understand. We think that this is not negligible an achievement for a problem which is notoriously considered as quite di cult both technically and conceptually.

References
1. Nachum Dershowitz and Jean-Pierre Jouannaud. Notations for rewriting. EATCS Bulletin, 43:162{172, 1990.

2. Nachum Dershowitz and Jean-Pierre Jouannaud. Rewrite systems. In J. van Leeuwen, editor, Handbook of Theoretical Computer Science, volume B, pages 243{309. NorthHolland, 1990.
3. Gerard Huet and Jean-Jacques Levy. Call by need computations in non-ambiguous linear term rewriting systems. In Jean-Louis Lassez and Gordon Plotkin, editors, Computational Logic: Essays in Honor of Alan Robinson. MIT Press, 1991.
4. J.R. Kennaway. Sequential evaluation strategies for parallel-or and related reduction systems. Annals of Pure and Applied Logic, 43:31{56, 1989.
5. Delia Kesner. Free sequentiality in orthogonal order-sorted rewriting systems with constructors. In Proc. 11th Int. Conf. on Automated Deduction, Saratoga Springs, NY, LNAI 607, 1992.
6. Jan Willem Klop and Aart Middeldorp. Sequentiality in orthogonal term rewriting systems. Journal of Symbolic Computation, 12:161{195, 1991.
7. Michio Oyamaguchi. Su cient sequentiality: a decidable condition for call-by-need computations in term rewriting systems. Mie University, 1987.
8. Laurence Puel and Ascander Suarez. Compiling pattern matching by term decomposition. In Proc. Int. Conf. on LISP and Functional Programming, 1990.
9. Yoshihito Toyama. Strong sequentiality of left linear overlapping term rewriting systems. In Proc. 7th IEEE Symp. on Logic in Computer Science, Santa Cruz, CA, 1992.
This article was processed using the LaTEX macro package with LLNCS style

