The finite variant property: How to get rid of
some algebraic properties. ⋆
Hubert Comon-Lundh2 and Ste´phanie Delaune1,2
1 France Te´le´com R&D
2 Laboratoire Spe´cification & Ve´rification
ENS de Cachan & CNRS UMR 8643
61, avenue du Pre´sident Wilson,
94235 CACHAN Cedex, FRANCE
email: comon,delaune@lsv.ens-cachan.fr
Abstract. We consider the following problem: Given a term t, a rewrite
system R, a finite set of equations E′ such that R is E′-convergent, com-
pute finitely many instances of t: t1, . . . , tn such that, for every substi-
tution σ, there is an index i and a substitution θ such that tσ↓ =E′ tiθ
(where tσ↓ is the normal form of tσ w.r.t. →E′\R).
The goal of this paper is to give equivalent (resp. sufficient) conditions for
the finite variant property and to systematically investigate this property
for equational theories, which are relevant to security protocols verifica-
tion. For instance, we prove that the finite variant property holds for
Abelian Groups, and a theory of modular exponentiation and does not
hold for the theory ACUNh (Associativity, Commutativity, Unit, Nilpo-
tence, homomorphism).
1 Introduction
In our recent work on the verification of cryptographic protocols [3, 5] we came
twice across the following problem:
Given an AC-convergent rewrite system R, is it possible (and how) to
compute from any term t a finite set of instances tσ1, . . . , tσn such that
{tσ↓R | σ ∈ Σ} =
n⋃
i=1
{tσi↓Rθ | θ ∈ Σ}
where Σ is the set of normalized substitutions and u↓R is the AC-normal
form of u w.r.t. R.
In other words, the reductions in tσ only depend on reductions in finitely
many (fixed) instances of t. This is typically what we will call the finite variant
property : compute in advance all possible normal forms of an instance of t,
⋆ This work has been partly supported by the RNTL project PROUVE´ 03V360 and
the ACI-SI Rossignol.
independently of that instance. In [3], this problem is solved in an ad hoc way
when R is the theory of exclusive or (also called the ACUN theory), given by
the rewrite rules:
x+ x→ 0
x+ x+ y → y
x+ 0→ x
and the associativity and commutativity axioms for +. Such a property, to-
gether with the finiteness of equivalence classes modulo E′ is claimed to be the
key property for decidability results in cryptographic protocols verification, in
presence of algebraic properties [2]. That is why we are especially interested in
studying the finite variant property for equational theories which are relevant to
cryptography and which define infinite equivalence classes.
When E′ = ∅, it is not difficult to see that the finite variant property is
implied by the termination of basic narrowing. This is not so easy in general.
Assume for instance that E′ consists in the axioms of associativity and commu-
tativity and E is defined by an AC-convergent rewrite system R. On one hand,
general AC-narrowing does not terminate, even for a single rule y + x+ x → y
and, on the other hand, basic narrowing is incomplete for E-unification. We
didn’t find any reference for the incompleteness of basic AC-narrowing, hence
we show it in Section 3.2. E. Viola already noticed in [19] that the standard
completeness proof of basic narrowing does not extend to the AC-case and pro-
poses another narrowing strategy, introducing extensions of rules. This notion
of narrowing restores completeness. However, termination is lost, even in simple
cases. Even for equational theories presented by E′-convergent rewrite systems,
basic narrowing might not terminate, while E has the finite variant property.
This is the case for Abelian Groups, as we will see in Section 6.2.
The first contribution of this paper is to state a property (called boundedness)
equivalent to the finite variant property in case of theories defined by convergent
rewrite systems (Section 5.2). This is very similar to the existence of “narrowing
bounds” in [19]. We differ in two respects: first we consider only terms (not
unification problems) and second, there is a quantifier switch. Roughly, in [19],
the “narrowing bound” is equivalent to “there exists a normalized θ such that
(tθ↓ =AC u and) all (inner) derivations starting from tθ are bounded”. In our
case, boundedness is equivalent to “for every normalized θ, there is a derivation
from tθ to its normal form whose length is bounded”.
Second, we give sufficient conditions for the boundedness property, which do
not necessarily imply the termination of narrowing (Section 6.2) and prove that
these conditions are met for several equational theories, which are relevant to
cryptographic protocols. Our sufficient criteria is related to the notion of opti-
mally reducing (AC)-term rewriting system introduced in [14]. Indeed being an
optimally reducing rewrite system is a sufficient condition to satisfy our crite-
ria, and therefore the boundedness property. We provide however with strictly
weaker sufficient conditions and therefore new applications. For instance, we
show that the theory of Abelian Groups has the boundedness property, relying
on the unusual orientation of the inverse rule (Section 6.2). We use proof tech-
niques which are similar to those of [12]. We also show in Section 7 that there
are equational theories for which unifiability is in PTIME, while there is no con-
vergent AC-rewrite system for the theory yielding the finite variant property.
Finally, we give some side-applications of the finite variant property: for
instance the existential fragment of the theory of T (F)/=E is decidable for the
theories E under study.
We start with recalling some definitions in Section 2. We state in Section 3
some results on basic and equational narrowing (for instance the incompleteness
of basic AC-narrowing). Next, we list in Section 4, some examples of equational
theories, which are relevant to cryptographic protocols, explaining briefly where
they come from. In Section 5, we state formally a definition of the finite vari-
ant property and give a characterization (the boundedness property) when the
equational theory is presented by a finite E′-convergent rewrite system. Then,
we briefly consider the case of E′ = ∅ in Section 6.1. In Section 6.2 we give
sufficient conditions for the boundedness property and then apply them to the
relevant theories listed in Section 4. In Section 7, we prove that the theory
ACUNh (Associativity, Commutativity, Unit, Nilpotence, homomorphism), for
which unifiability is in PTIME [13], does not have the finite variant property.
In Section 8, we show other applications of the finite variant property, and we
conclude in Section 9.
Missing proofs can be found in [4].
2 Preliminaries
2.1 Terms, Substitutions, Unification
We use classical notations and terminology from [7] on terms, unification, rewrite
systems. T (F ,X ) is the set of terms built over the finite (ranked) alphabet F
of function symbols and the set of variable symbols X . T (F , ∅) is also written
T (F). The set of positions of a term t is written O(t), and O¯(t) is the set of non-
variable positions of t. The empty sequence Λ denotes the top-most position. The
subterm of t ∈ T (F ,X ) at position p ∈ O(t) is written t|p. The term obtained
by replacing t|p with u is denoted t[u]p. The set of variables occurring in t is
denoted vars(t).
A substitution σ is a mapping from a finite subset of X called its domain
and written dom(σ) to T (F ,X ). Substitutions are extended to endomorphisms
of T (F ,X ) as usual. We use a postfix notation for their application.
If E is a set of equations (unordered pair of terms), =E is the least congruence
on T (F ,X ) such that uσ =E vσ for all pairs u = v ∈ E and substitutions σ. E is
regular if, for every equation t1 = t2 ∈ E, vars(t1) = vars(t2). Two terms s, t are
E-unifiable if there is a substitution σ such that sσ =E tσ. Such a substitution is
called an E-unifier of s, t. We say that there is an E-unification algorithm if it is
possible, for any two terms s, t, to compute a finite set σ1, . . . , σn of E-unifiers of
s, t, such that, for every E-unifier σ of s, t, there is an index i and a substitution
θ such that, for every variable x ∈ vars(s) ∪ vars(t), xσ =E xσiθ.
2.2 Equational Rewriting
A term rewriting system (TRS) is a finite set of rewrite rules l → r where
l ∈ T (F ,X ) and r ∈ T (F , vars(l)). A term s ∈ T (F ,X ) rewrites to t by a
TRS R, denoted s →R t, if there is l → r in R, p ∈ O(s) and a substitution
σ such that s|p = lσ and t = s[rσ]p. The term lσ is called a redex and we say
that t rewrites to s by contracting the redex lσ. An innermost redex does not
contain other redexes and in an innermost reduction sequence only innermost
redexes are contracted. R= is the symmetric closure of R.
∗
−→R is the reflexive
and transitive closure of→R. We write t
≤n
−−→R u if there is a reduction sequence
of at most n steps from t to u. A TRS R is terminating if there are no infinite
chains t1 →R t2 →R . . ..
As in [7], given a set of rewrite rules R and a set of equations E, rewriting
modulo E, is the relation →E\R (others have used →R,E) defined as follows:
s→E\R t iff there exists a position p ∈ O(s) such that s|p =E lσ and t = s[rσ]p
for some substitution σ and rule l → r ∈ R.
A rewrite system R is E-confluent if and only if for every s, t such that
s =R=∪E t, there exists s
′, t′ such that s
∗
−→E\R s
′, t
∗
−→E\R t
′, and s′ =E t
′. It
said to be E-convergent if, in addition, =E ◦ →R ◦ =E is well founded.
A term t is in normal form (w.r.t. →E\R) if there is no term s such that
t →E\R s. If t
∗
−→E\R s and s is in normal form then we say that s is a normal
form of t. When this normal form is unique, we write s = t↓E\R or shortly
s = t↓ when E\R is clear from the context. A substitution σ is called normalized
if for every x ∈ dom(σ), xσ is in normal form. We write σ =E θ if ∀x ∈
dom(σ) ∪ dom(θ) xσ =E xθ. For an E-convergent rewrite system R and a
substitution σ, we write σ↓E\R the substitution whose domain is dom(σ) and
such that x(σ↓E\R) = (xσ)↓E\R for all x ∈ dom(σ).
3 Narrowing
Given a TRS R, we say that a term t narrows to t′ with the substitution σ, at
p ∈ O¯(t), by l → r ∈ R if there exists a renaming l′ → r′ of l → r ∈ R such that
σ is a unifier of t|p and l
′ and t′ = (t[r]p)σ. In this case, we write t ;σ t
′. We write
t
∗
;σ t
′ if there exists a narrowing derivation t = t1 ;σ1 t2 . . . ;σn−1 tn = t
′
such that σ = σ1 . . . σn−1.
3.1 Equational Narrowing
If E is a set of equations such that an E-unification algorithm exists, we define
E-narrowing as expected (σ is an E-unifier of t|p and l).
The following lemma states that every rewrite derivation (
∗
−→E\R) can be
lifted to a narrowing derivation.
Lemma 1 (lifting lemma). Let E be a regular presentation for which an E-
unification algorithm exists. Let t be a term, θ be a normalized substitution and
tθ
∗
−→E\R s
′. Then there exists a term t′, a substitution σ and a normalized
substitution θ′ such that:
1. t
∗
;σ t
′,
2. t′θ′ =E s
′,
Furthermore, the narrowing derivation t
∗
;σ t
′ and the rewrite sequence from
tθ to s′ use the same rewrite rules at the same positions.
We didn’t find this lemma in the litterature. A similar lemma, but only for a
one step derivation, and without the regularity assumption, is proved in [11] for
instance. The proof does not extend to an arbitrary derivation length. Actually,
we do not know whether or not the lemma would still hold without the regularity
assumption (which we indeed use in the proof).
3.2 Basic Narrowing
Definition 1 (basic positions). Let t1 ;σ1 t2 ;σ2 . . . ;σn−1 tn be a narrow-
ing derivation. We assume that the ith step has been done at position pi with the
rule li → ri. We inductively define sets of positions B1,. . . , Bn as follows:
B1 = O¯(t) Bi+1 = B(Bi, pi, ri) for 1 ≤ i < n.
Here B(Bi, pi, ri) abbreviates (Bi − {q ∈ Bi|pi ≤ q}) ∪ {pi.q|q ∈ O¯(ri)}. Po-
sitions in Bi are referred to as basic positions. We say that the above narrowing
derivation is basic if pi ∈ Bi for 1 ≤ i < n.
In the same way, a rewrite sequence (w.r.t. E\R) t1 → t2 → . . . → tn is
based on a set of positions B1 ⊆ O¯(t1) if pi ∈ Bi for 1 ≤ i < n with B2,. . . ,Bn−1
defined as above.
Note that the latter is well-defined since→E\R preserves the positions which
are not in the redex.
In case of non-equational narrowing, there are several well-known results, for
instance:
Lemma 2 ([8]). Let t be a term and σ a normalized substitution. Every inner-
most derivation sequence (w.r.t R) starting from tσ is based on O¯(t).
It follows that basic narrowing is a complete unification procedure when R
is a convergent rewrite system. The situation is quite different for equational
narrowing. For instance in the case of AC-narrowing, Lemma 2 fails (contrary
to what is suggested in [11]), as shown by the following example (this has also
been noticed in [19]).
Example 1. Let R+ = {x+0→ x, x+x→ 0, x+x+ y → y}, which is known to
be AC-convergent. Let t = x1 + x2 and σ = {x1 7→ a+ b, x2 7→ a+ b}. Consider
the following innermost derivation (w.r.t. AC\R+) starting from tσ.
(a+ b) + (a+ b)
Λ
−→x+(x+y)→y b+ b
Λ
−→x+x→0 0
The first rewriting step takes place at position Λ ∈ B1 = O¯(t) with the rewriting
rule x+ (x+ y)→ y. Hence the set B2 is empty. So the above rewrite sequence
is not based on O¯(t) although it is an innermost derivation.
This example can be generalized in such a way that there is a derivation from
tσ whose length is arbitrarily long. However, there is also another derivation
whose length is short (1 in the above example).
Not only Lemma 2 fails, but actually basic AC-narrowing is not complete,
as shown by the following example.
Example 2. We consider the following rewrite system R, in which + is an AC-
symbol and a, b are constants:
a+ a→ 0 b+ b→ 0 a+ a+ x→ x
b+ b+ x→ x 0 + x→ x
R is AC-convergent. σ = {x1 7→ a+ b; x2 7→ a+ b} is a solution of the equation
x1 + x2 = 0, whereas there is no narrowing derivation yielding a more general
solution. Indeed, narrowing with one of the first two rules yields x1 = x2 = a
or x1 = x2 = b, narrowing with the last rule yields x = 0 ∧ x + 0 = x1 + x2,
which do not subsume σ. Narrowing with one of the two other rules, for example
a+ a+ x→ x, yields x = 0 ∧ a+ a+ x = x1 + x2, again not wanted.
4 Some Relevant Equational Theories
We list here some algebraic theories which are relevant to cryptographic proto-
cols and which we investigate in Section 6. We only consider theories for which
equivalence classes are infinite. We use the notations which are customary in
cryptographic protocol descriptions. In particular, the pairing symbol 〈 , 〉 is
used in infix notation and encrypting m with k is written {m}k.
4.1 Explicit Destructors
The Axiomatized Dolev-Yao Theory (DYT) is the classical Dolev-Yao model with
explicit destructors such as decryption and projections. Here is a presentation
of this theory:
pii(〈x1, x2〉) = xi for i = 1, 2 d({x}y, y
−1) = x x−1
−1
= x
In words, projections are inverses of pairing, and decrypting with k−1 a mes-
sage encrypted with a key k gives back the plain text message. Alternatively,
projections and decryption symbols are not part of the alphabet and such proper-
ties are part of the intruder deduction rules. Putting such rules in the equational
theory or in the intruder deduction rules seems to be a matter of taste. However,
there are subtle differences between the two approaches; some protocols can be
attacked if we consider explicit destructors, while they cannot otherwise (see for
instance [6]). This relies on the ability to apply the decryption algorithm d( , )
on a message x with a key y, even when x is not a cyphertext.
Proposition 1. Orienting equations of DYT from left to right and adding
d({x}y−1 , y) → x, we get a convergent rewrite system RDYT. Furthermore
(basic) narrowing w.r.t. RDYT terminates.
The Key Inverse Theory (KIT) is obtained by extending DYT with the
equation {d(x, y)}y−1 = x. It expresses that decryption and encryption with the
inverse key are inverse of each other. This property holds when decryption is
just an encryption with the inverse key, as for the cryptosystem RSA.
Proposition 2. Orienting equations of KIT from left to right and adding the
rules d({x}y−1 , y) → x and {d(x, y
−1)}y → x, we get a convergent rewrite
system RKIT. Furthermore (basic) narrowing w.r.t. RKIT terminates.
4.2 Exclusive Or Theory (ACUN )
This theory has been given in introduction. It is mandatory when protocols rely
on exclusive or ([15] vs [17]). As recalled in Example 1, the rewrite system R+
for this theory is AC-convergent.
4.3 Abelian Groups Theory (AG)
The Abelian Groups theory is defined by the following set of equations:
x ∗ (y ∗ z) = (x ∗ y) ∗ z x ∗ x−1 = 1
x ∗ y = y ∗ x x ∗ 1 = x
Proposition 3. Adding the consequences: 1−1 = 1, x−1
−1
= x, (x ∗ y)−1 =
x−1 ∗ y−1, x ∗ (y ∗x−1) = y and orienting the rules from left to right, we get R∗,
an AC-convergent rewrite system for AG.
Note that, AC-narrowing (even basic) is not terminating w.r.t.R∗, as we have an
infinite derivation starting from x−1 by using repeatedly (x ∗ y)−1 → x−1 ∗ y−1.
4.4 Diffie-Hellman Theory (DH)
This theory contains the axioms of the Abelian Groups theory for the symbol ∗
and two others equations concerning the modular exponentiation’s symbol:
exp(x, 1) = x exp(exp(x, y), z) = exp(x, y ∗ z)
This theory takes into account simple properties of product and exponentiation,
which are widely used in protocol constructions. Exponentiation has more prop-
erties, which should be considered to capture to whole power of an attacker.
However, we only consider the two above axioms since, as shown in [10], many
extensions yield undecidable unification problems, hence undecidability of con-
fidentiality, even for a bounded number of sessions.
4.5 Combinations
The theory ACUNh consists of the axioms of ACUN for + and the equation
h(x + y) = h(x) + h(y). This theory is used in protocols such as the TMN
protocol (h is used to model an encryption with the public-key of the server S).
The equation h(x + y) = h(x) + h(y) can be oriented in both directions,
yielding two AC-convergent rewrite systems, which are displayed in Figure 1:
depending on the orientation, we get either 5 rules (R1) or 6 rules (R2).
x+ 0 → x R1 : h(x+ y)→ h(x) + h(y)
x+ x → 0
x+ x+ y → y R2 : h(x) + h(y)→ h(x+ y)
h(0) → 0 h(x) + h(y) + z → h(x+ y) + z
Fig. 1. The Rewrite Systems R1 and R2 for the ACUNh Theory.
Proposition 4. R1 and R2 are AC-convergent.
5 The Finite Variant Property
We come to the central notion of our paper: a property, which allows to reduce
equational theories to some (supposedly simpler) other theory. Let us first recall
the definitions given in introduction.
5.1 Definition and a First Characterization
We assume given a well founded ordering ≥ on terms, which is total on ground
terms. Given a theory E and a ground term t, we write t↓E the smallest term
in the equivalence class of t. It will serve as a representative of the class.
Definition 2 (E-variants). Given two sets of equations E, E′, t′ is an E-
variant of a term t if there is a substitution θ such that tθ =E t
′. A complete set
of E-variants modulo E′ of t (w.r.t. ≥) is a set S of E-variants of t such that,
for every substitution σ, there is a term t′ ∈ S and a substitution θ such that
tσ↓E =E′ t
′θ.
Example 3. Assume E = ACUN and E′ = AC. Consider the term x+ f(x+ y).
A complete set of E-variants modulo AC is given by the single variable z. Indeed,
(x+f(x+y)){x 7→ f(z)+z; y 7→ f(z)} =AC f(z)+z+f(f(z)+z+f(z)) =ACUN z
hence z is a variant of x + f(x + y). This is a complete set since, for every
normalized substitution σ, (x+ f(x+ y))σ↓ =AC zθ for some θ.
Definition 3 (finite variant property). The pair (E,E′) has the finite vari-
ant property (w.r.t. ≥) if for every term t, we can effectively compute a finite
complete set of E-variants modulo E′.
Sometimes, we will simply say variants and complete set of variants when E
and E′ are clear from the context.
Now, we need a (uniform) way to compute the E-variants of a term. That
is why we will restrict our attention to theories E for which there exists R and
E′ such that R is an E′-convergent system for E. Then the ordering ≥ will be
chosen in such a way that →E′\R ⊆ ≥. To summarize now, our aim is, given a
theory E, to find a splitting of E in (R, E′) and an ordering ≥ such that:
1. R is an E′-convergent system for E and →E′\R ⊆ ≥ is a decidable relation,
2. for every term t, there is a finite set of variants t1, . . . , tn, effectively com-
putable, such that, for every substitution σ, there is an index i and a sub-
stitution θ such that tσ↓E′\R =E′ tiθ.
We will simply say that (R, E′) is a decomposition of E satisfying the finite
variant property if the two above properties are satisfied. There are several well-
known techniques to obtain presentations satisfying the first condition. Hence,
we focus on the second condition.
The following lemma shows that, if (R, E′) has the finite variant property, we
may not only compute in advance some instances ti of t such that tσ↓ is always
an instance of some ti, but actually compute in advance substitutions θi such
that ti = tθi↓ is a complete set of variants and every normalized substitution
can be factorized through θi.
Lemma 3. A decomposition (R, E′) has the finite variant property iff
For every term t, there is a finite set of substitutions Σ(t) such that
∀σ ∃θ ∈ Σ(t), ∃τ. σ↓ =E′ θτ ∧ (tσ)↓ =E′ (tθ)↓τ
Proof sketch: The if part is straightforward. Conversely, let T be the term
〈t, 〈x0, 〈. . . , xn〉〉〉 where {x0, . . . , xn} = vars(t) and 〈 , 〉 is a free binary function
symbol. We apply the hypothesis to T . This yields a definition of Σ(t). 2
5.2 The Boundedness Condition
In what follows we assume we are given a theory E for which there exists R and
E′ such that R is an E′-convergent system for E.
Definition 4 (boundedness property). (R, E′) satisfies the boundedness
property if for every term t, there exists an integer n such that for every nor-
malized substitution σ, the normal form of tσ is reachable by a derivation whose
length can be bounded by n (thus independently of σ):
∀t,∃n,∀σ. t(σ↓)
≤n
−−→E′\R (tσ)↓
The following theorem shows the relationships between the boundedness con-
dition and the finite variant property.
Theorem 1. Let E′ be a regular presentation for which an E′-unification algo-
rithm exists. If moreover (R, E′) satisfies the boundedness property then (R, E′)
is a decomposition of E satisfying the finite variant property.
Conversely, if (R, E′) satisfies the finite variant property, then it satisfies the
boundedness property.
Proof sketch: The first implication is actually similar to a result in [19]: we use
narrowing, however bounding the length of derivation. For the converse, let t be
any term. We first apply Lemma 3. Then we let n be such that tθ
≤n
−−→E′\R (tθ)↓
for every θ ∈ Σ(t). Then we prove that, for every normalized substitution σ,
tσ
≤n
−−→E′\R (tσ) ↓. 2
It must be emphasized that the proof of this theorem provides us with an
effective way of computing the variants: simply narrow t at most n times, where
n is given by the boundedness property.
6 Proving Boundedness
6.1 The case E′ = ∅
Thanks to Lemma 2, the narrowing derivation associated by Lemma 1 to an
innermost derivation is basic. Moreover, since R is a convergent system, we can
always choose an innermost derivation. Hence we have the following proposition:
Proposition 5. If basic narrowing terminates for R then (R, ∅) is a decompo-
sition of E satisfying the boundedness property.
This proposition allows us to conclude that the decomposition (RDYT, ∅)
(resp. (RKIT, ∅)) of DYT (resp. KIT ) presented in Section 4.1 satisfies the
boundedness property and, by Theorem 1 we conclude that these decompositions
satisfy the finite variant property.
6.2 Non-Orientable Axioms
Because of non-orientable equations (typically AC), we need to consider equa-
tional rewriting. Unfortunately, we cannot extend directly the results of the pre-
vious section, as shown by Example 1. Anyway, for Abelian Groups and Diffie-
Hellman theories, independently of the orientation of x−1 ∗ y−1 = (x ∗ y)−1,
AC-narrowing (even basic) does not terminate. That is why we need to develop
refined criteria, which will be satisfied by these two theories, yielding a finite
variant property.
Let us first give a simple decidable sufficient condition for boundedness.
Lemma 4. If (R, E′) is a decomposition of E which satisfies:
∀f ∈ F ∃c ∀t1, . . . tn ∈ T (F ,X ). f(t1↓, . . . , tn↓)
≤c
−−→E′\R f(t1, . . . , tn)↓.
Then (R, E′) satisfies the boundedness property.
Note that being an optimally reducing rewrite systems (see [14]) is a sufficient
condition for the boundedness property. Indeed such systems actually satisfy the
conditions of Lemma 4, with a constant c = 1. However, we are going to need (for
instance for Abelian Groups) to apply Lemma 4 with constants larger than 1.
Furthermore, even if we can apply Lemma 4, with c = 1, the rewrite system might
not be optimally reducing, simply because there are extra rules not satisfying
the required condition. Finally, in [14], the authors assume that the root symbol
of any left hand side is not associative-commutative, which we do not. So, our
condition, which is strictly weaker, provides us with new applications.
We show successively that Lemma 4 can be applied to the theories of exclusive
or, Abelian Groups and Diffie-Hellman.
Lemma 5. Let t1 and t2 be irreducible terms (w.r.t. AC\R+), t1 + t2 can be
reduced to its normal form, using at most 1 reduction step.
A similar lemma does not hold for the Abelian Groups decomposition (R∗, AC)
of Section 4.3. Even worse, this decomposition does not satisfy the boundedness
property: consider the term t = x−1 and the substitution σ = {x 7→ a0∗ . . .∗an},
tσ requires at least n reduction steps before we reach its normal form.
However, an unusual orientation of some rules yields a presentation for which
the finite variant property holds. This orientation has first been proposed by
Lankford (see [9]). We get the following rewrite system:
R′∗ =


x ∗ 1→ x x−1
−1
→ x
1−1 → 1 (x−1 ∗ y)−1 → x ∗ y−1
x ∗ x−1 → 1 x ∗ (x−1 ∗ y)→ y
x−1 ∗ y−1 → (x ∗ y)−1 x−1 ∗ (y−1 ∗ z)→ (x ∗ y)−1 ∗ z
(x ∗ y)−1 ∗ y → x−1 (x ∗ y)−1 ∗ (y ∗ z)→ x−1 ∗ z
This rewrite system is an AC-convergent system for AG [9] and even though
basic narrowing does not terminate, we can show that:
Lemma 6. Let t1 and t2 be irreducible terms (w.r.t. AC\R
′
∗), t
−1
1 and t1 ∗ t2
can be reduced to their normal form, using at most 1 (resp. 2) reduction step.
Example 4. Let t1 = a ∗ (b ∗ c)
−1 and t2 = a
−1 ∗ b. We have the following
derivation from t1 ∗ t2 to its normal form c
−1.
(a ∗ (b ∗ c)−1) ∗ (a−1 ∗ b)→AC\R′
∗
((b ∗ c) ∗ a)−1 ∗ (a ∗ b)→AC\R′
∗
c−1
Now consider the Diffie-Hellman theory. We orient the two additional equa-
tions and get the following rewrite system:
RDH = R
′
∗ ∪
{
exp(x, 1)→ x
exp(exp(x, y), z)→ exp(x, y ∗ z)
Proposition 6. RDH is an AC-convergent rewrite system for DH.
Lemma 7. Let t1 and t2 be irreducible terms (w.r.t. AC\RDH), t
−1
1 , t1 ∗ t2 and
exp(t1, t2) can be reduced to their normal form, using at most 1 (resp. 2 and 4)
reduction step.
We illustrate the worst case for which we need the 4 reduction steps to obtain
the normal form.
Example 5. Let t1 = exp(e, a
−1 ∗ b) and t2 = b
−1 ∗ a, t = exp(t1, t2) can be
reduced to its normal form (w.r.t. AC\RDH) by a derivation using 4 reduction
steps. Indeed, we have:
exp(exp(e, a−1 ∗ b), b−1 ∗ a)→ exp(e, (a−1 ∗ b) ∗ (b−1 ∗ a))
→ exp(e, (a ∗ b)−1 ∗ (a ∗ b))
→ exp(e, 1)
→ e
To sum up, as consequences of Theorem 1, Lemmas 4, 5, 6 and 7:
Corollary 1. The decompositions (R+, AC), (R
′
∗, AC) and (RDH, AC) have
the finite variant property.
7 ACUNh does not Satisfy the Finite Variant Property
We prove here that the theory ACUNh, introduced in Section 4.5 does not have
the finite variant property.
Let us recall that, depending on the orientation of h(x + y) = h(x) + h(y),
we get two AC-convergent rewrite systems displayed in Figure 1. However, none
of them yields an appropriate decomposition:
Lemma 8. The decompositions (R1, AC) and (R2, AC) of the theory ACUNh
do not satisfy the boundedness property.
Proof : First, we consider the case of (R1, AC), and we show the result by
contradiction. Let t = h(x) and n be such that ∀σ. h(x)(σ↓)
≤n
−−→E′\R (h(x)σ)↓.
We consider the substitution σ = {x 7→ a+ h(a) + . . .+ hn+1(a)}. It is easy to
see that we need n+1 rewriting steps (with the rule h(x+ y)→ h(x)+h(y)) to
rewrite h(x)σ to its normal form h(a) + . . .+ hn+2(n). Hence contradiction.
The result for (R2, AC) can be obtained in a similar way with the term
t = x+ y and the substitution σ = {x 7→ hn(a); y 7→ hn(b)}. 2
There are not many other choices than R1 and R2 and we get the following:
Theorem 2. There is no decomposition (R, AC) of ACUNh which satisfies the
boundedness property and such that the right members of the rules in R are
irreducible (w.r.t. AC\R).
The idea is to prove first that, for any AC-convergent rewrite system R, either
−→AC\R1 ⊆
∗
−→AC\R or −→AC\R2 ⊆
∗
−→AC\R. Next, we prove that there is an inte-
ger n such that −→AC\R ⊆
≤n
−−→AC\R1 or −→AC\R ⊆
≤n
−−→AC\R2 and we conclude
by Lemma 8.
Corollary 2. There is no decomposition (R, AC) of ACUNh which satisfies the
finite variant property and such that the right members of the rules in R are
irreducible (w.r.t. AC\R).
The property required on the right members of the rules of R seems to be
unnecessary. This assumption has been taken to make easier the proof.
8 Other Applications of the Finite Variant Property
Assume that (E,E′) has the finite variant property. This can be used to reduce
disunification problems modulo E to disunification problems modulo E′:
Theorem 3. The Σ1 fragment of the first-order theory of T (F)/=E is decidable
whenever the Σ1 fragment of the first-order theory of T (F)/=E′ is decidable.
To prove this, simply compute the variants φ1, . . . , φn of the formula φ. (In
such a computation, logical connectives are seen as free symbols). For every
substitution σ, there is an index i and a substitution θ such that φσ↓E =E′ φiθ.
In particular, φ is solvable modulo E iff one of the φi is solvable modulo E
′.
Then, since the Σ1 fragment of the theory of T (F)/=AC is decidable [1], we
get the following new results:
Corollary 3. The Σ1 fragments of the first-order theories of quotient term al-
gebras T (F)/=ACUN , T (F)/=AG, T (F)/=DH are decidable.
Such results cannot be derived from the decidability of unification. Even in
the dismatching case this is not so trivial to get a decision procedure. Consider
for instance x + f(x + y) 6= a in the theory ACUN. A most general solution
of the matching problem is x = f(z) + a ∧ y = a + z + f(z). Complementing
the solutions of the matching equation involves quantifier elimination : ∀z.x 6=
a+ f(z) ∨ y 6= a+ z + f(z).
In the case of Abelian Groups, it is actually known that the first-order the-
ory of finitely generated Abelian Groups is decidable [16]. However, adding a
binary free function symbol, it might become undecidable. Actually, the status
of the first order theories of above-mentioned quotient algebras is unknown. On
the undecidability side, the method described in [18] can not be applied in a
straightforward way. On the decidability side, the finite variant property does
not help since the first-order theory of T (F)/=AC is undecidable [18].
9 Conclusion
We believe that the finite variant property is important in many applications.
It allows us to reduce problems modulo an equational theory E to problems
modulo an equational theory E′ ⊆ E. It is often useless for solving equations;
for instance, unification modulo ACUN is simpler than unification modulo AC.
However, for other constraint solving problems such as intruder derivability con-
straints [5] or disunification problems mentioned in the previous section, this
property can be crucial.
We have proposed some criteria for the finite variant property, which have
been applied to several equational theories. The techniques are inspired by nar-
rowing, though, as in [19], we do not rely directly on narrowing sequences, but
rather on innermost reductions of instances.
An open question is to design other criteria (both for the finite variant prop-
erty or its negation), which would not assume an E′-convergent rewrite system
for E. For instance, does (AC, ∅) have the finite variant property ? We are
tempted to answer no, but the proof is challenging.
Acknowledgement
We would like to acknowledge P. Narendran and the anonymous referees who
gave relevant comments which helped in improving the paper.
References
1. H. Comon. Complete axiomatizations of some quotient term algebras. Theoretical
Computer Science, 118(2):167–191, 1993.
2. H. Comon-Lundh. Intruder theories (ongoing work). In 7th Interna-
tional Conference on Foundations of Software Science and Computation Struc-
tures (FoSSaCS’04), Barcelona, Spain, 2004. Invited talk, slides available at
http://www.lsv.ens-cachan.fr/ comon/biblio.html.
3. H. Comon-Lundh and V. Cortier. New decidability results for fragments of first-
order logic and application to cryptographic protocols. In Proc. 14th International
Conference on Rewriting Techniques and Applications (RTA’03), volume 2706 of
LNCS, pages 148–164, Valencia, Spain, 2003. Springer-Verlag.
4. H. Comon-Lundh and S. Delaune. The finite variant property: How to get rid of
some algebraic properties. Research Report LSV-04-17, Laboratoire Spe´cification
et Ve´rification, ENS Cachan, France, 2004. 21 pages.
5. H. Comon-Lundh and V. Shmatikov. Intruder deductions, constraint solving and
insecurity decision in presence of exclusive or. In Proc. of 18th Annual IEEE Sym-
posium on Logic in Computer Science (LICS’03), pages 271–280, Ottawa, Canada,
2003. IEEE Comp. Soc. Press.
6. S. Delaune and F. Jacquemard. A decision procedure for the verification of security
protocols with explicit destructors. In Proc. 11th ACM Conference on Computer
and Communications Security (CCS’04), pages 278–287, Washington, USA, 2004.
ACM.
7. N. Dershowitz and J.-P. Jouannaud. Rewrite systems. In J. van Leeuwen, editor,
Handbook of Theoretical Computer Science, volume B, chapter 6. Elsevier and MIT
Press, 1990.
8. J.-M. Hullot. Canonical forms and unification. In Proc. 5th Conference on Au-
tomated Deduction, (CADE’80), volume 87 of LNCS, pages 318–324, Les Arcs,
France, 1980. Springer.
9. J.-M. Hullot. A catalogue of canonical term rewriting systems. Technical Report
CSL-114, Computer Science Laboratory, SRI, CA, USA, 1980.
10. D. Kapur, P. Narendran, and L. Wang. An E-unification algorithm for analyzing
protocols that use modular exponentiation. In Proc. 14th International Conference
on Rewriting Techniques and Applications (RTA’03), volume 2706 of LNCS, pages
165–179, Valencia, Spain, 2003. Springer-Verlag.
11. C. Kirchner. Me´thodes et Outils de Conception Syste´matique d’Algorithmes
d’Unification dans les The´ories E´quationnelles. PhD thesis, Universite´ de Nancy I,
1985.
12. C. Meadows and P. Narendran. A unification algorithm for the group Diffie-
Hellman protocol. In Proc. of the Workshop on Issues in the Theory of Security
(WITS’02), Portland, USA, 2002.
13. P. Narendran, Q. Guo, and D. Wolfram. Unification and matching modulo nilpo-
tence. In Proc. of the 13th International Conference on Automated Deduction,
(CADE’96), volume 1104 of LNCS, pages 261–274, New Brunswick, USA, 1996.
Springer-Verlag.
14. P. Narendran, F. Pfenning, and R. Statman. On the unification problem for carte-
sian closed categories. Journal of Symbolic Logic, 62(2):636–647, 1997.
15. L. Paulson. Mechanized proofs for a recursive authentication protocol. In Proc.
10th Computer Security Foundations Workshop (CSFW’97), pages 84–95, Rock-
port, USA), 1997. IEEE Comp. Soc. Press.
16. C. Rackoff. On the complexity of the theories of weak direct products (preliminary
report). In Proc. of the 6th Annual ACM Symposium on Theory of Computing,
pages 149–160. ACM Press, 1974.
17. P. Y. A. Ryan and S. A. Schneider. An attack on a recursive authentication
protocol: A cautionary tale. Information Processing Letters, 65(1):7–10, 1998.
18. R. Treinen. A new method for undecidability proofs of first order theories. Journal
of Symbolic Computation, 14(5):437–457, 1992.
19. E. Viola. E-unifiability via narrowing. In Proc. of the 7th Italian Conference on
Theoretical Computer Science, (ICTCS’01), volume 2202 of LNCS, pages 426–438,
Torino, Italy, 2001. Springer.
