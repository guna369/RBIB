Sorting by Reversals is Difficult 
Albert0 Caprara * 
Abstract 
We prove that the problem of sorting a permutation by the 
minimum number of reversals is NP-hard, thus answering a 
major question on the complexity of a problem which has 
widely been studied in the last years. The proof is based on 
the strong relationship between this problem and the prob- 
lem of finding the maximum number of edge-disjoint alter- 
nating cycles in a suitably-defined bicolored graph. For this 
latter problem we derive a number of structural properties, 
that can be used for showing its NP-hardness. 
Key words: sorting by reversals, alternating cycle decom- 
position, complexity. 
AMS subject classifications: 68425, 68R10, 05C45. 
1 Introduction 
Let be given a permutation T = (~1 . . . TV) of (1,. . . ,n}, 
and denote by L the identity permutation (1 2 . . . n - 1 n). 
A reversal of the interval (i, j) is an inversion of the sub- 
sequence x; . . . =j of T, represented by the permutation 
p = (1 . . . i - 1 j . . , i j + 1 . . . n). Composition of 
x with p yields ap = (~1 . . Ai- rj . . . xi rj+i . . . r,) 
where elements x;, . , *j have been reversed. The problem 
of sorting a permutation by the minimum number of rever- 
sals (MIN-SBR) is defined as follows: 
MIN-SBR: given a permutation ?r, find a shortest sequence 
of reversals ~1,. . . ,&(n) such that 7rpr . . . &(?r) = 1, where 
d(a) denotes the reversal distance of ?r. 
MIN-SBR was inspired by computational biology ap- 
plications, in particular genome rearrangements, and has 
widely been studied in the last years, among others, by Ke- 
cecioglu and Sankoff [9, 81, Bafna and Pevener [l], Hannen- 
halli and Pevzner [4, 51, Caprara, Lancia and Ng [2], Irving 
and Christie [7]. A major open question about MIN-SBR 
is its complexity: the problem was conjectured to be NP- 
hard by Kececioglu and Sankoff [9], and to our knowledge 
’ DEIS, University of Hologna, \‘iale Kisorgirnento 2, 10136 
Bologna, Italy ~- e-mail: acaprara(~deis.unibo.it 
bxmission to make digitalhard copies of all or part ofthis material fi,r 
personal of chssroom use is granted without fee provided that the copies 
are not made or distributed for prolit or commercial advantage, the copy- 
risht notice, the title ofthe publication and its date appear, ,md notice is 
given that copyright is by permission of the ACM, Inc. To copy ot]le&se, 
to republish, to post on servers or to redistribute to lists, retluires specific 
permission and/or fee. 
RECOMB 97, Santa Fe New Mexico (ISA 
Copyright 1937 ACM O-89791-882-8/97/0 I ..$3.50 
no proof of this result can be found in the literature, see 
also [lo]. A stronger conjecture of Kececioglu and Sankoff 
[9] claimed that the special case of MIN-SBR where, for a 
given r, one wants to check whether d(r) is equal to one half 
times the number of breakpoints of a (see below), was NP- 
complete. In fact Irving and Christie [7] recently disproved 
this latter conjecture, showing a polynomial time algorithm 
for solving this special case. 
In this paper we prove that MIN-SBR is indeed NP- 
hard. Our result is derived by considering the strong re- 
lationship between MIN-SBR and the problem of finding 
the maximum number of edge-disjoint alternating cycles in 
a suitably-defined bicolored graph. This relationship was 
first pointed out by Bafna and Pevzner [l] and Kececioglu 
and Sankoff [9], and further illustrated by Hannenhalli and 
Pevzner [4]. Our starting point is the fact that partitioning 
the edge set of a Eulerian graph into the maximum number 
of cycles is NP-hard, see Holyer [6]. 
We next give the basic definitions and previous results 
used in the sequel. 
Consider a permutation a = (~1 . . . r,,) of (1, . . .n}. 
A long strip of x is a subsequence xi . . . rj of ?r such that 
j>i+landeither71k=rrk-~+~for~=i+l,...,j,or 
?rk =~k-I--lfork=i+l,...,j. Inotherwords,alongstrip 
of x corresponds to three or more elements which appear in 
the same, or reverse, order in A and L. As far as MIN-SBR is 
concerned, Hannenhalli and Pevzner [5] proved that one can 
assume without loss of generality that A contains no long 
strip; we therefore make this assumption in the following. 
We also assume without loss of generality al # 1 and rn # 
n. All these assumptions are not strictly necessary to derive 
our results, but lead to a simplified exposition of some parts. 
Following the description in [l], define the breakpoint 
graph G(r) = (V, R U B) of rr as follows. Ideally add to 
?r the elements ~0 := 0 and an+1 := n + 1, re-defining 
u := (0 Tl . . . 
tion UT-’ 
un n + 1). Also, let the inverse permuto- 
ofrbedefinedby*,‘:=ifori=O,...,n+l. 
Each node v E V represents an element of A, therefore we 
let V := (0,. . , n+ 1). Graph G(r) is bicolored, i.e. its edge 
set is partitioned in two subsets, each represented by a dif- 
ferent color. R is the set of red (say) edges, each of the form 
(“i,Xi+l), for all i E (0,. .., n} such that [xi - ri+i ] # 1, 
i.e. elements which are in consecutive positions in x but 
not in the identity permutation L. Such a pair ri,Ai+i is 
called a breakpoint of ?r. Let us indicate with b(r) := JR1 
the number of breakpoints of A. B is the set of blue (say) 
edges, each of the form (i, i + l), for all i E (0,. . . ,n} such 
that 1~;’ - rr;i ( # 1, i.e. elements which are in consecutive 
positions in L but not in r. Notice that each node i E V 
75 
has either degree 2 or 4, and has the same number of inci- 
dent blue and red edges. Therefore, [RI = IEI(= b(r)). The 
fact that G(a) has no nodes of degree 0 follows from the 
assumption that r contains no long strip. Figure 1 depicts 
the breakpoint graph associated with permutation (4 2 1 3). 
An alternating cycle of G(a) is a sequence of edges 71, bl , 
w,bz ,..., rm,bmr where T; E Ii, bi E B for i = I,. . . , m; 7; 
and bj have a common node for i = j = 1, . . . , m and for 
i = j + 1, j = I,... ,m (where rm+l := ~1); and ri # ?j, 
bi # bj for 1 2 i < j 5 m. An alternating path is a subse- 
quence of edges of some alternating cycle. For example, 
edges (0,4), (4,3), (3, I), (1,O) and (4,2), (2,3), (3,5), (5,4) 
form alternating cycles in the graph of Figure 1. It is some- 
times convenient to assign each edge (xi, ri+l) E R an orien- 
tation from ri to ai+l, i.e. to orient the red edges of G from 
the endpoint which appears first in A to the endpoint which 
appears second. An alternating cycle of G(A) is then called 
directed with respect to x if it is possible to walk along the 
whole cycle traversing each red edge in the direction of its 
orientation. An alternating cycle of G(A) is called undirected 
with respect to * if it is not directed. For example, in Figure 
1 alternating cycle (4,2), (2,3), (3,5), (5,4) is directed with 
respect to (4 2 1 3), whereas cycle (0,4), (4,3), (3, I), (1,O) 
is undirected with respect to (4 2 1 3). 
An alternating cycle decompositionof G(a) is a collection 
of edge-disjoint alternating cycles, such that every edge of G 
is contained in exactly one cycle of the collection. It is easy 
to see that G(r) always admits an alternating cycle decom- 
position. In the graph of Figure 1, cycles (0,4), (4,3), (3, l), 
(1,0) and (4,2), (2,3), (3,5), (5,4) form an alternating cycle 
decomposition. Bafna and Pevsner [l] (see also Kececioglu 
and Sankoff [9]) proved the following property. For a given x 
let c(x) be the maximum cardinality of an alternating cycle 
decomposition of G(Z). 
Theorem 1 ((11, [9]) For every x, d(?r) 1 b(r) - C(T). 
Therefore b(r) - C(T) g ives a valid lower bound on the 
optimal solution value to MIN-SBR. In practical cases this 
bound turns out to be very tight, and is frequently equal to 
the optimum, as observed by the extensive experiments of 
Kececioglu and Sankoff [9] and Caprara, Lancia and Ng [2]. 
This empirical observation was formalized by the spectac- 
ular results of Hannenhalli and Pevaner [4], who were able 
to prove that the signed version of MIN-SBR is solvable in 
polynomial time. 
The signed version of MIN-SBR is the problem of sorting 
a permutation by the minimum number of reversals, with a 
parity assigned to each element of the permutation, speci- 
fying that the number of reversals in a solution involving 
the element must be either even or odd. A permutation 
with a parity on each element is called signed, and denoted 
by ?. Let d(n’) denote the optimal solution value to signed 
MIN-SBR on ??, and b(F) the number of breakpoints of 71 
(see e.g. [1] for the definition of breakpoint of a signed per- 
mutation). Bafna and Pevzner [l] introduced the notion of 
breakpoint graph for a signed permutation 7?, G(s), which 
turns out to be a breakpoint graph where all nodes have 
degree 2, hence having a unique alternating cycle decompo- 
sition of cardinality c(g). Furthermore, Bafna and Pevzner 
showed that Theorem 1 also applies to signed permutations, 
i.e. d(?r’) 2 b(i;) - c(Z). The orientation of the red edges 
of G(i) with respect to i is defined in the same way as in 
the unsigned case. Hannenhalli and Pevzner [4] proved that 
d(?r’) = b(?r’) - c(g) if every cycle of G(?) is undirected. In- 
deed in this case 7? contains no hurdles, and therefore is not a 
fortress as well; see [4]. We stress that the condition is only 
sufficient, and that undirected cycles are called orientedin 
[4], and directed cycles unoriented. 
Given a (unsigned) permutation r and an alternating cy- 
cle decomposition of G( ). t T m o c * c c es, it is easy to define ( ) y 1 
a signed permutation ii such that b(i) = b(x), c(a) = C(K), 
d(71) > d(r), and every cycle of G(77) is undirected with re- 
spect to ?r’ if and only if its counterpart in the decomposition 
of G(r) is undirected with respect to a (see e.g. [5]). Ifev- 
ery cycle in this latter decomposition is in fact undirected 
with respect to 7r it follows that 
d(x) 5 d(Z) = b(S) - c(g) = b(vr) - C(T) < d(r) 
hence implying 
Theorem 2 ([l], (4, 51) Let be given apermutationr and a 
maximum decomposition of the associated breakpoint graph 
into C(T) alternating cycles. If every cycle in the decomposi- 
tion is undirected with respect to vr, then d(n) = b(a) - c(x). 
The above discussion motivates the study of the follow- 
ing maximum alternating cycle decomposition (MAX-ACD) 
problem: 
MAX-ACD: given the breakpoint graph G(r) of some per- 
mutation ?r, find a maximum-cardinality alternating cycle 
decomposition of G(s). 
As one can observe, MAX-ACD is somehow related with 
the following problem, called mazimum eulerian cycle de- 
composition (MAX-ECD): 
MAX-ECD: given a Eulerian graph H = (IV,E), find a 
maximum-cardinality cycle decomposition of H, i.e. parti- 
tion E into the maximum number of cycles. 
In the early 80’s Holyer [6] proved that. checking whether the 
edge set of a given graph H can be partitioned into cliques 
of size k, is NP-complete for every k 2 3. In particular, for 
k = 3 one wants to check whether the edge set of H can be 
partitioned into triangles. In this case H can be assumed 
Eulerian without loss of generality, the answer being clearly 
no otherwise. So the problem of finding, if any, a partition 
of the edge set of a Eulerian graph into triangles is NP- 
complete. This immediately implies 
Theorem 3 ([6]) MAX-ECD is NP-hard. 
The paper is organized as follows. Section 2 gives a 
complete characterization of the bicolored graphs which are 
breakpoint graphs of some permutation. This character- 
ization is used in Section 3 to prove that MAX-ACD is 
NP-hard, showing a polynomial transformation from MAX- 
ECD. Finally, in Section 4 we prove that MIN-SBR is NP- 
hard by showing a polynomial transformation from MAX- 
ACD. 
2 A Characterization of Breakpoint Graphs 
Next section is devoted to showing a polynomial-time trans- 
formation from MAX-ECD to MAX-ACD, thus proving the 
latter problem is NP-hard. (In fact, there would also be an 
easy transformation from MAX-ACD to MAX-ECD, which 
is omitted since it is useless for our purposes.) Such a trans- 
formation should pick any Eulerian graph H = (W, E), and 
define a permutation a such that, by solving MAX-ACD on 
the associated breakpoint graph G(r), one gets a partition- 
ing of E into the maximum number of cycles. In fact, we by- 
pass the explicit definition of *, and use the following char- 
acterization of breakpoint graphs to construct a suitable bi- 
colored graph from the given Eulerian graph H. To simplify 
76 
5 0 
3 @ 4 
1 2 
Figure 1: The breakpoint graph G( ) x associated with r = (4 2 1 3) - bl ue edges are drawn as thin lines, red edges as thick 
lines. 
the notation, given a (possibly bicolored) graph G = (V, E) 
and any set F C V x V (possibly F g E), we let G(F) be 
the graph defined by node set V and edge set F. 
Theorem 4 A bicolored graph G = (V, RUB) is the break- 
point graph of Some permutation T if and only if 
(i) each connected component of the subgrapha of G in- 
duced by edge set R, G(R), and by edge set B, G(B), 
is a simple path; 
(ii) each node i E V has the same degree (1 or 2) in G(R) 
and G(B); 
(iii) for each pair of nodea i, j E V connected by an edge in 
G(R), i and j are not connected by an edge in G(B), 
and viceversa, i.e. if (i, j) E R then (i, j) Q B and 
viceversa. 
The necessity part follows immediately from the definition 
of breakpoint graph. For proving the sufficiency part, we 
show an algorithm to construct from G a permutation ?r 
such that G(a) = G. Let be given G = (V, R U B) satisfying 
(i)-(iii). Consider the set U of the nodes of degree 2 in G, 
i.e. the set of nodes of degree 1 in G(R) and G(B). Notice 
that IUI is even and > 2. A perfect matching of the nodes 
in U is a set M c U x U such that every i E U is contained 
in exactly one pair in M. Such a perfect matching is called 
Hamiltonian if the graphs G(R U M) and G(B U M) are 
Hamiltonian circuits - notice that M can be Hamiltonian 
only if M n (Ii u B) = 0. The importance of Hamiltonian 
matchings of U is motivated by the following property. 
Claim 1 Every Hamiltonian matching of U defines up to 
IUI permutations a such that G(x) = G. Conversely, every 
7r such that G(n) = G definea a Hamiltonian matching of 
u. 
Proof. Given a Hamiltonian matching M of U, IUI (pos- 
sibly different) permutations of IT/I elements (including the 
dummy elements ?rO := 0 and “I,,, := IV1 - 1) having G 
as breakpoint graph can be constructed as follows; see also 
procedure GET-PERMUTATION below. Choose any node 
i E U and number it 0. Consider then the Hamiltonian 
circuit G(B U M) and walk along it starting from i and 
traversing first the blue edge incident to i. Number the 
nodes 1,2,...,lVl - 1 according to the order in which they 
are visited by the walk. Consider now the Hamiltonian cir- 
cuit G(RUM) and walk along it starting from node i, letting 
~0 := 0, and traversing first the red edge incident to i. Let 
elements XI, ~2, . . . , nl~.‘i correspond to the numbers assigned 
to the nodes which are in turn visited by the walk. It is easy 
to check that G(r) = G. 
Conversely, for any given permutation K of (1,. . n}, it 
is immediate to verify that the set M := ({(i,i + 1) : 0 < 
~<~}\B)U{(O,~+I)}=({(R;,~T;+~):O~~<~}\R)U 
((0, n + 1)) defines a Hamiltonian matching of G(x). 0 
procedure GET-PERMUTATION; 
input: a bicolored graph G = (V, R U B) satisfying (i)-(a), 
and a Hamiltonian matching M of the nodes of degree 
2 in G; 
output: a permutation x such that G(n) = G; 
begin 
let ho,hl,hz ,..., hlr,lW1 be the Hamiltonian circuit 
G(B U M) where ho has degree 2 in G and 
(ho,hl) E 3; 
for i := 0 to IV/ - 1 do “hi := i; 
let go,g1,g2,..., glvl-l be the Hamiltonian circuit 
G(R U M) where go = ho and (go,gl) E R; 
for i := 0 to [VI - 1 do ri := vgi 
end. 
For example, the Hamiltonian matching of G(r) in Fig- 
ure 1 defined by T is M = {(1,2),(0,5)}. Matching A4 is 
also associated with the permutation (2 4 3 l), having G(r) 
as breakpoint graph. 
Notice that, given a breakpoint graph G and an asso- 
ciated Hamiltonian matching M, the Hamiltonian circuit 
G(R U M) uniquely determines which alternating cycles of 
G are directed or undirected with respect to every permu- 
tation associated with G and M. 
We show that every G satisfying (i)-(iii) has a Hamilto- 
nian matching by giving a procedure to find such a match- 
ing. Construct the following auxiliary graph A = (U, S U C), 
where nodes i, j E U are connected by a red edge 8 E S if 
i and j are the endpoints of a path in G(R), and, symmet- 
rically, nodes i, j E U are connected by a blue edge c E C 
if i and j are the endpoints of a path in G(B). It is easy 
to check that each node of A has exactly 2 incident edges, 
one in S and one in C. (Notice that A is not necessarily a 
breakpoint graph, since a red edge in S and a blue edge in C 
might have the same endpoints.) Figure 2 depicts the aux- 
iliary graph associated with the breakpoint graph of Figure 
1. 
procedure HAMILTONIAN-MATCHING; 
input: a bicolored graph G = (V, R U B) satisfying (i)-(iii); 
output: a Hamiltonian matching M of the nodes of degree 
2 in G; 
begin 
let U be the set of nodes of degree 2 of G and 
A = (U, S U C) the corresponding auxiliary graph; 
initialize M := 0; 
while IUI > 2 do 
begin 
choose any node pair i, j E U such that 
(4 i) @ s U C; 
comment: shrink i and j; 
let a and b respectively be the nodes connected 
to i and j by a red edge in S, and c and d 
respectively be the nodes connected to i and j 
77 
5 
LN 
0 
1 2 
Figure 2: The auxiliary graph A associated with the breakpoint graph of Figure 1. 
by a blue edge in C; 
let U := U \ {i, j}, 
S := (S \ ((6 a), (j, b))) U {(a, b)), 
C := (C \ {(i, c), (j, 41) U {(c, 41, 
M := M U {(i, j)} 
end; 
let i and j be the two nodes left in U; 
let M:=Mu{i,j} 
end. 
Claim 2 The set M constructed by the above procedure is 
a Hamiltonian matching. 
Proof. In the while-do loop it is easy to see that, as long 
as Ii71 > 2, i.e. IUI > 4, there always exists a node pair i, j 
such that (i, j) @ S U C, since each node of A has degree 
2. The fact that M is a perfect matching of the nodes of 
degree 2 in G such that M n (R U B) = 0 is immediate. 
To see that M is Hamiltonian, it is sufficient to show that 
G(R U M) and G(B U M) contain no subcircuit. Indeed, at 
each execution of the while-do loop, there is a one-to-one 
correspondence between maximal paths in G(R U M) (resp. 
in G(B U M)) and edges in S (resp. in C), and therefore 
the only way to introduce a subcircuit would be matching 
two nodes connected by an edge in S (resp. in C), which is 
avoided. 0 
In the example of Figure 1, M = {(I, 2),(0,5)} is the only 
possible Hamiltonian matching of G(x); see Figure 2. With 
Claim 2, the proof of Theorem 4 is complete. 
Given a bicolored graph G = (V, R U I?), the subdivision 
of an edge e = (i, j) E R u B is obtained by adding two new 
nodes, say a, b, to V, and by replacing e with the 3 edges 
(i,a), (a, b) and (b, j), where (i,u) and (b, j) have the same 
color as e, while (a, b) has a different color from e; see Figure 
3. 
Remark 1 There is a one-to-one corre8pondence between 
alternating cycles and alternating cycle decompositions of a 
bicolored graph G and any bicolored graph G’ obtained from 
G by subdividing edges. 
The above Remark immediately leads to the following 
Remark 2 Given a bicolored graph G = (V, R U B) satiafy- 
ing (ii) in Theorem 4 and 
(i’) each connected component of the aubgraph8 of G in- 
duced by edge set II, G(n), and by edge set B, G(B), 
is either a simple path or a simple cycle; 
one can define a graph G’ = (V’, R’ U B’) satisfying (i)-(iii) 
in Theorem 4 whose sire is bounded by a constant timea the 
size of G and such that there is a one-to-one correspondence 
between alternating cycles and alternating cycle decomposi- 
tions of G and G’. 
Proof. G’ can be obtained from G by first subdividing all 
the red edges r = (i, j) E R such that (i, j) E B - so as 
to satisfy (iii) - and then by subdividing one edge for each 
cycle in G(B) or in G(R) - so as to satisfy (i). 0 
3 The Complexity of MAX-ACD 
This section is devoted to proving the following 
Theorem 5 MAX-ACD is NP-hard. 
The proof is based on a polynomial transformation from 
MAX-ECD to MAX-ACD. Given a Eulerian graph H = 
(W, E), we construct a bicolored graph G satisfying (i)-(a) 
in Theorem 4, whose size is polynomial in that of H and 
such that there is a one-to-one correspondence between cy- 
cles of H and alternating cycles of G, and between cycle 
decompositions of H and alternating cycle decompositions 
of G. The proof then follows from Theorems 3 and 4. 
The construction is based on the replacement of each 
node v of H of degree d with a bicolored graph G(u), uniquely 
determined by d. In particular G(v) has d nodes of degree 1, 
each with an incident blue edge, and other nodes of degree 
2 or 4, each having the same number of incident blue and 
red edges. Furthermore, G(v) contains no alternating cy- 
cle, and for any partition of its degree-l nodes into pairs, its 
edge set can be decomposed into d/2 alternating paths, each 
connecting a different node pair in the partition. The whole 
G is then obtained by interconnecting the G(v)%. For each 
edge e = (u,z)) E E, a pair of degree-l nodes in the graphs 
G(v) and G(u) is connected by a red edge, so as to ensure 
that every node of G has the same number of incident blue 
and red edges; see Figure 4. 
We complete the proof by showing the structure of each 
graph G(v) and proving the properties mentioned above. 
For each pair of integers d,m, d even, let the bicolored 
graph G(d, m) be defined as follows. G(d, m) is planar, and 
is depicted in Figure 5 for d = 8 and m = 2. Let I := d/2 
and T := [d/41. G(d, m) is subdivided into m levels, which 
are all equal to each other with the exception of the last one. 
Each level 1, 1 = 1,. . . , m contains 2s + 1 nodes; .s + 1 
of themtare the upper nodes of the level, indicated with 
and the other s are the lower nodes of the 
~~:el,‘i(~d~~ted with pi,. . . ,p’,. Nodes q:, . . . ,gi+i are con- 
nected to p:,...,p\ by the d red edges (qf,~f),(nf+~,~t), 
i = l,...,a. Furthermore, for 1 = 1,. . . ,m - 1 nodes 
1 q,, . . . , of+, are connected to the lower nodes of level I+1 by 
the d blue edges (pt”,qf),(pf”,qf+l), i= l,...,s. Finally, 
the upper nodes of the last level m are connected to each 
other by the s blue edges (q;“,qi”+l), i = 1,. . . ,a. 
G(d,m) also contains d bottom nodes, indicated with 
b I,..., bd, connected to the lower nodes of level 1 by the 
dblueedges(bzi-l,pf),(bzi,p;‘),i=l,..., 8. 
It is easy to check that the following holds 
78 
Figure 3: The subdivision of edge (i, j). 
G(j) 
i 
H(W E) 
Figure 4: Outline of 
degree-l nodes. 
the transformation from MAX-ECD to MAX-ACD - the circles inside each G(h) represent the associated 
G G(i) 
n: 
h bz bn b4 b:, be b7 ba 
Figure 5: The bicolored graph G(d, m) for d = 8 and m = 2. 
79 
Remark S All nodes of G(d,m) with the exception of the 
bottom one8 have the same number of incident red and blue 
edges. Furthermore, G(d, m) contains no alternating cycle, 
and every alternating path connecting a pair of bottom nodes 
is formed by 4m + 1 edges, the (2m + I)-th being a blue edge 
which connects two upper nodes of level m. Therefore, any s 
edge-disjoint alternating paths connecting bottom node pairs 
of G(d, m) form a decomposition of the edge set of G(d, m). 
In order to show the key property of G(d,m), we first 
prove a technical intermediate result. To this purpose, we 
need some definitions. 
The zig-zag path connecting node qi to qL+, in G(d, m), 
1 5 1 <kyL;l _< h 5 s, is the alternating path defined by 
edges (a, ,pi),(d,di), k = l+ l,...,m - 1; (q~,dZ++l); 
(q~+l,P~),(Ph~;:)l k = m,. . . ,l + 1. In Figure 5, a zig- 
zag path can be seen as a path which goes from a level 1 
to the last level, “turning right” at q-nodes and “left” at 
p-nodes; then “turns right” at a q-node of the last level; 
and finally goes from the last level back to level 1, “turning 
left” at q-nodes and “right” at p-nodes. (See e.g. the path 
(q~,p~),(p~,s~),(q~,q~),(~~,p:),(p:,q:) in Figure 5.) 
Consider t edge-disjoint alternating paths PI,. . . , Pt con- 
necting upper nodes of level 1, and a node q: having an in- 
cident edge not contained in PI,. . . , Pt. The zig-zag path 
starting from node qk shifted with respect to 9,. . . , P,, is 
the alternating path defined as follows, having no edge in 
common with PI,. . . , Pt. The path first goes from level 1 to 
the last level m trying to use edges of the form (qf ,pf+‘) 
and (p?,q;k). If edge (qf,pf+‘) or (pf,q;k) is already con- 
tained in some of PI , . . . , P,, the path uses edge (q:, pf!‘_‘: ) or 
(p”,qf+,), respectively. Once a node qy has been reached, 
the path uses edge (47’ q’” 1 i 
P,,... , P and edge q;” ‘l.1’ if t!h’ I O 
IS contained in none of 
,” erwise. Then the path 
goes fro: level m back id live1 1 trying to use edges of 
the form (qf,pFI:) and (pf , q:;,‘), and using edges of the 
form (qf,pk-‘) and (p$,q”-‘), respectively, if this is not 
possible without intersecting paths PI,. . . , P,. The final 
node of the path, say qt, clearly depends on PI,. . . , Pt. 
In Figure 5, a zig-zag path shifted with respect to a set 
of paths can be seen as a path which follows the same 
rules for “turning” as a zig-zag path, as long as it does 
not meet an edge in the other paths; in this latter case, 
the path “turns” on the opposite direction. In Figure 5, 
if 4 = (n:,pT),(p:,q~),(q~,q~),(q~,p~),(p~,q~) and plr = 
(q:,p~),(p~,q~),(q~,q~),(q~,p~),(p~,q~); the zig-zag path 
starting from q: shifted with respect to PI and Pz is (4; ,p’:), 
(P:lq:),(q:,q~),(q~,~),(~,q~). 
The up-rightpath connecting node qi, to qLyk in G(d, m), 
1 < 1 5 m - k; 1 5 h 5 a + 1 - &, is the alte;q+;ing 
path defined by the edges (q~~,++;,p~~~‘),(p~~$’ ‘Qhtl+l ‘. )I 
i=O,... ,k - 1 (see e.g. the path (qi,p:),(p:,qz) in Figure 
5). Similarly, the up-left path connecting node q:, to qLtwkk in 
G(d,m),l<lsm-k;k+l_<h<a+l,isthealternating 
path defined by the edges (qi;‘_I,, pi;‘:,‘_‘, ), (pi;‘:;‘_‘, , q:,+:,+-‘, ), 
i=O , . . . , k - 1 (see e.g. the path (q,!,,p:),(pi,q:) in Figure 
5). 
Claim 3 Consider the a+1 upper nodes of level 1 in G(d, m), 
1 q,, . . . ,qi+, . If m > 1-t r, for any pair i, j, 1 5 i < j 5 a, 
there exist s edge-disjoint alternating path3 connecting node 
paira qk, q:,+ L, h E (1, . , a} \ {i, j}, and either pairs qi,qi; 
Qf+lrP:.tl , or d,4jtI; dt1,9:. 
Proof. If j = i + 1 the proof is trivial, since all node pairs 
can be connected by zig-zag paths. (In fact, if q: has to be 
connected to qf+l = qf+2 and qitL to qj = qf+Ir i.e. to itself, 
the corresponding paths can be immediately derived from 
the zig-zag paths connecting qi to qi+l and qf+I to qi+l.) 
Otherwise, observe that i = 1 and j = u can be assumed 
without loss of generality. Indeed, if i # 1 or j # 8, all 
pairsqi,qi+,,h=l,..., i-landh=j+l,..., s,canbe 
connected by zig-zag paths, and the proof follows from the 
validity of the claim for s’ = j - i + 1, i = 1, and j = 8’. 
Assuming therefore i = 1, j = a and s > 2, we show 
the alternating paths connecting each pair; see also Figure 
6. For the paths connecting q: to either qfi or qfi+l, say PI, 
and the path connecting q: to either q’.+l or q!, say Pz, we 
distinguish between the cases of s even and s odd. 
If s is even, and therefore r = s/2(= d/4), PI is de- 
fined by the up-right path from q: to ql’,;, by the zig-zag 
path from qk:; to q::‘,;, by the up-left path from qk:l to 
!I t’,i, by edge (q’.::,p!.+’ ), and either by edge (pL”,qi) or 
(pit’ ,qfr+,), depending on the case. Symmetrically, Pz is 
defined either by edge (qkt1,p’6+‘) or (qk,p!,“), by edge 
(p’;+‘, qt+‘), by the up-left path from qk” to q;i:, by the 
zig-zag path from q:‘,; to qktr, by the up-right path from 
q:+’ to q:+‘, and by the path (~:“,P:),(P:,&). 
Ifs is odd, and therefore r = (s+1)/2(= (d+2)/4), PI is 
defined by the up-right path from qf to qL$1;, by the zig-zag 
path from q$; to qL:l, by the up-left path from qL:.‘,I; to 
cl ,d++:),(d++:,p% and f’,: , by the path (d~~;“?;l$?+ i 
either by edge (pLt’ or 1 . 
sy 
mmetrically, 4 
is defined either by edge (qi+:,pi”) or (qi,pLt’), by edge 
(Pf;t ’ , q:+’ ), by the up-left path from qL+$’ to qb+‘, by the zig- 
zag path from q!.” to qL+-i, by the up-right path from qk.+-‘, to 
qi”, and by the path (q~t2rp~t2),(p~t2,q~t1),(q~t1,p~t1), 
(PI 7. 
It1 9 42 
In both cases it is easy to check that, for h = 2,. . . , s - 1, 
the zig-zag path starting from node qf, shifted with respect 
to PI and P2, has qktl as final node. Furthermore, all these 
shifted zig-zag paths have no edge in common with each 
other, and therefore, together with PI and Pz, form the 
desired set of paths. c) 
The key property of G(d,m) is shown by the following 
Claim 4 Consider any partition of the bottom nodes of 
G(d,m) into pairs. If m 2 r(s - 1) + 1, the edge set of 
G(d,m) can be decomposed into s alternating patha, each 
connecting a different node pair in the partition. 
Proof. Consider any partition 7 of the bottom nodes of 
G(d, m) into pairs {bt,: b}, {br,, br,}, . . . , {br,-, , bt,}. No- 
tice that 7 can be obtained from the partition Q := 
{bl , bz}, {bs , b4 }, . . . , {bd--l, bd} by exchanging k times, with 
k 5 a - 1, elements in two different pairs. We show by induc- 
tion on k that the paths exist in fact for m 2 rk+l. Observe 
that by using zig-zag paths it is trivial to show that if the 
paths exist for a given value of m, they also do for higher 
values of m. 
If k = 0 and m = 1 the paths clearly exist. Suppose now 
theyexistfork=z-landm=r(.z-l)+l. Weshowthat 
they also do for k = z and m = rz - 1. 
Consider a partition 7 of the bottom nodes, obtainable 
from (5 by z exchanges. By the induction hypothesis, 7 is 
also obtainable by one exchange from a partition u for which 
there exist edge-disjoint alternating paths in G(d, m’), with 
m’ := r(z - 1) + 1, connecting all the corresponding node 
pairs. 
80 
Without loss of generality, let {br,, bt,}, {bt,, bt,} be the 
new pairs in 7 after the exchange, and {bt,, bt,},{bt,,bt,} 
be the corresponding pairs in w. Also, let q:r” and q$m;l be 
the top nodes such that the path connecting bt, to bt, in 
G(d,m’) is defined by an alternating path connecting br, 
to d?‘, the blue edge (q:’ , *:!I ), and an alternating path 
connecting I&~ to br,. Similarly, let I$’ and qzl be the top 
nodes such that the path connecting bt, to bt, in G(d,m’) 
is defined by an alternating path connecting bt, to qy’, the 
blue edge (q~‘,p~,), and an alternating path connecting 
d$ to b rI ; see Figure 6. 
(The only other case that one should take into account 
is that in which the path connecting bt, to bt, is defined by 
an alternating path connecting bl, to gri,, the blue edge 
(p,“;, , q?‘), and an alternating path connecting qr’ to bt, . 
Nevertheless, this latter case can be treated exactly in the 
same way as the one considered.) 
When one goes from G(d, m’) to G(d, m’ + T), i.e. when 
the number of levels is increased by r, Claim 3 shows that 
each blue edge (q,“‘,q$,), c E {l,...,s} \ {a,b} can be 
replaced by alternating paths connecting its endpoints, while 
blue edges (q,“’ , q$, ) and (&‘I, qcI) can be ;placed_py 
alternating paths connecting 4:’ to qf and G+I to a+ L, 
respectively; see Figure 6. 
Therefore, if the number of levels is increased by T, there 
exist paths connecting all the new pairs in the partition. 
This proves the inductive step and hence the claim. 0 
For any even integer d, let m(d) := [d/41 (d/Z - 1) + 1. 
The transformatiom from MAX-ECD to MAX-ACD is 
then the following. Given any Eulerian graph H = (W, E), 
we define a graph G from H by replacing each v E W of 
degree d with the graph G(v) := G(d,m(d)), and then, for 
each (v,u) E E, by connecting two bottom nodes of G(v) 
and G(u) by a red edge. This connection is easily made so 
that all bottom nodes of G(v), 2) E W, have 1 incident red 
edge; see again Figure 4. It is then clear that G has size 
polynomial in that of H, and, by Claim 4, there is a one- 
to-one correspondence between cycles of H and alternating 
cycles of G, as well as between cycle decompositons of H 
and alternating cycle decompositions of G. Finally, G is a 
breakpoint graph since it satisfies the conditions of Theorem 
4, so the proof of Theorem 5 is complete. 
4 The Complexity of MIN-SBR 
A possible way of reading Theorem 2 is the following. Given 
a breakpoint graph G(n) of some permutation r, it would 
be possible to compute c(r) by solving MIN-SBR on x, if 
there existed an optimal cycle decomposition of G(x) made 
up of undirected (with respect to 7r) cycles only. Unfortu- 
nately, this is not always the case. Nevertheless, given any 
breakpoint graph G(r), we show how to construct another 
breakpoint graph G having size bounded by a constant times 
the size of G(n) and such that there is a one-to-one corre- 
spondence between alternating cycles and alternating cycle 
decompositions of G(x) and G. Furthermore, we show how 
to define a permutation 7i such that G(ii) = G and every 
alternating cycle of G is undirected with respect to 7i. In 
this case, d(ii) = b(ir) - c(7i) by Theorem 2, C(T) = c(jT), 
and b(C) is trivially determined. So the construction allows 
the computation of the optimal value of MAX-ACD for any 
generic breakpoint graph G(n), which is clearly NP-hard, by 
solving a suitably-defined MIN-SBR instance, whose sise is 
polynomial (in fact, proportional) to that of G. This leads 
to the main result of this paper, namely 
Theorem 0 MIN-SBR is NP-hard. 
The remainder of this section is devoted to showing the 
polynomial-time transformation from MAX-ACD to MIN- 
SBR mentioned above. Consider a breakpoint graph G(r) = 
(V, R U B) associated with some permutation rr, and let M 
be the Hamiltonian matching of G(a) determined by r (see 
Section 2). 
Construct the breakpoint graph G by applying the fol- 
lowing procedure to G(x), which replaces every red edge of 
G by an alternating path of 5 edges, by subdividing “twice” 
the original edge. 
procedure DOUBLE-SUBDIVISION; 
input: a breakpoint graph G(r) = (V, R U B) and 
an associated Hamiltonian matching M of the nodes 
of degree 2 in G(r); 
output: a breakpoint graph G = (v, fi U 8) and 
an associated Hamiltonian matching A% of the nodes 
of degree 2 in G:, such that there is a one-to-one 
correspondence between alternating cycles and 
alternating cycle decompositions of G and 6, and 
all alternating cycles of G are undirected with 
respect to every permutation ii associated with 
G and fi; 
begin 
initialize v := V, fi := R, B := B, fi := M; 
let n := /VI, and denote the nodes in V by (1,. . . , n}; 
for each T E R do 
begin 
let i and j be the endpoints of r, and e = (4, b) 
any edge of M, where a and b are such that the 
Hamiltonian circuit G(fi U 6f) is the union of 
edge e, a path from 4 to i, edge T, and a path 
from j to b; 
comment: add new nodes n + 1, n + 2, n + 3, 
n + 4 to p’, and replace edge (i, j) with 
the alternating path (i, n + l), (n + 1, n + 2), 
(n+2,7~+3),(n+%n+4),(n+4,j); 
let Q := v U {n + 1,n + 2, n + 3, n + 4}, 
ii := (ri\{(i,j)})U{(i,n+ l),(n+2,n+3), 
tn + 4, j)l, 
B := B U ((71 + 1, n + 2), (n + 3,n + 4)); 
comment: update fi so as to define a 
Hamiltonian matching on the modified 6, 
such that all cycles containing the new red 
edges are undirected with respect to every 
permutation associated with G and &; 
let &f := (&f \ {(a, 6))) U {(n + 1,n + 4), 
let n(n_+3, tn + 3, b)h 
end 
end. 
Figure 7 shows the effect of the replacement of the red edge 
(i, j) on graphs G(A U &f) and G(B U fi). 
The fact that the dimension of G is proportional to that 
of G(x), and there is a one-to-one correspondence between 
alternating cycles and alternating cycle decompositions of 
G(n) and G is clear from the construction: G is obtained 
from G(r) by subdividing “twice” each red edge; see Remark 
1. 
81 
m’+Z 
Q2 
WI’+2 
43 
m’t2 
Q4 
m’tz 
Q5 
- A 
Pz 
b t1 b 1.7 
Figure 6: The inductive step in the proof of Claim 4, for d = 6 (and hence s = 4, T = 2) and a = 1, b = 4 - the thickest lines 
represent the path PI from b,, to bt,, and the remaining thick lines the path P2 from bt, to b,,. 
ntl n-t-2 nt3 n-k4 
i 01110 j -i Q n n b ” \/ 0 j 
F igure 7: Replacement of the red edge (i, j) in procedure DOUBLE~SUBDIVISION - edges in B, l@ and fi, respectively, 
are drawn as lines of increasing thickness. 
82 
Claim 5 The set il? is a Hamiltonian matching of C, and 
every cycle of e is undirected with respect to every permu- 
tation associated with G and &. 
Proof. First of all, at the end of each execution of the for 
each-do loop the updated &f is a Hamiltonian matching of 
the new &. The updating formula of&f corresponds indeed 
to an insertion of the new degree-2 nodes n + 1, n + 2,n + 
3, n + 4 in the previous Hamiltonian circuits &:(R U &?) and 
&(B U fi). In e(fi U i@), edges (i, j) and (a, b) are replaced 
by the paths (i, n + I), (n + 1, n + 4), (n + 4,j) and (a, n + 
2),(n+2,n+3),(n+3,b), respectively, whereasin e(BUfi) 
edge(a,b)isreplaced by thepath (a,n+2),(n+2,n+l),(n+ 
l,n+J),(n+d,n+3),(n+3,b); see Figure 7. 
Every permutation ii associated with 6 and fi defines 
an orientation of the edges in A. In particular, each edge 
is oriented according to the direction it is traversed by the 
Hamiltonian circuit &‘(A u A?) starting from the node corre- 
sponding to 7io, and traversing a red edge first; see Section 
2. 
After the replacement of edge T = (i,j), to every alter- 
nating cycle of G(x) which contains this edge, there corre- 
sponds a cycle of c that contains edges (i, n + I), (n + 1, n + 
2),(n+2,n+3),(n+3,n+4),(n+4,j). Furthermore, with 
respect to every % associated with G and I@, either edge 
(i,n + 1) is oriented from i to n + 1, edge (n + 4,j) from 
n + 4 to j, and edge (n + 2, n + 3) from n + 3 to n + 2, or, 
conversely, edge (i,n + 1) is oriented from n + 1 to i, edge 
(n+4,j) fromj to n+4, and edge (n+2,n+3) from n+2 to 
n+3. This property is mantained throughout the procedure, 
since the new Hamiltonian circuits &(a U a) are obtained 
from the previous ones by replacing edges with paths. 
The above discussion shows that at the end of the proce- 
dure, when all red edges have been replaced, every cycle of 
e is undirected with respect to any permutation associated 
with 6 and A?. 0 
Therefore, by Theorem 2, it is possible to compute the 
optimal solution value of MAX-ACD on G(r) by solving 
the MIN-SBR instance defined by any ii associated with * - 
G and M; namely c(x) = c(+) = b(ii) - d(+). (As one 
might expect, it is also easy to determine the corresponding 
optimal alternating cycle decomposition of G(x) from an 
optimal sequence of reversals needed to sort ii - we skip 
this part since it is not strictly necessary.) This completes 
the proof of Theorem 6. 
5 Conclusions 
We have shown that the problem of sorting a permutation 
by the minimum number of reversals is NP-hard, thus prov- 
ing a conjecture made by Kececioglu and Sankoff [9] a few 
years ago, as soon as the problem came to the attention of 
computer scientists. It is therefore very unlikely that there 
exists a polynomial-time algorithm for the problem, despite 
its signed case was recently shown to be efficiently solvable 
by Hannenhalli and Pevzner [4]. As an immediate conse- 
quence, the problem of sorting word3 by reversals (see e.g. 
[lo]) is NP-hard. This latter problem calls for a shortest 
sequence of reversals transforming a string WI . . . w,,, such 
that wi E (1,. . . , m} for i = 1,. . , n and n > m, into a 
sorted string yr . . . ynwherey,<y;+lfori=l ,..., n,and 
therefore is a clear generalization of MIN-SBR. 
Our onstruction can easily be adapted to the case of 
circular permutations (see e.g. [s]), where also reversals of 
intervals of the type (j,i), j > i, are allowed, transforming 
n-= (Tf, . . . An) into (Ti+j-1 . . . rj+l Rj *i+l a a a “j-1 ?Ti+n 
Ti+n-l . . . xi+j), where all indexes must be taken modulo 
n. 
Other extensions are probably limited to problems hav- 
ing a strong relationship with some graph decomposition 
problem of the same flavour as MAX-ACD. We do not know 
whether this is the case, e.g., for the problem of sorting a 
permutation by prefix reversals (also known as the pancake 
flipping problem), studied by Gates and Papadimitriou [3]. 
Acknowledgments 
I am grateful to Giuseppe Lancia for helpful discussions on 
the subject. I also thank Sridhar Hannenhalli for pointing 
out reference [7], and Rob Irving and David Christie for 
sending me the paper. 
References 
ill 
PI 
131 
[41 
[51 
161 
[71 
PI 
[91 
[lOI 
V. Bafna and P.A. Pevener, “Genome Rearrangements 
and Sorting by Reversals”, SIAM Journal on Comput- 
ing 25 (1996) 272-289. 
A. Caprara, G. Lancia and S.K. Ng, “A Column- 
Generation Based Branch-and-Bound Algorithm for 
Sorting by Reversals”, Working Paper (1995), DEIS, 
University of Bologna. 
W.H. Gates and C.H. Papadimitriou, “Bounds for 
Sorting by Prefix Reversals”, Discrete Mathematics 27 
(1979) 47-57. 
S. Hannenhalli and P.A. Pevener, “Transforming Cab- 
bage into Turnip (Polynomial Algorithm for Sorting 
Signed Permutations by Reversals)“, Proceedings of the 
27th Annual ACM Symposium on the Theory of Com- 
puting (1995) 178-187, ACM Press. 
S. Hannenhalli and P.A. Pevzner, “Reversals Do Not 
Cut Long Strips”, Technical Report CSE-95-006, De- 
partment of Compter Science and Engineering, The 
Pennsylvania State University, February 1995. 
I. Holyer, “The NP-Completeness of Some Edge- 
Partition Problems”, SIAM Journal on Computing 10 
(1981) 713-717. 
R.W. Irving and D.A. Christie, “Sorting by Reversals: 
a Conjecture of Kececioglu and Sankoff”, Working Pa- 
per (1996), Dept. of Computer Science, University of 
Glasgow. 
J. Kececioglu and D. Sankoff, “Efficient Bounds for 
Oriented Chromosome Inversion Distance”, Proceed- 
ing3 of 5th Annual Symposium on Combinatorial Pat- 
tern Matching, Lecture Notes in Computer Science 807 
(1994) 307-325, Spinger Verlag. 
J. Kececioglu and D. Sankoff, “Exact and Approxi- 
mation Algorithms for Sorting by Reversals, with Ap- 
plication to Genome Rearrangement”, Algorithmica 13 
(1995) 180-210. 
P.A. Pevaner and M.S. Waterman, “Open Combina- 
torial Problems in Computational Molecular Biology”, 
Proceeding8 of the 3rd Israel Symposium on the The- 
ory of Computing and Systems (1995) 158-172, IEEE 
Computer Society Press. 
83 
