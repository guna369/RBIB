56 IEEE/ACM TRANSACTIONS ON COMPUTATIONAL BIOLOGY AND BIOINFORMATICS, VOL. 5, NO. 1, JANUARY 2008
A ð1:5 þ Þ-Approximation Algorithm for Unsigned Translocation Distance
Yun Cui, Lusheng Wang, Daming Zhu, and Xiaowen Liu

Abstract—Genome rearrangement is an important area in computational biology and bioinformatics. The translocation operation is one of the popular operations for genome rearrangement. It was proved that computing the unsigned translocation distance is NP-hard. In this paper, we present a ð1:5 þ Þ-approximation algorithm for computing qtheﬃﬃﬃﬃﬃuﬃﬃﬃnﬃﬃﬃsigned translocation distance that improves upon the best known 1.75-ratio. The runtime of our algorithm is Oðn2 þ ð4Þ1:5 logð4Þ24Þ, where n is the total number of genes in the genome.
Index Terms—Genome rearrangement, unsigned translocation, approximation algorithms.
Ç

1 INTRODUCTION
WITH the development of fast sequencing techniques, large-scale DNA molecules are investigated with respect to the relative order of genes in them. Contrary to the traditional alignment approach, genome rearrangements are based on the comparison of gene orders and the evolution of gene families. Genome rearrangement has become an important area in computational biology and bioinformatics. Although the rearrangement is very complicated, there are three basic operations for genome rearrangement: reversal, translocation, and transposition. Hannenhalli and Pevzner gave the first polynomial time algorithm for the signed reversal distance problem [6].
A chromosome X ¼ x1; x2; . . . ; xp is a sequence of genes, where each gene xi is represented by an integer. A gene xi has a direction. We use a signed integer to represent a directed gene and use an unsigned integer to represent a gene with unknown direction. Throughout this paper, each xi in a signed chromosome is a signed integer, and each xi in an unsigned chromosome is an unsigned integer. A signed genome is a set of signed chromosomes, and an unsigned genome is a set of unsigned chromosomes. We assume that each gene appears exactly once in a genome. Here, the orders of genes in chromosomes matter, and the order of chromosomes in the genome does not matter.
For two unsigned chromosomes X ¼ x1; x2; . . . ; xm and Y ¼ y1; y2; . . . ; yn in a genome, a translocation swaps the segments in the chromosomes and generates two new chromosomes. If we cut X at gene xið1 < i mÞ and cut Y at gene yjð1 < j nÞ, we can have one of the following two sets of new chromosomes:
. Y. Cui and D. Zhu are with the School of Computer Science and Technology, Shandong University, 73 Jingshi Road, Ji’nan, P.R. China, 250061. E-mail: yingying_0100@hotmail.com, dmzhu@sdu.edu.cn.
. L. Wang and X. Liu are with the Department of Computer Science, City University of Hong Kong, 83 Tat Chee Avenue, Kowloon, Hong Kong. E-mail: cswang@cityu.edu.hk, liuxw@cs.cityu.edu.hk.
Manuscript received 17 Mar. 2006; revised 27 Sept. 2006; accepted 30 Mar. 2007; published online 1 June 2007. For information on obtaining reprints of this article, please send e-mail to: tcbb@computer.org, and reference IEEECS Log Number TCBB-0081-0306. Digital Object Identifier no. 10.1109/TCBB.2007.70216.
1545-5963/08/$25.00 ß 2008 IEEE

. S e t 1 : x1; . . . ; xiÀ1, yj; . . . ; yn a n d y1; . . . ; yjÀ1, xi; . . . ; xm.
. S e t 2 : x1; . . . ; xiÀ1, yjÀ1; . . . ; y1 a n d yn; . . . ; yj, xi; . . . ; xm.
This implies that we can treat each unsigned chromosome Y in two ways, Y ¼ y1; y2; . . . ; yn or Y ¼ yn; ynÀ1; . . . ; y2; y1.
For two signed chromosomes X ¼ x1; x2; . . . ; xm and Y ¼ y1; y2; . . . ; yn in a genome, a translocation cutting at gene xið1 < i mÞ and gene yjð1 < j nÞ leads to one of the following two sets of chromosomes:
. S e t 1 : x1; . . . ; xiÀ1, yj; . . . ; yn a n d y1; . . . ; yjÀ1, xi; . . . ; xm.
. Set 2: x1; . . . ; xiÀ1, ÀyjÀ1; . . . ; Ày1 and Àyn; . . . ; Àyj, xi; . . . ; xm.
Again, we can treat each signed chromosome Y in two ways, Y ¼ y1; y2; . . . ; yn or Y ¼ Àyn; ÀynÀ1; . . . ; Ày2; Ày1.
Here, none of the four segments cut by the translocation operation is empty. Throughout this paper, we work on this restricted version. The translocation distance between two (signed/unsigned) genomes is the minimum number of translocations used to transform one genome into the other. We use dsðA; BÞ and dðA; BÞ to represent the signed translocation distance and unsigned translocation distance, respectively.
The signed translocation problem was first studied in [7]. Lots of algorithms have been developed since then [5], [10], [p1]ﬃ.ﬃﬃﬃﬃﬃRﬃﬃﬃeﬃﬃﬃcﬃ ently, Ozery-Flato and Shamir gave an Oðn3=2 logðnÞÞ algorithm in [9]. The translocation distance computation for unsigned genomes was first studied by Kececioglu and Ravi [7]. The problem was proved to be NP-hard by Zhu and Wang in [11]. Kececioglu and Ravi gave a ratio-2 approximation algorithm for computing the translocation distance of unsigned genomes [7]. Cui et al. gave a ratio -1.75 approximation algorithm [4].
In this paper, we present a ratio-1:5 þ  approximation
algorithm for computing the translocation distance of
unsigned genomes, where  > 0 is any conqstﬃaﬃﬃﬃnﬃﬃﬃtﬃ.ﬃﬃﬃﬃFor ratio 1:5 þ , our algorithm runs in Oðn2 þ ð4Þ1:5 logð4Þ24Þ time,
Published by the IEEE CS, CI, and EMB Societies & the ACM

CUI ET AL.: A ð1:5 þ Þ-Approximation ALGORITHM FOR UNSIGNED TRANSLOCATION DISTANCE

57

where n is the total number of genes in the genome. This

improves upon the ratio 1.75 algorithm with runtime Oðn2Þ.

For the 1:5 þ  algorithm, to reach raqtioﬃ-ﬃﬃ1ﬃﬃ.ﬃﬃ7ﬃﬃ5ﬃﬃﬃ, we have to set



¼

1 4

,

and

the

constant

term

ð4Þ1:5

logð4Þ24 is less than

9,000,000 and takes a few seconds on a PC. Similar to the

ratio-1.75 approximation algorithm, the basic idea is to

design a cycle decomposition algorithm to give a sign to

each gene and then compute the signed distance.
The new ideas. We show in Section 3 that to achieve ratio 1:5 þ , we have to look after the number of 2-cycles cA2 and the number of a special kind of minimal subpermutations (minSP s), the 1 À 2 minSP s, sA2 in the cycle decomposition algorithm. (See Lemma 4.) In our new algorithm,
we remove all RS-MSPs (a special kind of 1 À 2minSP s). In the process, we can always ensure that when sA2 is reduced by one, cA2 is reduced by at most one. In many cases, when sA2 is reduced, cA2 is not reduced. Thus, the value of cA2 À sA2 in our new algorithm is greater than that in the ratio -1.75
algorithm. Therefore, we can get a better ratio based on
Hannenhalli’s formula in Lemma 2.

2 SIGNED AND UNSIGNED TRANSLOCATION
The unsigned translocation distance can be computed with three steps: 1) try all possible ways to assign signs to the genes, 2) compute the distance for the pair of signed genomes, and 3) choose the minimum distance among all possible settings of signs. To design approximation algorithms, we actually design approximation algorithms to assign signs to genes. First, let us review the computation method for signed genomes that was originally created by Hannenhalli [5].
2.1 Signed Translocation
Given signed genomes A and B, the breakpoint graph GsðA; BÞ can be obtained as follows: For every chromosome X ¼ x1; x2; . . . ; xn of A, replace each xi with an ordered pair ðlðxiÞ; rðxiÞÞ of vertices. If xi is positive, then ðlðxiÞ; rðxiÞÞ ¼ ðxti; xhi Þ; if xi is negative, then ðlðxiÞ; rðxiÞÞ ¼ ðxhi ; xtiÞ. The vertices (genes) rðxiÞ and lðxiþ1Þ (xi and xiþ1) are neighbors in A. The neighbors in B are defined analogously. For two vertices u and v, if they are neighbors in A, then we use a black edge to connect them; if they are neighbors in B, then we use a gray edge to connect them.
Example 1. Let the two genomes be

Fig. 1. (a) The breakpoint graph GsðA; BÞ for the signed case, where A ¼ fð1; 2; 3Þ; ð4; À6; À5; 7Þg, and B ¼ fð1; 2; 3Þ; ð4; 5; 6; 7Þg. (b) The breakpoint graph GðA; BÞ for the unsigned case, where A ¼ fð1; 2; 3Þ; ð4; 6; 5; 7Þg, and B ¼ fð1; 2; 3Þ; ð4; 5; 6; 7Þg.
Let X ¼ x1; x2; . . . ; xp be a chromosome in A. A subpermutation ðSP Þ is an interval xi; xiþ1; . . . ; xiþl in X containing at least three genes such that there is another interval of the same length yj; yjþ1; . . . ; yjþl in a chromosome Y of B satisfying
fjxij; jxiþ1j; . . . ; jxiþljg ¼ fyj; yjþ1; . . . ; yjþlg;
xi ¼ yj; xiþl ¼ yjþl;
and the permutation xi; xiþ1; . . . ; xiþlÀ1; xiþl is not identical to the permutation yj; yjþ1; . . . ; yjþlÀ1; yjþl. Here, xi and xiþl are the two ending genes of the SP . A minSP is an SP not containing any other SP . The structure of minSP is defined as a framed common interval in [2]. The properties of framed common intervals are used in the analysis of sorting signed permutations by reversals in [2] and [3]. By the definition of SP , we have the following lemma, originally in [4]:
Lemma 1 [4]. Let I ¼ xi; xiþ1; . . . ; xjÀ1; xj be an SP in GsðA; BÞ, then GsðA; BÞ cannot have the gray edge ðrðxiÞ; lðxjÞÞ.
The translocation distance for signed genomes is closely related to the number of cycles and the number of minSP s. If all minSP s in GsðA; BÞ are in an SP , say, I, and the total number of minSP s is even, then I is an even isolation. Clearly, there is at most one even isolation in GsðA; BÞ.
Let n be the number of genes and N be the number of chromosomes for two signed genomes A and B. Let c be the number of cycles and s be the number of minSP s in GsðA; BÞ. The remaining index f is defined as follows: 1) f ¼ 1 if s is odd, 2) f ¼ 2 if there is an even isolation, and 3) f ¼ 0 otherwise. Lemma 2, originally in [5], gives the formula to compute the translocation distance dsðA; BÞ.
Lemma 2 (Hannenhalli’s formula) [5].
dsðA; BÞ ¼ n À N À c þ s þ f:

A ¼ fð1; 2; 3Þ; ð4; À6; À5; 7Þg and B ¼ fð1; 2; 3Þ; ð4; 5; 6; 7Þg:
Both A and B contain two chromosomes. See Fig. 1a.
Without loss of generality, we assume that each chromosome in B is a segment of consecutive positive integers, for example, i; i þ 1; i þ 2; . . . ; j À 1; j. Every vertex (except the ones at the two ends of a chromosome) in GsðA; BÞ is incident with one black and one gray edge. Therefore, GsðA; BÞ can be uniquely decomposed into cycles. A cycle containing exactly i black (gray) edges is called an i-cycle. A cycle is long if it is not a 1-cycle.

The spignﬃﬃﬃeﬃﬃdﬃﬃﬃﬃﬃﬃtﬃﬃranslocation distance can be computed in Oðn1:5 logðnÞÞ time [9].
2.2 Unsigned Translocation
Consider unsigned genomes A and B. For every chromosome X ¼ x1; x2; . . . ; xn of A, xi and xiþ1 are neighbors in A. The neighbors in B are defined analogously. To define the breakpoint graph GðA; BÞ in the unsigned case, we use a vertex to represent a gene. Two vertices are connected with a black edge if they are neighbors in A, and two vertices are connected with a gray edge if they are neighbors in B.

58 IEEE/ACM TRANSACTIONS ON COMPUTATIONAL BIOLOGY AND BIOINFORMATICS, VOL. 5, NO. 1, JANUARY 2008

Fig. 2. The cases for one cycle decomposition.

Example 2. Let the two genomes be

A ¼ fð1; 2; 3Þ; ð4; 6; 5; 7Þg and B ¼ fð1; 2; 3Þ; ð4; 5; 6; 7Þg:

Both A and B contain two chromosomes. See Fig. 1b.

Note that every vertex is incident with either one black

edge and one gray edge or two black edges and two gray

edges. Therefore, the cycle decompositions for GðA; BÞ are

not unique. Once we have a cycle decomposition for the

breakpoint graph of two unsigned genomes, we can get a

unique breakpoint graph of two signed genomes, that is, we

can assign a sign to each gene in the genomes. Without loss

of generality, we assume that all genes in B are positive.

Therefore, all gray edges in the signed breakpoint graph have the form ðih; ði þ 1ÞtÞ. Given a cycle decomposition of

the unsigned breakpoint graph, we assign the two ending

genes in each chromosome in A as follows: If the ending

gene is at the left ends or at the right ends in both A and B,

then the gene is positive in A; otherwise, it is negative in A.

A positive gene xi corresponds to a pair of vertices ðxti; xhi Þ,

and a negative gene xi corresponds to a pair of vertices

ðxhi ; xti edges

Þ. For ðih; ði

the rest of the genes xi, we can use the gray þ 1ÞtÞ (starting with the ending genes) to

determine if gene xi corresponds to the pair of vertices ðxti; xhi Þ or ðxhi ; xtiÞ. Therefore, we can determine the sign of xi. Let us look at Fig. 1b. Suppose the cycle decomposition
of the first genome is fð1; 2Þ; ð2; 1Þg and fð2; 3Þ; ð3; 2Þg. The

genes in the chromosome in B are all positive fþ1; þ2; þ3g.

All the ending genes are also positive in A. Therefore,

gene 1 corresponds to ð1t; 1hÞ. In cycle fð1; 2Þ; ð2; 1Þg, the

gray edge ð1h; 2tÞ is connected to the black edge ð2t; 1hÞ.

Thus, gene 2 corresponds to the pair ð2t; 2hÞ, and the sign of

gene 2 should be positive in A.

3 AN EQUIVALENT TARGET FOR OBTAINING Ratio-1:5 þ 
To approximate the translocation distance of the unsigned genomes A and B, we always compute the cycle decomposition of GðA; BÞ to get the assignment of signs to A and B. Let A and B be two unsigned genomes and GðA; BÞ be the unsigned breakpoint graph. Let GosptðA; BÞ be a signed breakpoint graph corresponding to an optimal (among all possible ways of assigning signs to genes) cycle decomposition of GðA; BÞ such that the unsigned distance dðA; BÞ ¼ n À N À copt þ sopt þ fopt, where copt, sopt, and fopt are the number of cycles, the number of minSP s, and the remaining index in GosptðA; BÞ, respectively. The following

lemma shows that keeping the maximum number of 1-cycles is a good strategy:
Lemma 3. We modify GosptðA; BÞ as follows: If two vertices in GðA; BÞ are connected by a black edge and a gray edge, then we reassign the signs of the two genes to obtain a 1-cycle. Assume that cÃ, sÃ, and fÃ are the number of cycles, the number of minSP s, and the remaining index in the resulting breakpoint graph GÃsðA; BÞ, respectively. We have dðA; BÞ ¼ n À N À copt þ sopt þ fopt ¼ n À N À cÃ þ sÃ þ fÃ.
Proof. Consider two vertices xi and xiþ1 that are neighbors in both genomes, and xi and xiþ1 are not in a 1-cycle in GosptðA; BÞ. After reassigning the signs of the two genes to obtain a 1-cycle, we get a new cycle decomposition G0sðA; BÞ. Let c0, s0, and f0 be the number of cycles, the number of minSP s, and the remaining index in G0sðA; BÞ, respectively. We will prove that
n À N À copt þ sopt þ fopt ! n À N À c0 þ s0 þ f0;
that is, G0sðA; BÞ is also an optimal cycle decomposition. We consider two cases:
1. Only one sign of xi and xiþ1 is changed. Without loss of generality, assume that the sign of xi is changed. Figs. 2a and 2e show the breakpoint graphs before and after changing the sign of xi. After changing the sign of xi, the black edges ðrðxiÀ1Þ; lðxiÞÞ and ðrðxiÞ; lðxiþ1ÞÞ are in two different cycles. Thus, we have c0 ¼ copt þ 1. Moreover, the number of minSP s is not changed or is decreased by one. When the number of minSP s is not changed, the remaining index is also not changed. When the number of minSP s is decreased by one, the remaining index is increased by at most one. Thus, we have sopt þ fopt ! s0 þ f0 and n À N À copt þ sopt þ fopt ! n À N À c0 þ s0 þ f0.
2. The signs of both xi and xiþ1 are changed. Since we have to change the signs of both xi and xiþ1 to get the 1-cycle, the gray edge ðlðxiÞ; rðxiþ1ÞÞ must be in GosptðA; BÞ. Thus, the two black edges ðrðxiÀ1Þ; lðxiÞÞ and ðrðxiþ1Þ; lðxiþ2ÞÞ are in one cycle before changing the signs. Three subcases arise. (See Figs. 2b, 2c, and 2d.) After changing signs, we get the breakpoint graphs illustrated in Figs. 2f, 2g, and 2h, respectively. In Fig. 2f, the number of cycles are increased by two, that is, c0 ¼ copt þ 2. The number of minSP s is

CUI ET AL.: A ð1:5 þ Þ-Approximation ALGORITHM FOR UNSIGNED TRANSLOCATION DISTANCE

59

unchanged or is increased by one. If the number of

minSP s is not changed, the remaining index is also

not changed. If the number of minSP s is increased

by one, the remaining index is increased by at most

one. Thus, s0 þ f0 sopt þ fopt þ 2. For the cases illustrated in Figs. 2g and 2h, we have s0 ¼ sopt and f0 ¼ fopt. Obviously, c0 ! copt. Therefore, n À N À copt þ sopt þ fopt ! n À N À c0 þ s0 þ f0 for this case.

If we reassign the signs of genes to get one more

1-cycle, the inequality n À N À copt þ sopt þ fopt ! n À N À c0 þ s0 þ f0 always holds. Therefore, the lemma

holds.

tu

Let GAs ðA; BÞ be the signed breakpoint graph obtained by our algorithm. Let cAi be the number of i-cycles, sA the

number of minSP s, and fA the remaining index in

GAs ðA; BÞ. The number of translocations required by the

approximation algorithm Lemma 2, dAðA; BÞ ¼ n À

is N

ÀdPeni!o1tecdAi

as þ sA

dAðA; þ fA,

BÞ. By where

fA 2 f0; 1; 2g. A minSP is a 1 À 2minSP if the cycles

contained in the minSP are either 2-cycles or 1-cycles. Let

sA2 denote the number of 1 À 2minSP s in GAs ðA; BÞ. Let cÃi be the number of i-cycles in GÃsðA; BÞ. From Lemma 3,

X dðA; BÞ ! n À N À cÃi þ sÃ:

ð1Þ

i!1

Lemma 4. Assume that cA1 ¼ cÃ1, that is, GAs ðA; BÞ has all possible 1-cycles. If

cA2

À

sA2

!

cÃ2

À 3sÃ 2

;

ð2Þ

then

dA ðA ;B ÞÀfA dðA;BÞ

1:5.

Proof. Let
dA ðA ;B ÞÀfA dðA;BÞ

Á

¼

3 2

dðA;

BÞ

1:5:

À

dAðA;

BÞ

þ

fA.

If

Á ! 0,

then

Á

¼

3 2

dðA;

BÞ

À

dAðA;

BÞ

þ

fA

!

!3 2

X n À N À cÃ1 À cÃ2 À cÃi þ sÃ
i!3

!

X

À n À N À cA1 À cAi þ sA þ fA þ fA

i!2 !

!

1 2

X n À N À cÃ1 À 2cÃ2 À 3cÃi
i!3

À

cÃ2 2

þ

3 2

sÃ

þ

X
i!2

cAi

À

sA:

ð3Þ

The first inequality is from (1). The last inequality is

from cA1 ¼ cÃ1. Note that n À N is the total number of

bnlÀackNe¼dgPesi!in1 iGcÃiÃs.ðTAh;uBsÞ,.

By (3)

the definition becomes

of

cÃi ,

we

have

Á

!

1 2

X ði
i!4

À

3ÞcÃi

À

cÃ2 2

þ

3 2

sÃ

þ

X
i!2

cAi

À

sA

!

!

À cÃ2 2

þ 3 sÃ 2

þ

X cAi
i!2

À

sA

X since ði À 3ÞcÃi ! 0 :
i!4

To prove Á ! 0, we need to prove

cA2

þ

X cAi
i!3

À

sA

!

cÃ2 2

À

3 sÃ: 2

ð4Þ

iT-hcyeTcrhleeefonrfoeu,rm(4ib)!erb3eocfoismthesesAmcÀA2insÀA2S.PsA2sT!hcuoc2snÃ2 ,tÀaPi32nsiiÃn!.3gcAiat!lesaAstÀosnA2tue.

4 THE APPROXIMATION ALGORITHM
The ratio-1.75 approximation algorithm in [4] can give a cycle decomposition of the unsigned breakpoint graph that contains the maximum number of 1-cycles and a big number of 2-cycles. For our new algorithm, we also need to do this. Let us first review the ratio-1.75 cycle decomposition algorithm.
4.1 The Ratio-1.75 Cycle Decomposition Algorithm
To get a cycle decomposition, we keep the maximum number of 1-cycles. That is, if two vertices are joined by a black edge and a gray edge in GðA; BÞ (that is, they are neighbors in both genomes), then assign proper signs to the two genes to obtain the 1-cycle.
After obtaining the maximum number of 1-cycles, we want to get 2-cycles as many as possible in polynomial time.
Note that the signs of some genes have been fixed in order to get the maximum number of 1-cycles. A match graph FAB of a breakpoint graph GðA; BÞ is defined as follows: 1) for every black edge in GðA; BÞ with at least one end not assigned a sign, we create a vertex of FAB, and 2) for every two vertices of FAB (representing two black edges in GðA; BÞ), we create an edge connecting them in FAB if the two black edges in GðA; BÞ can form a 2-cycle.
Let M denote a maximum match of FAB. (There may exist more than one maximum match. Here, any maximum match will do.) Every edge in M represents a 2-cycle in GðA; BÞ. By the construction of FAB, two 2-cycles in M cannot share any black edge of GðA; BÞ. However, they may share a gray edge in GðA; BÞ. In that case, the two 2-cycles cannot be kept in the cycle decomposition simultaneously. A 2-cycle in M is isolated if it does not share any gray edge with any other 2-cycle. Otherwise, the 2-cycle is related. Since a 2-cycle has two gray edges, it is related to at most two 2-cycles.
A related component U consists of related 2-cycles C1; C2; . . . ; Ck, where Ci is related to CiÀ1 ð2 i kÞ, and every 2-cycle in U is not related to any 2-cycle not in U. Consider two related 2-cycles Ci and CiÀ1 sharing a gray edge. The two cycles Ci and CiÀ1 also share the genes at the two ends of the gray edge. Thus, 1) if the two black edges in Ci are in the same chromosome, then so do the two black edges in CiÀ1, and 2) if the two black edges in Ci are in two chromosomes, then the two black edges in CiÀ1 are also in the same two chromosomes. The process can be repeated to include more cycles. Therefore, a related component involves at most two chromosomes and can only be one of the four types shown in Fig. 3.
The ratio-1.75 cycle decomposition algorithm contains three steps: 1) keep all 1-cycles in the breakpoint graph, 2) keep all the isolated 2-cycles and alternatively select

60 IEEE/ACM TRANSACTIONS ON COMPUTATIONAL BIOLOGY AND BIOINFORMATICS, VOL. 5, NO. 1, JANUARY 2008

Fig. 3. The four cases of related components containing k 2-cycles. (a) and (b) The component is in a single chromosome. (c) and (d) Two chromosomes are involved in the component.

2-cycles for every related component, and 3) arbitrarily do the decomposition for the remaining vertices.
In the new ratio-ð1:5 þ Þ algorithm, we modify step 2 so that we can remove RS-MSPs (a special kind of 1 À 2minSP s).
4.2 The RS-MSP
Note that every minSP contains at least one long cycle. A simple minSP ðS-MSPÞ is a minSP containing one 2-cycle as its unique long cycle and containing at least one 1-cycle. The two gray edges in the 2-cycle must be “twisted” since by Lemma 1, ðrðxiÞ; lðxjÞÞ cannot be a gray edge for the two ending genes xi and xj. In Fig. 4a, the segment of genes xi; . . . ; xj forms a simple minSP .
Let Is ¼ xi; xiþ1; . . . ; xjÀ1; xj be an S-MSP in GsðA; BÞ. A removable simple minSP ðRS-MSPÞ Is is a simple minSP such that the two black edges ðrðxiÀ1Þ; lðxiÞÞ and ðrðxjÞ; lðxjþ1ÞÞ framing Is belong to a twisted cycle and at least one of the gray edge ðrðxiÀ1Þ; rðxjÞÞ or ðlðxiÞ; lðxjþ1ÞÞ is in the twisted cycle. The gray edge ðrðxiÀ1Þ; rðxjÞÞ or ðlðxiÞ; lðxjþ1ÞÞ is the key gray edge of Is. The twisted cycle is called the removable cycle of Is. Fig. 4a gives an example.
Given unsigned genomes A and B, a candidate removable simple minSP ðCRS-MSPÞ is defined as an interval Ic ¼ xi; xiþ1; . . . ; xiþl containing at least four genes in a chromosome of A such that 1) there is another interval of the same length yj; yjþ1; . . . ; yjþl in a chromosome Y of B satisfying xi ¼ yj; xiþl ¼ yjþl and xiþk ¼ yjþlÀk ð1 k l À 1Þ and 2) at least one of the gray edges ðxiÀ1; xiþlÞ or ðxi; xiþlþ1Þ exists. Any CRS-MSP can be turned into an RS-MSP by

1) assigning proper signs to all genes in it to turn it into an S-MSP and 2) assigning a proper sign to xiÀ1 or xiþlþ1 such that at least one of the key gray edges ðrðxiÀ1Þ; rðxiþlÞÞ or ðlðxiÞ; lðxiþlþ1ÞÞ is in the signed breakpoint graph. An RS-MSP also corresponds to a CRS-MSP in the unsigned breakpoint graph. An RS-MSP is an S-MSP too. For convenience, we also call the unique 2-cycle in the S-MSP, the unique 2-cycle in the CRS-MSP.
Lemma 5. Given an RS-MSP Is ¼ xi; xiþ1; . . . ; xjÀ1; xj, if we change the signs of xi and xj, then we have the following:

1. I1 ¼ Àxi; xiþ1; . . . ; xjÀ1; Àxj is no longer a minSP . 2. The number of minSP s is not increased. 3. The number of i-cycles in the new breakpoint graph
remains the same.

Proof. Cases 1 and 2 of Lemma 5 were proved in [4]. Now,

we prove case 3. If Is is an RS-MSP, then GsðA; BÞ

contains at least one of gray edges ðrðxiÀ1Þ; rðxjÞÞ and

ðlðxiÞ; lðxjþ1ÞÞ. Changing the signs of xi and xj creates at

least one of gray edges ðrðxiÀ1Þ; lðxjÞÞ and ðrðxiÞ; lðxjþ1ÞÞ

and creates two new cycles C1 and C2. (See Fig. 4b).

Assume that the removable cycle C is an i-cycle ði ! 2Þ.

By definition, at least one of the gray edges ðrðxiÀ1Þ; rðxjÞÞ

and ðlðxiÞ; lðxjþ1ÞÞ is in C. Thus, one of C1 and C2 is a

2-cycle, and the other is an i-cycle. (See Figs. 4a and 4b.)

Therefore, case 3 of Lemma 5 holds.

tu

4.3 The New Cycle Decomposition Algorithm
There are six steps for the new algorithm. The first two steps of the new cycle decomposition algorithm are 1) keep all 1-cycles and 2) compute the maximum match M as described in Section 4.1.

Fig. 4. (a) The RS-MSP. (b) The breakpoint graph after the RS-MSP is removed by changing the signs of the genes.

4.3.1 Creating RS-MSPs
After all 1-cycles are kept in our algorithm, we look for the isolated 2-cycles in M that can be the unique 2-cycles for simple minSP s. The 2-cycle is a twisted 2-cycle such that all the black edges between the two black edges of the 2-cycle

CUI ET AL.: A ð1:5 þ Þ-Approximation ALGORITHM FOR UNSIGNED TRANSLOCATION DISTANCE

61

Fig. 5. The two conflicting 2-cycles (a) C1 and (b) C2.

are involved in 1-cycles. It is easy to see that it takes at most Oðn2Þ time to identify all the isolated 2-cycles that can be the
unique 2-cycles of some simple minSP s. Once the unique
2-cycle of a simple minSP is identified, we obtain a simple
minSP . Let Is ¼ xi; xiþ1; . . . ; xj be a simple minSP . If there is a
gray edge ðxiÀ1; xjÞ or a gray edge ðxi; xjþ1Þ in GðA; BÞ, then we can certainly create gray edge ðrðxiÀ1Þ; rðxjÞÞ or gray edge ðlðxiÞ; lðxjþ1ÞÞ in the signed breakpoint graph so that Is becomes an RS-MSP. However, when creating gray edge ðrðxiÀ1Þ; rðxjÞÞ or ðlðxiÞ; lðxjþ1ÞÞ, some 2-cycles in M might be destroyed. For example, if ðlðxiÞ; lðxjþ1ÞÞ is created in the breakpoint graph, then the two 2-cycles C1 and C2 in Fig. 5a cannot be kept in the same breakpoint graph anymore. Similarly, if ðrðxiÀ1Þ; rðxjÞÞ is created, then the two 2-cycles C1 and C2 in Fig. 5b cannot be kept anymore.
A 2-cycle C in M is conflicting with the key gray edge ðrðxiÀ1Þ; rðxjÞÞ or ðlðxiÞ; lðxjþ1ÞÞ if keeping the key gray edge ðrðxiÀ1Þ; rðxjÞÞ or ðlðxiÞ; lðxjþ1ÞÞ in the breakpoint graph must destroy C. A conflicting cycle C can only be C1 and C2
as shown in Figs. 5a and 5b. Thus, a conflicting cycle must contain one of the two black edges ðrðxiÀ1Þ; lðxiÞÞ and ðrðxjÞ; lðxjþ1ÞÞ. A 2-cycle is conflicting with an RS-MSP if it is conflicting with the key gray edge of the RS-MSP.
Consider a related component U. (See Fig. 3.) In
Figs. 3a and 3b, there are two ending black edges ðxi; xiþ1Þ and ðxjþkÀ1; xjþkÞ at the ends of the component U. In Figs. 3c and 3d, there are four ending black edges ðxi; xiþ1Þ, ðxiþkÀ1; xiþkÞ, ðyj; yjþ1Þ, and ðyjþkÀ1; yjþkÞ at the ends of the two segments of U. A 2-cycle in U is at the
end of U if C contains at least one of the ending black
edges.

Lemma 6. If a related component in M contains a conflicting 2-cycle, it must be at the end of the component.

Proof. Consider a 2-cycle conflicting with an

RS-MSP Is ¼ xi; xiþ1; . . . ; xjÀ1; xj. (See Fig. 5.) The unique

2-cycle C of Is is an isolated 2-cycle that is not in any

related component. As discussed before, a conflicting

2-cycle must contain one of the black edges ðrðxiÀ1Þ; lðxiÞÞ

and ðrðxjÞ; lðxjþ1ÞÞ. Note that the unique 2-cycle C

contains the two black edges ðrðxiÞ; lðxiþ1ÞÞ and

ðrðxjÀ1Þ; lðxjÞÞ, which are adjacent to ðrðxiÀ1Þ; lðxiÞÞ and

ðrðxjÞ; lðxjþ1ÞÞ, respectively. Thus, such a conflicting

2-cycle must be at the end of the component.

tu

Lemma 6 implies that a related component in M has at most two conflicting 2-cycles.
In our algorithm, we use Procedure CreatingRemove to create RS-MSPs (see Fig. 6). Note that the RS-MSP will not be created if we have to destroy two conflicting 2-cycles in order to keep a gray edge ðrðxiÀ1Þ; rðxjÞÞ or ðlðxiÞ; lðxjþ1ÞÞ.

Fig. 6. The procedure CreatingRemove to create RS-MSPs.

4.3.2 Removing RS-MSPs
Lemma 5 shows that if we remove an RS-MSP by changing the signs of the genes at the ends of the RS-MSP, the number of i-cycles remains the same in the new breakpoint graph for any i ! 1. Thus, in our approximation algorithm, we will remove RS-MSPs to get a better cycle decomposition.

Lemma 7. All RS-MSPs created by Procedure CreatingRemove (Fig. 6) can be removed by changing the signs of the genes at the ends of the RS-MSPs.

Proof. We consider two consecutive RS-MSPs Il and Ir.

By the definition of RS-MSP, there is at least one black

edge between Il and Ir. If there are more than one

black edge between Il and Ir, removing one RS-MSP

will not affect the other. Thus, we only have to consider

the case where there is one black edge (called the

MBE) between Il and Ir. Let Il ¼ xl; xlþ1; . . . ; xjÀ2; xjÀ1

and Ir ¼ xj; xjþ1; . . . ; xrÀ1; xr. The MBE is ðrðxjÀ1Þ; lðxjÞÞ.

There are two cases: 1) the two key gray edges

ðrðxlÀ1Þ; rðxjÀ1ÞÞ and ðlðxjÞ; lðxrþ1ÞÞ incident to the two

ends of the MBE are not crossing (see Fig. 7a), and

2) the two key gray edges ðrðxrÞ; rðxjÀ1ÞÞ and

ðlðxjÞ; lðxlÞÞ incident to the two ends of the MBE are

crossing (see Fig. 7b). In case 1, after removing one

RS-MSP, say, Il, Ir is still removable. (See Fig. 7c.) Consider case 2. First, there is no way to have more

than two consecutive RS-MSPs having MBEs and cross-

ing key gray edges. In Fig. 7b, the gray edge in the

removable cycle of Ir must have one end as rðxrÞ. Thus,

we cannot extend the third RS-MSP as case 2 with

crossing key gray edges on the right of Ir. Symmetrically,

we cannot extend the third RS-MSP on the left of Il. Now, we show that there is no pair of input genomes A

and B that lead to case 2 with two consecutive RS-MSPs Il and Ir, as shown in Fig. 7b. The key gray edges ðlðxlÞ; lðxjÞÞ and ðrðxjÀ1Þ; rðxrÞÞ in Fig. 7b indicate that xl and xj are

neighbors in B, and xjÀ1 and xr are neighbors in B. This

will make the chromosome containing segments Il and Ir

in B become a circle instead of a string.

tu

The cycle decomposition algorithm for two unsigned genomes A and B is given in Fig. 8.

62 IEEE/ACM TRANSACTIONS ON COMPUTATIONAL BIOLOGY AND BIOINFORMATICS, VOL. 5, NO. 1, JANUARY 2008

Fig. 7. (a) Two consecutive RS-MSPs with the MBE and noncrossing key gray edges. (b) Two consecutive RS-MSPs with the MBE and crossing key gray edges. (c) The breakpoint graph after the left RS-MSP in (a) is removed.

A 2-cycle in M selected in step 4 is a selected 2-cycle. All related 2-cycles and isolated 2-cycles in G5sðA; BÞ are selected 2-cycles, and the other long cycles in G5sðA; BÞ are called arbitrary cycles. In the following, let GAs ðA; BÞ be the signed breakpoint graph obtained after steps 1-6.
Based on Procedure CreatingRemove (Fig. 6), every RS-MSP created in step 3 has at most one conflicting 2-cycle.
Lemma 8. If creating an RS-MSP Is destroys a conflicting cycle in M, then the removable cycle of Is is either an i-cycle with i ! 3 or an arbitrary 2-cycle.
Proof. If Is has a removable 2-cycle

C ¼ rðxiÀ1Þ; lðxiÞ; lðxjþ1Þ; rðxjÞ; rðxiÀ1Þ;

then C cannot be a related 2-cycle. (See Fig. 3.) In Figs. 3c

and 3d, two chromosomes are involved, and thus, the

conclusion is clearly true. In Fig. 3a, the two gray edges

in the 2-cycles are parallel, but the two gray edges in C

are twisted. In Fig. 3b, all the gray edges in the

component are twisted with each other. However, in

the breakpoint graph G5sðA; BÞ, a minSP Is is inside C, so the component contains only one 2-cycle and cannot

be extended anymore.

Moreover, C cannot be an isolated 2-cycle. If C is an

isolated 2-cycle, C is also a selected 2-cycle containing

black edges ðrðxiÀ1Þ; lðxiÞÞ and ðrðxjÞ; lðxjþ1ÞÞ. In this

case, Is has no conflicting 2-cycle, since a conflicting

2-cycle of Is must contain one of the two black edges.

Therefore, the removable cycle of Is is either an i-cycle

with i ! 3 or an arbitrary 2-cycle.

tu

4.4 The Approximation Algorithm From Lemmas 2 and 3,

dsðA;

BÞ

¼

n

À

N

À

cÃ

þ

sÃ þ X

fÃ

¼ n À N À cÃ1 À cÃi þ sÃ þ fÃ:

i!2

Fig. 8. The cycle decomposition algorithm.

Note that n À N is the number of black edges in the

signed breakpoint graph GÃsðA; BÞ. Now, we can reduce the number of black edges (number of genes) in GÃsðA; BÞ by viewing a segment of consecutive genes in a

chromosome in which any two consecutive genes in the

segment are in the same 1-cycle as one gene (unless there

are two chromosomes left). The new breakpoint graph is

denoted as GÃsÃðA; BÞ. By doing this, the number of black

edges have

Pini!2GcÃiÃsÃðA0;:B5ðÞn

becomes À N À cÃ1Þ

nÀN since

À cÃ1. each

oMf otrheeovPer,i!2wceÃi

cycles must contain at least two black edges in GÃsÃðA; BÞ.

Thus,

dsðA; BÞ ! 0:5ðn À N À cÃ1Þ þ sÃ þ fÃ ! 0:5ðn À N À cÃ1Þ:

That is, in GÃsÃðA; BÞ, the number of black edges is at most

2dsðA; BÞ. In other words, the number of genes in GÃsðA; BÞ

that have not be assigned a sign is at most 2dsðA; BÞ.

For

any

 ! 0,

set

k

¼

2 

.

If

dsðA; BÞ

k, t h e n

cÃ1 ! n À N À 2k. When dsðA; BÞ k, we can get an optimal

solution by trying at most 22k ways to assign signs to at

most 2k genes and then use the algorithm for the signed

case to solve the problem. The total time required is

Oðn þ ð2kÞ1:5pﬃlﬃoﬃﬃgﬃﬃﬃðﬃ2ﬃﬃﬃkﬃﬃÞﬃﬃ22kÞ ¼ O

n

þ

41:5

sﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ

log

4

24 

! :



If cÃ1 < n À N À 2k, then dsðA; BÞ > k; we do steps 2 and 3 to get an approximate solution. The whole algorithm is shown
in Fig. 9.

Theorem 1. The runtime of Algorithm 1 is

O

n2

þ

41:5

sﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ

log

4

24 

! :



qﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ Proof. Step 1 takes Oðn þ ð4Þ1:5 logð4Þ24Þ time. GðA; BÞ and
FAB can be constructed in Oðn2Þ time. A maximum
1
match M of FAB can be found in OðjV jjEj2Þ time, where
jV j is the number of vertices, and jEj is the number of

CUI ET AL.: A ð1:5 þ Þ-Approximation ALGORITHM FOR UNSIGNED TRANSLOCATION DISTANCE

63

the definition of ca2, the total number of 2-cycles in

G5sðA; BÞ

is

jM jþro þz 2

À

Áro

À

Áre

À

Áz

þ

ca2 .

tu

5.2 Analysis of 1 À 2minSP s
A minSP I ¼ xi; xiþ1; . . . ; xjÀ1; xj contains a cycle C if all vertices of C are in

Fig. 9. The approximation algorithm for unsigned sorting by translocations.

edges [8]. Since FAB contains at most n vertices and OðnÞ edges, M can be found in Oðn32Þ time. Constructing G5sðA; BÞ and GAs ðA; BÞ reqpuﬃiﬃrﬃﬃeﬃﬃsﬃﬃﬃﬃﬃOﬃﬃ ðn2Þ time. The algorithm in [9] requires Oðn1:5 logðnÞÞ time to compute an
optimal sequence of translocations for the signed case. Thus, the total time required in steps 2 anqd ﬃﬃ3ﬃﬃﬃﬃiﬃsﬃﬃﬃﬃﬃOðn2Þ. Therefore, the total runtime is Oðn2 þ ð4Þ1:5 logð4Þ24Þ. tu

5 ANALYSIS OF THE PERFORMANCE RATIO
In this section, we will show that the performance ratio of the algorithm is 1:5 þ  for any  ! 0. We will focus on inequality (2).

5.1 Analysis of 2-Cycles

Assume that a maximum match M of FAB contains
z isolated 2-cycles. A related component of M is an odd
(even) component if it has an odd (even) number of related
2-cycles. Let ro denote the number of odd related
components, Áro the number of odd related components
that each contains at least one conflicting 2-cycle that are not kept in G5sðA; BÞ, and Áre the number of even related components that each contains two conflicting 2-cycles that are not kept in G5sðA; BÞ. Let Áz denote the number of conflicting isolated 2-cycles that are not kept in G5sðA; BÞ. Let ca2 be the number of arbitrary 2-cycles in G5sðA; BÞ.

Lemma 9. The total number of 2-cycles in GAs ðA; BÞ

is

cA2

¼

jM jþro þz 2

À

Áro

À

Áre

À

Áz

þ

ca2 ,

where

there

are

jM jþro þz 2

À

Áro

À

Áre

À

Áz

selected

2-cycles.

Proof. From Lemma 5, we know that the number of 2-cycles
in both GAs ðA; BÞ and G5sðA; BÞ is the same. From Lemma 6, if a conflicting 2-cycle is in a related
component, it can only be a related 2-cycle at the end of a
related component. For an odd component with at least one conflicting 2-cycle that is not kept in G5sðA; BÞ, the number of selected 2-cycles is reduced by one. Thus, the
total number of reduced selected 2-cycles in this case is
Áro. For an even component containing two conflicting
2-cycles, the number of selected 2-cycles is reduced by
one. The total number of reduced selected 2-cycles in this
case is Áre. There are also Áz isolated conflicting 2-cycles that are not kept in G5sðA; BÞ. Therefore, the total number of reduced selected 2-cycles is Áro þ Áre þ Áz.

If there is no conflicting 2-cycle, we can keep

z

isolated

2-cycles

and

jM jþro Àz 2

related

2-cycles.

The

total

of

z

and

jM jþro Àz 2

is

jM

jþro 2

þz

.

Therefore,

G5sðA; BÞ

contains

jM jþro 2

þz

À

Áro

À Áre

À Áz

selected

2-cycles.

By

frðxiÞ; lðxiþ1Þ; rðxiþ1Þ; . . . ; lðxjÀ1Þ; rðxjÀ1Þ; lðxjÞg:
A cycle C is outside I if no vertex of C is in frðxiÞ; lðxiþ1Þ; rðxiþ1Þ; . . . ; lðxjÀ1Þ; rðxjÀ1Þ; lðxjÞg.
A minSP is a 1 À 2 isolated minSP if the cycles contained in the minSP are either isolated 2-cycles or 1-cycles. Let sm be the number of 1 À 2 isolated minSP s with at least two isolated 2-cycles and ss be the number of 1 À 2 isolated minSP s with exactly one isolated 2-cycle in G5sðA; BÞ. By the definitions, all S-MSPs in G5sðA; BÞ are 1 À 2 isolated minSP s with exactly one isolated 2-cycle, and the number of S-MSPs in G5sðA; BÞ is also ss. The total number of 1 À 2 isolated minSP s in G5sðA; BÞ is sm þ ss. Let sa denote the number of 1 À 2minSP s in G5sðA; BÞ, each of them contains at least one arbitrary 2-cycle.
Proposition 1. If a minSP of G5sðA; BÞ contains a related 2-cycle, then the minSP contains at least one arbitrary cycle.

The proof of the proposition is exactly the same as that of Lemma 3 in the full version of [4]. By Proposition 1, we immediately have the following lemma:
Lemma 10. The total number of 1 À 2minSP s in G5sðA; BÞ is sm þ ss þ sa.

Consider the ss S-MSPs in G5sðA; BÞ. They can be classified into three groups: 1) There are sn S-MSPs that
do not have the key gray edge. This kind of S-MSPs do not
correspond to any CRS-MSPs in GðA; BÞ. 2) There are st S-MSPs in G5sðA; BÞ that correspond to CRS-MSPs in the unsigned breakpoint graph and are not transformed into
RS-MSPs in Procedure CreatingRemove (Fig. 6). 3) There are sr S-MSPs in G5sðA; BÞ that correspond to CRS-MSPs in the unsigned breakpoint graph and are transformed into
RS-MSPs. The sr S-MSPs are removed in step 6 of the cycle
decomposition algorithm. Therefore, we have

ss ¼ sn þ st þ sr:

ð5Þ

Consider the sr RS-MSPs in G5sðA; BÞ. Let s3r denote the number of RS-MSPs with removable i-cycles for i ! 3. Removing the s3r RS-MSPs with removable i-cycles for i ! 3 will not create a new 1 À 2minSP . Moreover, removing an
RS-MSP with a removable 2-cycle will create a new 1 À 2minSP . There are s3r 1 À 2 minSP s in G5sðA; BÞ that are not in GAs ðA; BÞ. Thus,

sA2 ¼ sm þ ss þ sa À s3r :

ð6Þ

Consider the RS-MSPs in G5sðA; BÞ that are removed in step 6 of the cycle decomposition algorithm, and their
removable cycles are 2-cycles. By Lemma 8, the removable
2-cycles can only be isolated 2-cycles or arbitrary 2-cycles. Let sir denote the number of such RS-MSPs with removable

64 IEEE/ACM TRANSACTIONS ON COMPUTATIONAL BIOLOGY AND BIOINFORMATICS, VOL. 5, NO. 1, JANUARY 2008

isolated 2-cycles and sar be the number of such RS-MSPs with removable arbitrary 2-cycles. We have

sr ¼ s3r þ sar þ sir:

ð7Þ

5.3 Important Inequalities
Let zin be the number of isolated 2-cycles in minSP s in G5sðA; BÞ and zout be the number of isolated 2-cycles outside any minSP in G5sðA; BÞ. By definitions, z ¼ Áz þ zin þ zout. We use the following lemma to bound zout:
Lemma 11. zout ! st þ sir. (The proof is given in Appendix A.)

By the definitions of sm and ss, zin ! 2sm þ ss. From Lemma 11 and (5) and (7), we have

z ! 2sm þ 2ss À sn À sar À s3r þ Áz:

ð8Þ

Lemma 12. s3r ! Áro þ 2Áre þ Áz À sar .

Proof. Note that M contains at least Áro þ 2Áre þ Áz conflicting 2-cycles destroyed by Procedure Creating

Remove (Fig. 6). Thus, there are at least

Áro þ 2Áre þ Áz RS-MSPs created by destroying the conflicting 2-cycles. By Lemma 8, the number of

RS-MSPs destroying conflicting 2-cycles is not greater

than s3r þ sar . Thus, s3r þ sar ! Áro þ 2Áre þ Áz. The

lemma holds.

tu

The following lemma set up the connection between the parameters cÃ2 and sÃ (defined in Lemma 3) and the parameters jMj and sn in the approximation algorithm:
Lemma 13. jMj À cÃ2 ! sn À sÃ, where jMj is the size of the maximum match in FAB. (The proof is given in Appendix B.)

5.4 The Performance Ratio

Now, we are ready to show that the performance ratio is 1:5 þ .

Theorem 2. If fðAÞ ¼ 0, then the performance ratio of Algorithm 1 is 1.5.

Proof. By step 1 of the cycle decomposition algorithm,

cA1 cA2

¼ À

cÃ1. sA2

From ! cÃ2À3sÃ
2

Lemma . In fact,

4, we only we show a

have to stronger

prove that inequality .

From Lemma 9 and (6), we have

cA2

À

sA2

¼

jM j

þ ro 2

þ

z

À

Áro

À

Áre

À

Áz

þ

ca2

À ðsm þ ss þ sa À s3rÞ:

ð9Þ

Replacing z in (9) with the right side of (8), we get

cA2

À

sA2

!

jMj

þ

ro

þ

ð2sm

þ

2ss þ 2

Áz

À

sn

À

sar

À

s3r Þ

À ðÁro þ Áre þ ÁzÞ þ ca2 À ðsm þ ss þ sa À s3rÞ

¼ jMj þ ro þ Áz À sn À sar þ s3r 2

À ðÁro þ Áre þ ÁzÞ þ ca2 À sa:

ð10Þ

From Lemma 12 and (10), we have

cA2

À

sA2

!

jM j

À

sn

þ

ro

þ

Áz

þ

ðÁro 2

þ

2Áre

þ

ÁzÞ

À

2sar

À ðÁro þ Áre þ ÁzÞ þ ca2 À sa

¼

jMj À 2

sn

þ

ro

À Áro 2

þ

ca2

À

sa

À

sar

!

jMj À 2

sn

þ

ca2

À

sa

À

sar :

ð11Þ

The last inequality is from the fact that ro ! Áro. Since

G5sðA; BÞ has at least sa arbitrary 2-cycles in minSP s and

sar arbitrary 2-cycles as removable cycles of some

RS-MSPs cA2 À sA2 !

,jMcj2Àa2 s!n .

sa þ sar holds. By Lemma 13,

Thus, cA2 À sA2

( !

11)
cÃ2 ÀsÃ 2

be .

co

mes tu

Theorem 3. The performance ratio of Algorithm 1 is 1:5 þ .

Proof.

For

any

 ! 0,

set

k

¼

2 

.

Assume

that

dðA; BÞ

k.

The number of all possible 1-cycles in GðA; BÞ is no less

than n À N À 2k. We can find the optimal solution in

step 1 of the algorithm. Otherwise, the translocation

distance dðA; BÞ ¼ t > k. In this case, we use steps 2 and

3 to compute an approximation solution with distance x.

From Theorem 2, we have x 1:5t þ fA 1:5t þ 2, where fA is the remaining index in GAs ðA; BÞ. Thus, the performance ratio of the algorithm is

x 1:5t þ 2 1:5 þ 2 1:5 þ 2 1:5 þ :

tt

tk

ut

APPENDIX A
PROOF OF LEMMA 11
Proof. By definition, G5sðA; BÞ contains sir isolated 2-cycles as removable 2-cycles of some RS-MSPs. Thus, zout ! sir. Consider the st S-MSPs in G5sðA; BÞ that correspond to CRS-MSPs in the unsigned breakpoint graph and are
not transformed into RS-MSPs in Procedure Creating
Remove (Fig. 6). We want to show that such st S-MSPs correspond to st isolated 2-cycles outside minSP s that cannot be removable 2-cycles. Therefore, we can conclude that zout ! st þ sir.
First, consider the case that st ¼ 1. Let I ¼ xi; xiþ1; . . . ; xjÀ1; xj denote such an S-MSP. The unique 2-cycle in I is C ¼ rðxiÞ; lðxiþ1Þ; lðxjÞ; rðxjÀ1Þ; rðxiÞ. Without loss of generality, we assume that GðA; BÞ contains gray edge ðxi; xjþ1Þ. (See Fig. 5a.) The reason that I is not transformed into RS-MSP in Procedure CreatingRemove (Fig. 6) is that the key gray edge ðlðxiÞ; lðxjþ1ÞÞ has two conflicting 2-cycles in M. Let C1 and C2 be the two conflicting 2-cycles, where C1 ¼ rðxiÀ1Þ; lðxiÞ; rðxjþ1Þ; lðxjþ2Þ; rðxiÀ1Þ, and C2 contains black edge ðrðxjÞ; lðxjþ1ÞÞ. (See Fig. 5a.) A conflicting 2-cycle can be a related 2-cycle or an isolated 2-cycle. Now, we prove that C2 is an isolated 2-cycle. First, the cycle C2 cannot be related to C since C is an isolated 2-cycle. Suppose C2 is related to C1. The two gray edges ðlðxiÞ; rðxjþ1ÞÞ and ðrðxiÀ1Þ; lðxjþ2ÞÞ in C1 are parallel. If C1 and C2 are in a related

CUI ET AL.: A ð1:5 þ Þ-Approximation ALGORITHM FOR UNSIGNED TRANSLOCATION DISTANCE

65

component, it must be of the same type as that in Fig. 3a. However, the black edge in C2 that is not ðrðxjÞ; lðxjþ1ÞÞ cannot be in the range ½xiÀ1; xjþ2. (See Fig. 5a.) Thus, C1 and C2 cannot be in a related component. The case in Fig. 5b is symmetric. Therefore, when st ¼ 1, zout ! st þ sir. The 2-cycle C2 in Figs. 5a and 5b is called the key 2-cycle. Clearly, any key 2-cycle cannot be a removable cycle for any RS-MSP.
Now, consider the case that st ! 2. Let Ia ¼ xi; xiþ1; . . . ; xjÀ1; xj and Ib ¼ yi; yiþ1; . . . ; yjÀ1; yj be two of such st S-MSPs. Let Ca and Cb be the key 2-cycles of Ia and Ib, respectively. If Ca and Cb are not identical, then we can conclude that there are at least st isolated 2-cycles outside minSP s and zout ! st þ sir.
In the rest of the proof, we will show that Ca and Cb
are not identical. For the S-MSP Ia, without loss of generality, assume
that xj > xi. For the S-MSP Ib, let ymin be the minimum of yi and yj, and ymax be the maximum of yi and yj. Ia contains all genes with their values in ½xi; xj, and Ib contains all genes with their values in ½ymin; ymax.
We will show that if Ca and Cb are identical, then ½ymin; ymax ' ½xi; xj. This contradicts the fact that Ia and Ib are two distinct S-MSPs.
Suppose Ca and Cb are identical. Let CÃ denote the identical 2-cycle. CÃ contains two black edges, where one black edge is ðrðxiÀ1Þ; lðxiÞÞ or ðrðxjÞ; lðxjþ1ÞÞ, and the other is ðrðyiÀ1Þ; lðyiÞÞ or ðrðyjÞ; lðyjþ1ÞÞ. Some cases arise. We assume that Ia and Ib are on the same chromosome. The cases that Ia and Ib are on different chromosomes are the same. The following fact is crucial and is repeatedly used in the proof.
Fact 1. Ia contains all genes with their values in the segment ½xi; xj, and every gene appears only once.
Case 1. CÃ contains two gray edges that are twisted. The possible locations of CÃ are illustrated in Figs. 10a, 10c, and 10e. Another case is to reverse the direction of the chromosome in Fig. 10c and is symmetric. In Fig. 10a, the existence of gray edges ðlðxiÞ; rðxjþ1ÞÞ implies that xjþ1 ¼ xi À 1 or xjþ1 ¼ xi þ 1. From fact 1, we can conclude that only xjþ1 ¼ xi À 1 holds. The existence of gray edge ðrðxjÞ; rðyiÀ1ÞÞ indicates that yiÀ1 ¼ xj þ 1 or yiÀ1 ¼ xj À 1. Again, Fact 1 implies that only yiÀ1 ¼ xj þ 1 holds. Similarly, by gray edge ðlðyiÀ1Þ; rðyjÞÞ, we have yj ¼ yiÀ1 þ 1 or yj ¼ yiÀ1 À 1. However, it is impossible that yj ¼ yiÀ1 À 1 ¼ xj. (It contradicts the fact that each gene appears once.) Therefore, we have yj ¼ yiÀ1 þ 1 ¼ xj þ 2. By gray edge ðlðxjþ1Þ; lðyiÞÞ, we have
yi ¼ xjþ1 À 1 ¼ xi À 2:
(It i s impossible t hat yi ¼ xjþ1 þ 1 ¼ xi.) Thus, ymin ¼ yi ¼ xi À 2, and ymax ¼ yj ¼ xj þ 2. Therefore, ½ymin; ymax ' ½xi; xj. The cases in Figs. 10c and 10e are left for readers.
Case 2. CÃ contains two gray edges that are parallel. The possible locations of CÃ are illustrated in
Figs. 10b, 10d, and 10f. Another case is to reverse the
chromosome in Fig. 10d and is symmetric.
In Fig. 10b, from gray edges ðlðxiÞ; rðxjþ1ÞÞ and ðrðxjÞ; lðyiÞÞ, we have xjþ1 ¼ xi À 1 and yi ¼ xj þ 1. From gray edge ðlðxjþ1Þ; rðyiÀ1ÞÞ, we have

Fig. 10. Six invalid cases that the key 2-cycles of two RS-MSPs are identical.

yiÀ1 ¼ xjþ1 À 1 ¼ xi À 2:

(It is impossible that yiÀ1 ¼ xjþ1 þ 1 ¼ xi.) From gray

edge ðlðyiÀ1Þ; rðyjÞÞ, we have yj ¼ yiÀ1 À 1 ¼ xi À 3.

(It is impossible that yj ¼ yiÀ1 þ 1 ¼ xjþ1.) Thus,

ymin ¼ yj ¼ xi À 3, and ymax ¼ yi ¼ xj þ 1. Therefore,

½ymin; ymax ' ½xi; xj. The cases in Figs. 10d and 10f

are left for readers.

tu

APPENDIX B

PROOF OF LEMMA 13

Proof. Since GÃsðA; BÞ contains all possible 1-cycles, by the construction of FAB, jMj À cÃ2 ! 0. Thus, we only have to consider the case, where sn À sÃ ! 0. By the definitions of
sn and sÃ, GAs ðA; BÞ contains at least ðsn À sÃÞ S-MSPs that are not in GÃsðA; BÞ, and those S-MSPs do not

correspond to any CRS-MSPs either.

Let Is ¼ xi; xiþ1; . . . ; xjÀ1; xj deno te one of the

sn À sÃS-MSPs. Since no S-MSP in GÃsðA; BÞ corresponds

to Is, the 2-cycle rðxiÞ; lðxiþ1Þ; lðxjÞ; rðxjÀ1Þ; rðxiÞ does not

exist in GÃsðA; BÞ. Note that all 1-cycles between the black

edges ðrðxiÞ; lðxiþ1ÞÞ and ðrðxjÀ1Þ; lðxjÞÞ are kept, and

GÃsðA; BÞ must contain at least one of gray edges

ðlðxiÞ; rðxjÀ1ÞÞ and ðlðxiþ1Þ; rðxjÞÞ. Three cases arise:

Case ðlðxiþ1Þ;

1 (Fig. rðxjÞÞ is

11a). not

iðnlðGxiÃsÞð;Arð;xBjÀÞ1. ÞSÞ inisceinalGl ÃsthðAe ;

BÞ, but 1-cycles

between the two black edges ðrðxiÞ; lðxiþ1ÞÞ and

ðrðxjÀ1Þ; lðxjÞÞ are kept, gray edge ðlðxiþ1Þ; lðxjÞÞ must

be in GÃsðA; BÞ. Thus, the two black edges ðrðxiÞ; lðxiþ1ÞÞ

66 IEEE/ACM TRANSACTIONS ON COMPUTATIONAL BIOLOGY AND BIOINFORMATICS, VOL. 5, NO. 1, JANUARY 2008

Fig. 11. Each of black edges ðrðxiÞ; lðxiþ1ÞÞ and ðrðxjÀ1Þ; lðxjÞÞ is in an i-cycle ði ! 3Þ.

and ðrðxjÀ1Þ; lðxjÞÞ are connected by the gray edge

ðlðxiþ1Þ; lðxjÞÞ. Since gray edge ðlðxiÞ; rðxjÀ1ÞÞ (not gray edge ðrðxiÞ; rðxjÀ1ÞÞ) is in GÃsðA; BÞ, the two black edges ðrðxiÞ; lðxiþ1ÞÞ and ðrðxjÀ1Þ; lðxjÞÞ must be in an i-cycle,

with i ! 3.

Case 2 (Fig. 11b). ðlðxiþ1Þ; rðxjÞÞ ðlðxiÞ; rðxjÀ1ÞÞ is not in GÃsðA; BÞ. It

is is

in GÃsðA; BÞ, symmetric to

but the

case 1, shown in Fig. 11a.

Case 3 (Figs. 11c and 11d). Both gray edges

ðlðxiÞ; rðxjÀ1ÞÞ and ðlðxiþ1Þ; rðxjÞÞ are in GÃsðA; BÞ. In this case, black edges ðrðxiÞ; lðxiþ1ÞÞ and ðrðxjÞ; lðxjþ1ÞÞ

are in cycle C, and black edges ðrðxiÀ1Þ; lðxiÞÞ and ðrðxjÀ1Þ; lðxjÞÞ are in cycle C0. C and C0 might be

merged into one cycle (see Fig. 11c) or might be two

different cycles (see Fig. 11d). By definition, GðA; BÞ

does not contain gray edges ðxiÀ1; xjÞ and ðxi; xjþ1Þ.

Thus, GÃsðA; BÞ has ðrðxiÞ; lðxjþ1ÞÞ, and

no gray edges ðrðxiÀ1Þ; lðxjÞÞ therefore, both C and C0

and are

i-cycles, with i ! 3. Thus, the two black edges

ðrðxiÞ; lðxiþ1ÞÞ and ðrðxjÀ1Þ; lðxjÞÞ must be in one or

two i-cycles, with i ! 3.

Changing at least one of the signs of xi and xj in GÃsðA; BÞ to obtain an S-MSP can only destroy the cycle(s) containing at least one of black edges

ðrðxiÞ; lðxiþ1ÞÞ and ðrðxjÀ1Þ; lðxjÞÞ. This will increase the

number of 2-cycles by at least one. Thus, we can change

the ðsn

signs of the À sÃÞ S-MSPs.

genes in GÃsðA; BÞ and By doing this, the number

obtain the of 2-cycles

is increased by at least ðsn À sÃÞ. Therefore, we have

jMj ! cÃ2 þ sn À sÃ. The lemma holds.

tu

ACKNOWLEDGMENTS
The authors are in debt to the referees for improving the presentation of the paper. Lusheng Wang is supported by a grant from the Research Grants Council of the Hong Kong Special Administrative Region, China [Project No. CityU 120905], and was the corresponding author. Daming Zhu is supported by NSFC 60573024.

REFERENCES
[1] A. Bergeron, J. Mixtacki, and J. Stoye, “On Sorting by Translocation,” J. Computational Biology, vol. 13, no. 2, pp. 567-578, 2006.
[2] A. Bergeron, S. Heber, and J. Stoye, “Common Intervals and Sorting by Reversals: A Marriage of Necessity,” Bioinformatics, vol. 18, no. Suppl. 2, pp. S54-S63, 2002.
[3] A. Bergeron, “A Very Elementary Presentation of the Hannenhalli-Pevzner Theory,” Discrete Applied Math., vol. 146, no. 2, pp. 134145, 2005.
[4] Y. Cui, L. Wang, and D. Zhu, “A 1.75-Approximation Algorithm for Unsigned Translocation Distance,” Proc. 16th Int’l Symp. Algorithms and Computation (ISAAC ’05), X. Deng and D.-Z. Du, eds., pp. 392-401, 2005. Full version is accepted for publication in J. Computer and System Sciences.

[5] S. Hannenhalli, “Polynomial-Time Algorithm for Computing

Translocation Distance between Genomes,” Proc. Sixth Ann.

Symp. Combinatorial Pattern Matching (CPM ’95), Z. Galil and

E. Ukkonen, eds., pp. 162-176, 1995.

[6] S. Hannenhalli and P. Pevzner, “Transforming Cabbage into

Turnip: Polynomial Algorithm for Sorting Signed Permutations by

Reversals,” Proc. 27th Ann. ACM Symp. Theory of Computing (STOC

’95), pp. 178-189, 1995.

[7] J. Kececioglu and R. Ravi, “Of Mice and Men: Algorithms for

Evolutionary Distances between Genomes with Translocation,”

Proc. Sixth Ann. ACM-SIAM Symp. Discrete Algorithms (SODA

’95)), K. Clarkson, ed., pp. 604-613, 1995.

[8] L. Lova´sz and M.D. Plummer, “Matching Theory,” Annals of

Discrete Math., vol. 29, 1986.

pﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ

[9] M. Ozery-Flato and R. Shamir, “An Oðn3=2 logðnÞÞ Algorithm for

Sorting by Reciprocal Translocations,” Proc. 17th Ann. Symp.

Combinatorial Pattern Matching (CPM ’06), M. Lewenstein and

G. Valiente, eds., pp. 258-269, 2006.

[10] L. Wang, D. Zhu, X. Liu, and S. Ma, “An Oðn2Þ Algorithm for

Signed Translocation,” J. Computer and System Sciences, vol. 70,

pp. 284-299, 2005.

[11] D. Zhu and L. Wang, “On the Complexity of Unsigned

Translocation Distance,” Theoretical Computer Science, vol. 352,

no. 1, pp. 322-328, 2006.

Yun Cui received the PhD degree in computer science from Shandong University, China, in 2007. Her research interests include algorithms and bioinformatics.

Lusheng Wang received the PhD degree from McMaster University, Hamilton, Ontario, Canada, in 1995. Currently, he is an associate professor in the Department of Computer Science, City University of Hong Kong. His research interests include algorithms, bioinformatics, and computational biology. He is a member of the IEEE.
Daming Zhu received the BS degree in computer science and technology from the University of Science and Technology of China in 1987, the MS degree in computer software from Shandong University in 1990, and the PhD degree from the Institute of Computing Technology, Chinese Academy of Sciences, in 1999. Currently, he is a professor at Shandong University, China. His research interests are algorithms, computational complexity, and computational biology.
Xiaowen Liu received the BS and ME degrees in computer science from Shandong University, China, in 1996 and 2004, respectively. He is currently a PhD candidate in the Department of Computer Science, City University of Hong Kong. His research interests include bioinformatics and algorithms.
. For more information on this or any other computing topic, please visit our Digital Library at www.computer.org/publications/dlib.

