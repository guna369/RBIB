Deciding knowledge in security protocols
under (many more) equational theories
Martı´n Abadi
Computer Science Department, University of California at Santa Cruz, USA
Ve´ronique Cortier
Loria, INRIA & CNRS, Nancy, France
Abstract
In the analysis of security protocols, the knowledge of at-
tackers is often described in terms of message deducibility
and indistinguishability relations. In this paper, we pursue
the study of these two relations. We establish general de-
cidability theorems for both. These theorems require only
loose, abstract conditions on the equational theory for mes-
sages. They subsume previous results for a syntactically de-
fined class of theories that allows basic equations for func-
tions such as encryption, decryption, and digital signatures.
They also apply to many other useful theories, for exam-
ple with blind digital signatures, homomorphic encryption,
XOR, and other associative-commutative functions.
1 Introduction
The design and analysis of security protocols typically
relies on reasoning about the knowledge of honest protocol
participants and attackers. In formal approaches, two main
kinds of definitions have been given for this knowledge.
• Many formal methods define knowledge in terms of
deduction (e.g., [12, 16, 17, 20]).
Given some messages φ and another message M , one
asks whether M can be computed (“deduced”) from φ.
For example, whether an attacker can obtain a session
key from a set of messages and some prior knowledge
can be cast as a deduction problem.
• Some formal methods complement deduction with an
indistinguishability equivalence relation (e.g., [2, 3]).
Indistinguishability is also prominent in computational
approaches to cryptography (e.g., [11, 15]).
Given two lists of messages φ and ψ, one asks whether
they can be distinguished. For example, φ and ψ may
be transcripts of the messages for two sessions of a
protocol, each with a different value for a parame-
ter, and then the equivalence would express that the
value of this parameter is not revealed by session tran-
scripts. The choice of this value may remain secret
even though an attacker may be able to compute every
possible value for the parameter—as would be the case
if the parameter is a boolean or a password drawn from
a small dictionary.
In both cases, messages are represented by formal expres-
sions, and correspondingly the computations allowed are
“black-box” symbolic manipulations on those expressions.
These symbolic manipulations are sometimes as powerful
as probabilistic polynomial-time computations on bitstrings
(e.g., [4]). In both cases, too, the definitions concern obser-
vations on messages at a particular point in time. Accord-
ingly, the equivalence relation is sometimes called static
equivalence, and the deduction relation should perhaps be
called static deduction. Despite the static character of these
relations, they are useful in analyzing the dynamics of pro-
tocols and attacks. In particular, proof methods for safety
properties often rely on deduction, and process equivalences
can be reduced to static equivalences plus standard bisimu-
lation conditions.
In this paper we pursue the study of deduction and static
equivalence. Both of these relations depend on the under-
lying equational theory that governs the function symbols
that appear in expressions, in particular function symbols
that represent cryptographic operations. Our goal is to ob-
tain characterizations and decidability results that hold for
a wide class of equational theories. We aim to support the
standard uses of function symbols for representing encryp-
tion, digital signatures, and the like. We also aim to al-
low some elaborate features of particular schemes, such as
blinding for digital signatures. Finally, we aim to support
associativity and commutativity properties, in particular for
the XOR (exclusive or) operation.
Several of the equational theories that we treat are impor-
tant in applications. Therefore, deduction and (to a lesser
1
extent) static equivalence under some of these theories have
already played a role in the context of various frameworks
and tools for protocol analysis (e.g., [2, 20]). However, usu-
ally, special techniques are developed for each particular
case.
Only a few general decidability results appear in the lit-
erature. In a recent paper [1], we have shown that deduction
and static equivalence are decidable in PTIME for a syntac-
tically defined class of equational theories, the convergent
subterm theories. These theories allow basic equations for
functions such as encryption, decryption, and digital signa-
tures. Noting that deduction and static equivalence are un-
decidable for some other equational theories, we have also
shown that static equivalence can be undecidable even when
deduction is not. Comon-Lundh and Treinen [9] have stud-
ied the decidability of deduction for a class of equational
theories incomparable with ours. Their work, and all the
work cited below, considers only deduction and not static
equivalence unless otherwise noted. Delaune and Jacque-
mard [10] have shown that deduction is decidable for a
subclass of convergent subterm theories, also considering
active attacks. (Section 6 mentions other, ongoing related
work that addresses active attackers.) None of these pre-
vious results allows associativity and commutativity prop-
erties. In fact, even results on specific theories with AC
(associative-commutative) functions are rare. Three impor-
tant exceptions are decidability results for deduction with
XOR [6, 8], in an Abelian group [8], and under certain “AC-
like” theories with homomorphisms [14].
Thus, prior work typically relies on syntactic restrictions
on equational theories, focusing on one particular theory at
a time or on syntactically defined classes of theories. In this
paper, we adopt a different perspective: we assume only
loose, abstract conditions on the underlying equational the-
ories. In this respect, we are inspired by Comon-Lundh’s
current investigations [7] (discussed further in Section 6).
Under those assumptions, we establish general decid-
ability theorems for both deduction and static equivalence.
These theorems subsume the previous ones for convergent
subterm theories. They also apply to many other useful the-
ories, for example with blind digital signatures, homomor-
phic encryption, XOR, and other AC functions. Several of
the decidability results that we obtain are new.
Checking that a particular theory satisfies the hypotheses
of our theorems may involve some work, though often less
than direct proofs of decidability. In some cases, it may also
involve some (fairly elementary and pleasant) mathematics,
such as facts on Z-modules. We expect that some of the
techniques that we employ in our examples may be reused
in the study of other theories.
The next section, Section 2, introduces notations and
definitions. In Section 3, we present the hypotheses of our
theorems. We give some examples of theories that satisfy
these hypotheses in Section 4. We prove the theorems in
Section 5. Finally, we conclude in Section 6.
2 Basic definitions
Next we review definitions from previous work, partic-
ularly from the applied pi calculus [2]. Much of the ma-
terial in this section is borrowed or adapted from previous
work. In Section 2.1 we give the syntax of expressions. In
Section 2.2 we explain a representation for the information
available to an observer who has seen messages exchanged
in the course of a protocol execution. In Sections 2.3 and 2.4
we present the relations  and ≈s, which provide the two
formalizations of the knowledge that the observer has on
the basis of that information.
2.1 Syntax
A signature Σ consists of a finite set of function symbols,
such as enc and pair, each with an arity. Let ar(Σ) be the
maximal arity of a function symbol in Σ. A function symbol
with arity 0 is a constant symbol.
Given a signature Σ, an infinite set of names N , and an
infinite set of variables, the set of terms is defined by the
grammar:
L,M,N, T, U, V ::= terms
k, . . . , n, . . . , s name
x, y, z variable
f(M1, . . . ,Ml) function application
where f ranges over the function symbols of Σ and l
matches the arity of f . Although names, variables, and con-
stant symbols have similarities, we find it clearer to keep
them separate. A term is closed when it does not have
free variables (but it may contain names and constant sym-
bols). We write fn(M) for the set of names that occur in the
term M . We use meta-variables u, v, w to range over names
and variables. The size |T | of a term T is defined by |u| = 1
and |f(T1, . . . , Tl)| = 1 +
∑l
i=1 |Ti|. We write st(T ) for
the set of subterms of T .
We equip the signature Σ with an equational theory E,
that is, an equivalence relation on terms that is closed un-
der substitutions of terms for variables or names and closed
under application of contexts. We write M =E N when
M and N are closed terms and the equation M = N is
in E. We use the symbol == to denote syntactic equality
of closed terms. As in these definitions, we often focus on
closed terms for simplicity.
2.2 Assembling terms into frames
After a protocol execution, an attacker may know a se-
quence of messages M1, . . . , Ml. This means that it knows
each message but it also knows in which order it received
the messages. So it is not enough for us to say that the at-
tacker knows the set of terms {M1, . . . ,Ml}. Furthermore,
we should distinguish the names that the attacker had be-
fore the execution from those that were freshly generated
and which may remain secret from the attacker; both kinds
of names may appear in the terms.
Such a sequence of messages can be organized into a
frame νn˜σ, where n˜ is a finite set of names (intuitively, the
fresh names), and σ is a substitution of the form:
{M1/x1 , . . . ,Ml/xl} with dom(σ) def= {x1, . . . , xl}
The variables enable us to refer to each Mi, for example
for keeping track of their order of transmission. We always
assume that the terms Mi are closed. The size of a frame
φ = νn˜{M1/x1 , . . . ,Ml/xl} is |φ| def=
∑l
i=1 |Mi|. The set
fn(φ) of free names of φ consists of the free names of the
Mi that are not in n˜.
2.3 Deduction
Given a frame φ that represents the information available
to an attacker, we may ask whether a given closed term M
may be deduced from φ. This relation is written φ  M
(following Schneider [20]). It is axiomatized by the rules:
if ∃x ∈ dom(σ)
s.t. xσ = Mνn˜σ  M s ∈ n˜νn˜σ  s
φ  M1 · · · φ  Mk
f ∈ Σ
φ  f(M1, . . . ,Mk)
φ  M M =E M ′
φ  M ′
Intuitively, the deducible messages are the terms of φ and
the names that are not protected in φ, closed by equality in
E and closed by application of functions.
We have the following characterization of deduction [1]:
Proposition 1 Let M be a closed term and νn˜σ be a frame.
Then νn˜σ  M if and only if there exists a term ζ such that
fn(ζ) ∩ n˜ = ∅ and ζσ =E M .
Example 1 As a first example, we consider the theory of
an encryption scheme that has an homomorphism property.
This property is simply that the encryption of a pair is the
pair of the encryptions; the literature (e.g., [18]) suggests
other homomorphism properties. This property is modeled
by the equation:
enc(〈x, y〉, z) = 〈enc(x, z), enc(y, z)〉
We also assume an analogous equation for decryption:
dec(〈x, y〉, z) = 〈dec(x, z), dec(y, z)〉
As usual, we write 〈x, y〉 instead of pair(x, y). The sig-
nature Σ1 is {pair, enc, fst, snd, dec}, and the theory E1 is
defined by the axioms:
enc(〈x, y〉, z) = 〈enc(x, z), enc(y, z)〉
dec(〈x, y〉, z) = 〈dec(x, z), dec(y, z)〉
fst(〈x, y〉) = x
snd(〈x, y〉) = y
dec(enc(x, y), y) = x
Suppose for example that the attacker listens to two mes-
sages: enc(〈n1, n2〉, k) and enc(n3, enc(n1, k)). Since
enc(〈n1, n2〉, k) =E1 〈enc(n1, k), enc(n2, k)〉, the corre-
sponding frame can be written
φ1 = ν(n1, n2, n3, k)
{〈enc(n1, k), enc(n2, k)〉/x1,
enc(n3, enc(n1, k))/x2}
Then φ1  enc(n1, k), φ1  enc(n2, k), and φ1  n3.
Furthermore, enc(n1, k) =E1 fst(x1)φ, enc(n2, k) =E1
snd(x1)φ, and n3 =E1 dec(x2, fst(x1))φ.
2.4 Static equivalence
Given two frames φ and ψ that represent the informa-
tion available to an attacker in two “possible worlds” (e.g.,
two different runs of a protocol), we may ask whether the
attacker may distinguish φ and ψ, more precisely whether
the attacker may differentiate φ and ψ by applying them
(roughly) as substitutions and obtaining observably differ-
ent results. This scenario motivates the following defini-
tions.
We say that two terms M and N are equal in the frame
ϕ for the equational theory E, and write (M =E N)ϕ, if
and only if ϕ = νn˜σ, Mσ =E Nσ, and {n˜} ∩ (fn(M) ∪
fn(N)) = ∅ for some names n˜ and substitution σ. Then
we say that two frames ϕ and ψ are statically equivalent,
and write ϕ ≈s ψ, when dom(ϕ) = dom(ψ) and when, for
all terms M and N , we have (M =E N)ϕ if and only if
(M =E N)ψ.
Example 2 Let φ1
def= νk{k/y, enc(n1, k)/z} and φ2 def=
νk{k/y, enc(n2, k)/z}, where k, n1, and n2 are distinct
names. Using the equation dec(enc(x, y), y) = x, the at-
tacker can tell the difference between these two frames by
checking whether the decryption of z with y produces n1.
In other words, we have (dec(z, y) =E1 n1)φ1 but not
(dec(z, y) =E1 n1)φ2. Therefore, φ1 ≈s φ2.
Example 3 Let φ1
def= νn˜{M/x1,M/x2, N/x3} and φ2 def=
νn˜{M/x1, N/x2,M/x3}. In general, these frames are not
statically equivalent, since x1 and x2 are always equal in
the frame φ1 but not in the frame φ2. On the other hand, the
same terms can be deduced from these two frames. As this
example illustrates, the association of terms with variables
affects static equivalence but not deduction.
3 The hypotheses
We establish decidability results for equational theories
that satisfy three properties. The purpose of this section is to
define and start to explain these three properties; Section 4
explains them further through examples.
3.1 AC-convergence
Our first hypothesis is an adaptation of the standard no-
tion of convergence for theories with AC symbols.
Let E an equational theory, and let ⊕1, . . . ,⊕k be the
binary functional symbols such that the equations x⊕i (y⊕i
z) = (x ⊕i y) ⊕i z (associativity) and x ⊕i y = y ⊕i x
(commutativity) are in E.
For two terms U and V , we write U =AC V if U and V
are equal in the theory induced by the equations x⊕i (y ⊕i
z) = (x⊕iy)⊕iz and x⊕iy = y⊕ix for 1 ≤ i ≤ k. When
this theory is empty (because we have no AC symbols), =AC
is simply syntactic equality.
When R is a rewriting system, we write U →AC V if
there exists W such that U =AC W and W → V . The
relation →∗AC denotes the reflexive and transitive closure
of →AC.
Definition 1 (AC-convergent) An equational theory E is
AC-convergent if there exists a finite rewriting system R
such that:
• R is AC-terminating, that is, for every closed term
U , there is no infinite sequence U →AC U1 →AC
· · ·Uk →AC · · · .
For every term U , the set of normal forms U↓ (closed
modulo AC) of U is the set of terms V such that U →∗AC
V and V has no successor for →AC.
• R is AC-confluent, that is, for every closed terms U ,
U1, and U2 such that U →AC U1 and U →AC U2, there
exist V1 and V2 such that U1 →∗AC V1, U2 →∗AC V2,
and V1 =AC V2.
• For all closed terms U and V , the equality U =E V
holds if and only if there exists a term T ∈ (U↓ ∩ V ↓).
By AC-convergence, the set U↓ is always finite and for all
V,W ∈ U↓, the equality V =AC W holds. AC-convergence
immediately implies the decidability of equations on closed
terms.
In what follows, E is an AC-convergent equational the-
ory and R is a rewriting system associated with E that sat-
isfies the conditions of Definition 1. If R consists of a finite
set of rules
⋃k
i=1 {Mi → Ni}, the size cE of the theory E
is defined as cE = max1≤i≤k(|Mi|, |Ni|, ar(Σ) + 1). As a
special case, cE = ar(Σ) + 1 when R is empty.
Note that E need not have AC symbols. A theory de-
fined by a convergent rewriting system without AC symbol
is of course an AC-convergent theory. In that case, we may
simply say that the theory is convergent.
Example 4 Let us consider again the theory E1 of an en-
cryption scheme with a homomorphism property. We con-
sider the rewriting system R1 obtained from E1 by orient-
ing the equations from left to right. With this choice of R1,
the theory E1 is convergent. Indeed, the only critical pair is
joinable.
〈x1, dec(enc(x2, y), y)〉
〈dec(enc(x1, y), y), dec(enc(x2, y), y)〉
〈x1, x2〉 dec(〈enc(x1, y), enc(x2, y)〉, y)
dec(enc(〈x1, x2〉, y), y)
Example 5 The theory of XOR is also AC-convergent. The
XOR operator is represented by the⊕ function symbol, with
the following properties:
E2 =
⎧⎪⎪⎨
⎪⎪⎩
x⊕ (y ⊕ z) = (x⊕ y)⊕ z
x⊕ y = y ⊕ x
x⊕ x = 0
x⊕ 0 = x
⎫⎪⎪⎬
⎪⎪⎭
where 0 is a constant symbol and the signature Σ2 is {0,⊕}.
We associate to E2 the rewriting system R2:
R2 =
{
x⊕ x → 0
x⊕ 0 → x
}
Using this choice of R2, it is easy to verify that E2 is AC-
convergent.
3.2 Local stability
Our second hypothesis roughly says that, for every
frame, there is a finite set of terms deducible from the frame
that satisfies certain closure conditions. Stating this hy-
potheses precisely requires a few auxiliary definitions and
notations.
Assume that there exists some rule M0 → N0 of the
rewriting system R and some substitution θ such that either
there exists a term U1 such that U =AC U1, U1 = M0θ,
and V = N0θ, or there exist terms U1 and U2 such that
U =AC U1 ⊕ U2 for some AC symbol ⊕, U1 = M0θ, and
V =AC N0θ ⊕ U2. Then we say that the reduction U → V
occurs in head, and we write U h→ V .
We write α ·⊕ M for the term M ⊕ · · · ⊕ M , α times
(for α ∈ N∗). We simply write αM when the AC symbol
is clear from the context. Given a set of terms S and a set
of names n˜, we write sum⊕(S, n˜) for the set of arbitrary
sums of terms of S and other names, closed modulo AC-
rewriting:
sum⊕(S, n˜)
def=⎧⎨
⎩
(α1 ·⊕ T1)⊕ · · · ⊕ (αn ·⊕ Tn)
⊕
(β1 ·⊕ n1)⊕ · · · ⊕ (βk ·⊕ nk)
∣∣∣∣∣∣
αi, βi ∈ N∗,
ni /∈ n˜,
Ti ∈ S
⎫⎬
⎭
Typically, the names in n˜ will be private, and the oth-
ers public. Then we define sum(S, n˜) as the union of the
sum⊕(S, n˜) for any AC symbol ⊕ of the theory.
In our previous paper [1], the main step of the proof of
the decidability of  and≈s for convergent subterm theories
was the existence, for each frame φ, of a set sat(φ) stable
by application of “small” contexts. We generalize this con-
dition by requiring that the application of a rewriting rule
to a “small” context C applied to arbitrary sums of terms
in sat(φ) is again a “small” context C′ applied to sums of
terms in sat(φ). The definition of “small” is partly arbitrary;
we bound the size of C by cE and the size of C′ by cE2, but
other finite size bounds may be suitable.
Definition 2 (locally stable) An AC-convergent equation-
al theory E is locally stable if, for every frame φ =
νn˜{M1/x1, . . . ,Mk/xk}, where the terms Mi are closed
and in normal form, there exists a finite (computable) set
sat(φ), closed modulo AC, such that
1. for every 1 ≤ i ≤ k, Mi ∈ sat(φ), and for every
n ∈ fn(φ), n ∈ sat(φ),
2. if M1, . . . ,Mk ∈ sat(φ) and f(M1, . . . ,Mk) ∈
st(sat(φ)), then f(M1, . . . ,Mk) ∈ sat(φ),
3. if C[S1, . . . , Sl] h→ M , where C is a context such
that |C| ≤ cE and fn(C) ∩ n˜ = ∅, and where
S1, . . . , Sl ∈ sum⊕(sat(φ), n˜) for some AC symbol
⊕ (or Si ∈ sat(φ) if there is no AC symbol), then
there exist a context C′, a term M ′, and S′1, . . . , S′k ∈
sum⊕(sat(φ), n˜) (or S′1, . . . , S′k ∈ sat(φ) if there is no
AC symbol), such that |C′| ≤ c2E , fn(C ′)∩ n˜ = ∅, and
M →∗AC M ′ =AC C ′[S′1, . . . , S′k],
4. if M ∈ sat(φ) then φ  M .
The set sat(φ) need not be unique, nor minimal. Any set
that satisfies the four conditions is adequate for our present
purposes.
Example 6 For the equational theory E1 of Example 1,
given a frame φ in normal form, the set sat(φ) is simply
obtained by adding subterms of φ deducible from φ. For ex-
ample, the deducible subterms of the frame φ1 of Example 1
are enc(n1, k), enc(n2, k), and n3, so sat(φ1) is the set
{〈enc(n1, k), enc(n2, k)〉,
enc(n3, enc(n1, k)), enc(n1, k), enc(n2, k), n3}
In Section 4.2 we prove that this construction satisfies the
requirements.
In general, establishing that an equational theory is lo-
cally stable may be difficult. We give other examples of
locally stable theories in Section 4.
3.3 Local finiteness and local decidability
For our third hypothesis, we consider a certain set of
“small” equations that a frame satisfies. One of our re-
sults says that this set characterizes the frame. The third
hypothesis, which this section presents, pertains to deciding
whether another frame satisfies this set. In fact, this section
discusses two versions of the third hypothesis, called local
finiteness and local decidability. Either is sufficient for our
purposes; the former has been more attractive in applica-
tions; the latter is more general. As the use of equations
may suggest, we rely on the third hypothesis in the study of
static equivalence but not deduction.
For each frame φ = νn˜σ, we assume a fixed set of terms
R(φ) = {ζM | M ∈ sat(φ)} such that for each ζM ,
fn(ζM ) ∩ n˜ = ∅ and ζMσ =E M . Intuitively, the term
ζM explains how M may be obtained from the terms of φ.
Since all the terms of sat(φ) are deducible, such a set ex-
ists by Proposition 1. For instance, for Example 6, the
terms associated with enc(n1, k), enc(n2, k), and n3 are re-
spectively ζenc(n1,k) = fst(x1), ζenc(n2,k) = snd(x1), and
ζn3 = dec(x2, fst(x1)).
With each frame φ, we associate a set of “small” equa-
tions Eq(φ) such that two frames are equivalent if and only
if they satisfy the equations of each other’s set (see Propo-
sition 7).
Definition 3 Let φ = νn˜σ be a frame in normal form. The
set Eq(φ) is the set of equations of the form
C1[χ1, . . . , χk] = C2[χ′1, . . . , χ
′
l]
where (C1[χ1, . . . , χk] =E C2[χ′1, . . . , χ′l])φ, (fn(C1) ∪
fn(C2)) ∩ n˜ = ∅, |C1| ≤ cE , |C2| ≤ c2E , and the χi and χ′i
are in the set sum⊕(R(φ), n˜) for some AC symbol ⊕ (or χi
and χ′i are in R(φ) if there is no AC symbol).
When φ and ψ are frames and (M =E N)ψ for every
(M = N) ∈ Eq(φ), we say that ψ satisfies the equations of
Eq(φ), and write ψ |= Eq(φ).
Definition 4 (locally decidable) A locally stable equation-
al theory is locally decidable if the question of whether ψ |=
Eq(φ), for frames φ and ψ, is decidable.
The set Eq(φ) may in general be infinite since the χi
may be of arbitrary size. Local finiteness means that the set
Eq(φ) is always equivalent to a finite set of equations.
Definition 5 (locally finite) A locally stable equational
theory is locally finite if, for every frame φ, there exists a
finite (computable) set of equations Eq′(φ) such that, for
every frame ψ:
ψ |= Eq(φ) if and only if ψ |= Eq′(φ)
This property suffices for local decidability:
Proposition 2 Every locally finite equational theory is lo-
cally decidable.
Local finiteness is always true when there are no AC
symbols since then the set Eq(φ) contains only finitely
many equations up to renaming:
Proposition 3 Let E be a locally stable equational theory
with no AC symbols. Then, for any frame φ, there exists a
finite set of equations Eq′(φ) such that for every frame ψ,
we have ψ |= Eq(φ) if and only if ψ |= Eq′(φ). In other
words, E is locally finite.
Each equation of Eq(φ) is of the form C1[χ1, . . . , χk] =
C2[χ′1, . . . , χ
′
l] with χi, χ′i inR(φ). Thus it contains a finite
number of names (bounded by cE + c2E). The set Eq′(φ) is
obtained from Eq(φ) by renaming the names on a fixed set
of names.
In Section 4 we present some non-trivial examples of lo-
cally finite theories with AC symbols. Establishing local
finiteness is our preferred way of proving local decidability
for such theories. Here we show that at least an (infinite)
subset of Eq(φ) may always be replaced by a finite number
of equations.
Definition 6 Let φ = νn˜σ be a frame. Let N be a set of
public names (that is, such that N ∩ n˜ = ∅). We write
Eq⊕(φ,N) for the set of equations of the form χ1 = χ2
such that χ1, χ2 ∈ sum⊕(R(φ), n˜), fn(χ1)∪ fn(χ2) ⊆ N ,
and (χ1 =E χ2)φ.
Note that Eq⊕(φ,N) is a subset of Eq(φ). We show that the
set Eq⊕(φ,N) may always be replaced by a finite number
of equations if N is a finite set of public names.
Proposition 4 Let φ = νn˜σ be a frame and N a finite set
of names such that N ∩ n˜ = ∅. There exists a finite set
Eqb⊕(φ,N) ⊆ Eq⊕(φ,N), such that for every frame ψ:
ψ |= Eq⊕(φ,N) if and only if ψ |= Eqb⊕(φ,N)
In addition, the cardinality of Eqb⊕(φ) is at most the cardi-
nality of sat(φ) plus the cardinality of N .
This proposition can be proved using elementary results on
Z-modules. (Facts on Z-module may be found in [19], for
example.) Assume that sat(φ) = {M1, . . . ,Mk}, N =
{n1, . . . , nl}, and let Γ ∈ Zk+l. For 1 ≤ i ≤ k + l, Γi
denotes the ith coefficient of Γ, and Γ̂ denotes the equation:
⊕
Γi>0,i≤k
ΓiζMi ⊕
⊕
Γi>0,i>k
Γini
=
⊕
Γi<0,i≤k
(−Γi)ζMi ⊕
⊕
Γi<0,i>k
(−Γi)ni
Let Eq′⊕(φ,N) = {Γ̂ | Γ ∈ Zk+l, (Γ̂)φ}. It is easy to
verify that for any frame ψ, ψ |= Eq⊕(φ,N) if and only
if ψ |= Eq′⊕(φ,N). It is also easy to verify (simplifying
the equations) that Eq′⊕(φ,N) is a Z-submodule of Zk+l
and thus can be generated by a finite number of vectors
V1, . . . , Vr with r ≤ k + l. We define Eqb⊕(φ,N) =
{V̂1, . . . , V̂r}. It is then easy to conclude that, for any
frame ψ, ψ |= Eq⊕(φ,N) if and only if ψ |= Eqb⊕(φ,N).
Example 7 Consider for example a pure AC theory with
only one AC symbol + (and no other function symbol), and
the frame
φ2 = ν(n1, n2, n3)
{3n1 + 2n2 + 4n3/x1,
n2 + 3n3/x2,
n1 + 2n3/x3,
3n2 + n3/x4}
The set Eq(φ2) consists of the equations of the form α1x1 +
α2x2+α3x3+α4x4+T = α′1x1+α
′
2x2+α
′
3x3+α
′
4x4+T
′
with αi, α′i ∈ N, and T and T ′ sums of names distinct from
n1, n2, and n3. By convention, if αi = 0 (resp. α′i = 0)
then the term αixi (resp. α′ixi) does not appear in the sum.
Since the equation is true for φ2, we must have T = T ′, thus
it is sufficient to consider the equations of the form α1x1 +
α2x2 + α3x3 + α4x4 = α′1x1 + α
′
2x2 + α
′
3x3 + α
′
4x4
with αi, α′i ∈ N. Adopting the convention that a negative
term αx (with α < 0) in an equation actually appears on
the other side of the equation, it is sufficient to consider the
equations of the form α1x1+α2x2+α3x3+α4x4 = 0, with
αi, α
′
i ∈ Z. For example, the equation 3x1 − 2x2 + x3 = 0
stands for the equation 3x1 + x3 = 2x2. Then, the set
of vectors (α1, α2, α3, α4) such that the equation α1x1 +
α2x2 + α3x3 + α4x4 = 0 holds for φ2 is exactly the set of
vectors U of Z4 such that AU = 0 with
A =
⎛
⎝ 3 0 1 02 1 0 3
4 3 2 1
⎞
⎠
By using classical elementary operations on rows and
columns, we find that AU = 0 if and only if
U = λ
⎛
⎜⎜⎝
1
1
−3
−1
⎞
⎟⎟⎠
for λ ∈ Z. We deduce that the set of equations satisfied by
φ2 is exactly the set of equations of the form: λx1 + λx2 =
3λx3 + λx4. Thus, in order to decide whether a frame ψ
satisfies Eq(φ2), it is sufficient to check whether ψ satisfies
the single equation x1 + x2 = 3x3 + x4.
4 Examples
In this section, we give examples of locally stable and
locally finite equational theories. In Section 5, we prove that
local stability implies the decidability of deduction, and that
local stability and local finiteness imply the decidability of
static equivalence.
Several equational theories related to cryptographic op-
erations are locally stable and locally finite. In particular,
we prove that the convergent subterm theories of our pre-
vious work [1] are locally stable. We show that a theory
of homomorphic encryption, a simple theory for addition,
and a theory for blind signatures (which are not subterm
theories) are also locally stable. These equational theories
do not have AC symbols, so local finiteness follows from
Proposition 3. As examples of theories with AC symbols,
we prove that the pure AC theory and a theory of the XOR
operator are locally stable and locally finite. The proofs
of these properties require only a few lines, and thus are
much simpler than direct proofs of decidability. One can
also show that the theory of Abelian groups is locally sta-
ble and locally finite, but in that case the proofs are quite
tedious—probably more than direct proofs of the decidabil-
ity of deduction and static equivalence.
As the examples may suggest, proving local stability of-
ten requires a precise understanding of the cryptographic
primitives represented by an equational theory. In particu-
lar, removing some equations need not always preserve lo-
cal stability.
4.1 Convergent subterm theories
A convergent subterm theory is simply a theory defined
by a finite set of equations
⋃k
i=1{Mi = Ni}, where Ni is
either a subterm of Mi or a constant symbol, such that the
rewriting system obtained by orienting the equations from
left to right is convergent. We have proved [1] that both
deduction and static equivalence are decidable in PTIME
for convergent subterm theories.
Destructor-constructor rules like those for pairing, en-
cryption, and digital signatures may be expressed in con-
vergent subterm theories:
fst(〈x, y〉) = x
snd(〈x, y〉) = y
dec(enc(x, y), y) = x
check(x, sign(x, sk(y)), pk(y)) = ok
Convergent subterm theories also enable us to capture the
theory of an inverse function:
{I(I(x)) = x, I(x)× x = 1, x× I(x) = 1}
Other usual equations (such as x × 1 = x, 1 × x = x,
and I(1) = 1) may be added, provided the theory remains
convergent.
More examples may be found in our previous paper [1].
It is easy to verify that the definition of sat(φ) given there
fits our requirements for local stability.
Proposition 5 Every convergent subterm theory is a locally
finite theory.
4.2 Homomorphism
We consider again the equational theory E1 (defined in
Example 1), which represents an encryption scheme with a
homomorphism property. The size of the theory is 7.
Comon-Lundh and Treinen [9] have investigated a very
similar equational theory. They showed that its deduction
relation is decidable in PTIME. Here we show that E1 is
locally stable, and it is obviously locally finite (since it has
no AC symbol). These properties will imply that both de-
duction and static equivalence are decidable.
Let φ = νn˜{M1/x1, . . . ,Mk/xk} be any frame in nor-
mal form. We define sat(φ) to be the smallest set such that:
1. for every 1 ≤ i ≤ k, Mi ∈ sat(φ), and for every
n ∈ fn(φ), n ∈ sat(φ),
2. if M1, . . . ,Mk ∈ sat(φ) and f(M1, . . . ,Mk) ∈
st(sat(φ)), then f(M1, . . . ,Mk) ∈ sat(φ),
3. if M1,M2 ∈ sat(φ) and dec(M1,M2) h→ M and
the rule dec(enc(x, y), y) → x has been applied, or
fst(M1)
h→ M , or snd(M1) h→ M , then M ∈ sat(φ).
The set sat(φ) is finite since we add only subterms of terms
of φ. It trivially satisfies conditions 1, 2, and 4 of Def-
inition 2. Let us show that it satisfies condition 3. Let
M1, . . . ,Mk ∈ sat(φ) and assume that C[M1, . . . ,Mk] h→
M where |C| ≤ 7. The case where C is a single hole is cov-
ered by the fact that the terms are in normal form. The other
cases are covered by rule 3 except in the following cases:
• C = enc( , ), C = enc( , T ), or C = enc(T, ) where
fn(T ) ∩ n˜ = ∅ and |T | ≤ 5.
– For enc(M1,M2) → M with M1,M2 ∈
sat(φ): In this case, M1 must be of the form
M1 = 〈M ′1,M ′2〉 and M = 〈enc(M ′1,M2),
enc(M ′2,M2)〉. By rule 3, we know that both
M ′1 and M ′2 are in sat(φ) since fst(M1) → M ′1
and snd(M1) → M ′2. Thus M is a context over
terms of sat(φ) where the context may be chosen
as C ′ = 〈enc( , ), enc( , )〉 since |C ′| = 7 ≤
72 = 49.
– For enc(M1, T ) → M with M1 ∈ sat(φ),
fn(T ) ∩ n˜ = ∅, and |T | ≤ 5: We have simi-
larly that M = 〈enc(M ′1, T ), enc(M ′2, T )〉 with
M ′1 and M ′2 in sat(φ). Thus M is a context over
terms of sat(φ) where the context may be cho-
sen as C ′ = 〈enc( , T ), enc( , T )〉 since |C ′| ≤
5 + 2|T | ≤ 15 ≤ 72 = 49.
– For enc(T,M2) → M with M2 ∈ sat(φ),
fn(T ) ∩ n˜ = ∅, and |T | ≤ 5: We must have
T = 〈T1, T2〉 with |T1| + |T2| ≤ 4. We ob-
tain M = 〈enc(T1,M2), enc(T2,M2)〉, so M is
a context over terms of sat(φ) where the context
may be chosen as C′ = 〈enc(T1, ), enc(T2, )〉
since |C ′| ≤ 5 + |T1|+ |T2| ≤ 9 ≤ 49.
• C = dec( , ), C = dec( , T ), or C = dec(T, )
where fn(T ) ∩ n˜ = ∅ and |T | ≤ 5, and the rule
dec(〈x, y〉, z) → 〈dec(x, z), dec(y, z)〉 has been ap-
plied.
These three cases are very similar to the three cases
above.
4.3 Addition
We consider a simple theory for addition. Let Σ3 be any
signature that contains 0, s, pred, and plus, with the equa-
tions:
E3 =
⎧⎨
⎩
plus(x, s(y)) = plus(s(x), y)
plus(x, 0) = x
pred(s(x)) = x
⎫⎬
⎭
The size cE3 of this theory is at least 4 (and possibly higher
if Σ3 contains symbols other than 0, s, pred, and plus). We
define R3 by simply orienting the equations from left to
right. Using this choice of R3, it is easy to verify that E3
is convergent. (Note that E3 has no AC symbol.) For local
stability, when φ = νn˜{M1/x1, . . . ,Mk/xk} is any frame
in normal form, we define sat(φ) to be the smallest set such
that:
1. for every 1 ≤ i ≤ k, Mi ∈ sat(φ), and for every
n ∈ fn(φ), n ∈ sat(φ),
2. if M1, . . . ,Mk ∈ sat(φ) and f(M1, . . . ,Mk) ∈
st(sat(φ)), then f(M1, . . . ,Mk) ∈ sat(φ),
3. if pred(M) h→ M ′ and M ∈ sat(φ) then M ′ ∈ sat(φ).
The set sat(φ) is finite since we add only subterms of terms
of φ. The set sat(φ) trivially satisfies conditions 1, 2, and
4 of Definition 2. Let us show that it satisfies condition 3.
Assume that C[M1, . . . ,Mk]
h→ M with Mi ∈ sat(φ) and
|C| ≤ cE3 . The only non-trivial case is the one where
plus(M1,M2)
h→ M ′ with M1,M2 ∈ sat(φ) and the rule
plus(x, s(y)) → plus(s(x), y) has been applied. We must
have that M2 = s(M ′2). Hence pred(M2)
h→ M ′2, so
M ′2 ∈ sat(φ). Now, we have M ′ = plus(s(M1),M ′2),
with M1,M ′2 ∈ sat(φ) and |plus(s( ), )| = 4 ≤ 42, so
condition 3 is satisfied.
Note that, were we to omit the equation pred(s(x)) = x
in our equational theory, the proof of local stability would
no longer be valid.
4.4 Blind signatures
We consider a theory recently introduced by Kremer and
Ryan [13] in order to model blind signatures and related
constructs in their analysis of a protocol for electronic vot-
ing. This theory treats signatures much like that of Sec-
tion 4.1, with four differences: the checking construct is
called checksign (rather than check); checking does not re-
quire plaintext; there is no separate signature-key compu-
tation (no function sk); and, most importantly, this theory
also describes signature blinding and unblinding functions.
Let Σ4 be any signature that contains open, commit, getpk,
host, checksign, sign, unblind, and blind, with the equa-
tions:
E4 =
⎧⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
open(commit(x, y), y) = x
getpk(host(x)) = x
checksign(sign(x, y), pk(y)) = x
unblind(blind(x, y), y) = x
unblind(sign(blind(x, y), z), y) = sign(x, z)
⎫⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎭
The size cE4 of the theory is at least 7 (and possibly higher
if Σ4 contains additional symbols). We define R4 by sim-
ply orienting the equations from left to right. The theory
E4 is clearly convergent. To prove that E4 is locally sta-
ble, we extend the definition of subterms by requiring that
sign(M1,M3) is a subterm of sign(blind(M1,M2),M3).
More formally, we define:
stext(u) = u
stext(sign(blind(M1,M2),M3)) =
{sign(M1,M3)} ∪ {sign(blind(M1,M2),M3)}
∪ stext((blind(M1,M2)) ∪ stext(M3)
stext(f(M1, . . . ,Mk)) =
{f(M1, . . . ,Mk)} ∪
⋃k
i=1 stext(Mi)
otherwise (that is, for other terms)
When φ = νn˜{M1/x1, . . . ,Mk/xk} is any frame in nor-
mal form, we define sat(φ) to be the smallest set such that:
1. for every 1 ≤ i ≤ k, Mi ∈ sat(φ), and for every
n ∈ fn(φ), n ∈ sat(φ),
2. if M1, . . . ,Mk ∈ sat(φ) and f(M1, . . . ,Mk) ∈
st(sat(φ)), then f(M1, . . . ,Mk) ∈ sat(φ),
3. if C[M1, . . . ,Mk]
h→ M , Mi ∈ sat(φ) and M ∈
stext(sat(φ)) then M ∈ sat(φ).
The set sat(φ) is finite since we add only extended sub-
terms of terms of φ. The set sat(φ) trivially satisfies con-
ditions 1, 2, and 4 of Definition 2. Let us show that it
satisfies condition 3. Assume that C[M1, . . . ,Mk]
h→ M
with Mi ∈ sat(φ) and |C| ≤ cE4 . If one of the four
first rules of R4 has been applied, then M is a subterm of
C[M1, . . . ,Mk]. Thus either M = C ′[M1, . . . ,Mk] for
some context C′ and condition 3 is satisfied or M is a sub-
term of one of the Mi, thus M ∈ sat(φ) and condition 3 is
satisfied. If the fifth rule of R4 has been applied, then three
(non-trivial) cases may arise.
• If M2 h→ M then M is an extended subterm of M2, so
M ∈ sat(φ) and condition 3 is satisfied.
• Similarly, if unblind(M1,M2) h→ M then M is an ex-
tended subterm of M1, so M ∈ sat(φ) and condition 3
is satisfied.
• Finally, suppose that unblind(sign(M1,M2),M3) h→
M . It must be the case that M1 = blind(M ′1,M3).
Since unblind(M1,M3)
h→ M ′1 and M ′1 is a sub-
term of M1, we have M ′1 ∈ sat(φ). Now, since
M = sign(M ′1,M2) and |sign( , )| = 3 ≤ 72, con-
dition 3 is satisfied.
4.5 Pure AC theory
We consider the case where the signature contains only
constant symbols and AC symbols ⊕1, . . . ,⊕k and the
equational theory E5 contains only the AC equations for
each symbol:
E5 =
k⋃
i=1
{
(x⊕i y)⊕i z = x⊕i (y ⊕i z)
x⊕i y = y ⊕i x
}
With the empty rewriting system R5 = ∅, E5 is an AC-
convergent theory. When φ = νn˜{M1/x1, . . . ,Mk/xk} is
any frame, we define sat(φ) to be the smallest set such that:
1. for every 1 ≤ i ≤ k, Mi ∈ sat(φ), and for every
n ∈ fn(φ), n ∈ sat(φ),
2. if M1,M2 ∈ sat(φ) and M1⊕i M2 ∈ st(sat(φ)), then
M1 ⊕i M2 ∈ sat(φ),
3. if M1 =AC M2 and M1 ∈ sat(φ) then M2 ∈ sat(φ).
The set sat(φ) is finite since we add only terms smaller or
equal than the maximal size of the terms of φ. The set
sat(φ) trivially satisfies conditions 1, 2, and 4 of Defini-
tion 2. It also satisfies condition 3 since the rewriting sys-
tem R5 is empty. Thus E5 is locally stable.
Now, for any frame φ = νn˜σ, the set of equations Eq(φ)
simply consists of Eq⊕(φ,N − n˜). Since names that do
not appear in φ need not be considered, Eq⊕(φ,N − n˜) is
equivalent to Eq⊕(φ,N) where N is the set of free names
of φ, in the sense that for any frame ψ, ψ |= Eq⊕(φ,N −
n˜) if and only if ψ |= Eq⊕(φ,N). By Proposition 4, we
conclude that the equational theory E5 is locally finite.
4.6 XOR
We consider the theory E2 of the XOR operator (defined
in Example 4).
We have seen that E2 is AC-convergent. We wish to
verify that E2 is locally stable. When φ = νn˜{M1/x1,
. . . ,Mk/xk} is any frame in normal form, we define sat(φ)
to be the smallest set, closed under AC, such that:
1. for every 1 ≤ i ≤ k, Mi ∈ sat(φ), and for every
n ∈ fn(φ), n ∈ sat(φ), and 0 ∈ sat(φ),
2. if M1, . . . ,Mk ∈ sat(φ) and f(M1, . . . ,Mk) ∈
st(sat(φ)), then f(M1, . . . ,Mk) ∈ sat(φ),
3. if M1,M2 ∈ sat(φ), then (M1 ⊕M2)↓ ⊆ sat(φ),
4. if a is a name not in n˜ and if M ⊕ a →AC M ′ with
M ′ ∈ st(sat(φ)), then M ′ ∈ sat(φ).
Let us first show that sat(φ) is finite. Let the set sst(φ) of
simple subterms of φ be the set of subterms of φ whose head
symbol is not⊕. Let S = {T1⊕· · ·⊕Tn | Ti ∈ sst(φ), Ti =
0, Ti = Tj ⇒ i = j} be the set of sums of distinct terms of
sst(φ). The set S is finite and sat(φ) ⊆ S. Indeed, it is easy
to show that S satisfies the four conditions above, using that
st(S) = S.
The set sat(φ) trivially satisfies conditions 1, 2, and 4
of Definition 2. Let us show that it satisfies condition 3.
Let M1, . . . ,Mk ∈ sat(φ) and C be a context such that
fn(C)∩ n˜ = ∅ and assume that C[M1, . . . ,Mk] h→ M . We
have that C[M1, . . . ,Mk] =AC
⊕k
i=1 Mi⊕
⊕n
i=1 ai, where
each ai is a name not in n˜ or the constant 0. Let us show that
one of the normal forms of C[M1, . . . ,Mk] is a context of
terms in sat(φ). Applying recursively rule 3, we obtain that
(
⊕k
i=1 Mi)↓ ⊆ sat(φ). Now, applying recursively rule 4,
we obtain that C[M1, . . . ,Mk]↓ =AC M ′ ⊕
⊕r
j=1 aij ,
with M ′ ∈ sat(φ). By AC-convergence, we know that
M →∗AC=AC M ′ ⊕
⊕r
j=1 aij with M ′ ⊕
⊕r
j=1 aij ∈
sum⊕(sat(φ), n˜), since none of the aij is 0 (for otherwise
the term would not be in normal form), so the context C′
that simply consists of a hole satisfies the required condi-
tions.
Like in the pure AC case, for any frame φ, the set of
equation Eq(φ) simply consists of Eq⊕(φ,N − n˜) since
the only constant is 0 and 0 is itself in sat(φ). Since
names that do not appear in φ do not need to be considered,
Eq⊕(φ,N − n˜) is equivalent to Eq⊕(φ,N) where N is the
set of free names of φ, in the sense that for any frame ψ,
ψ |= Eq⊕(φ,N − n˜) if and only if ψ |= Eq⊕(φ,N). Thus,
by Proposition 4, the equational theory E2 is locally finite.
Note that, in this example, we can also conclude without
using Proposition 4. Indeed, we can consider the set Eq′(φ)
that consists of the equations
k1⊕
j=1
ζMij ⊕
k2⊕
j=1
nij =
l1⊕
j=k1+1
ζMij ⊕
l2⊕
j=k2+1
nij
such that⎛
⎝ k1⊕
j=1
ζMij ⊕
k2⊕
j=1
nij =E
l1⊕
j=k1+1
ζMij ⊕
l2⊕
j=k2+1
nij
⎞
⎠φ
nij ∈ fn(φ), and l = j =⇒ Mil = Mij , nil = nij .
Clearly, Eq′(φ) is finite and it is easy to verify that, for any
frame ψ, ψ |= Eq⊕(φ, n˜) if and only if ψ |= Eq′(φ).
5 Decidability results
In this section, we state and prove our decidability results
for deduction and static equivalence.
5.1 Decidability of deduction
Theorem 1 For locally stable equational theories, deduc-
tion is decidable.
The proof is based on the following lemma.
Lemma 1 Let E be a locally stable theory. Let φ = νn˜σ
be a frame. For every context C1 such that fn(C1) ∩ n˜ =
∅, for every Mi ∈ sat(φ), for every term T such that
C1[M1, . . . ,Mk] →AC T , there exist a context C2 such
that fn(C2) ∩ n˜ = ∅, and terms M ′i ∈ sat(φ), such that
T →∗AC C2[M ′1, . . . ,M ′l ].
This lemma is a weak version of Lemma 3 presented in Sec-
tion 5.2. Applying repeatedly this lemma leads to the fol-
lowing corollary.
Corollary 1 Let E be a locally stable theory. Let φ = νn˜σ
be a frame. For every context C1 such that fn(C1)∩ n˜ = ∅,
for every Mi ∈ sat(φ), for every term T in normal form
such that C1[M1, . . . ,Mk] →∗AC T , there exist a context C2
such that fn(C2) ∩ n˜ = ∅, and terms M ′i ∈ sat(φ), such
that T =AC C2[M ′1, . . . ,M ′l ].
Assuming Lemma 1, let φ = νn˜σ be a frame, C1 be a
context such that fn(C1) ∩ n˜ = ∅, Mi ∈ sat(φ), and T
a term in normal form such that C1[M1, . . . ,Mk] →∗AC T .
Either C1[M1, . . . ,Mk] =AC T and we are done or we have
C1[M1, . . . ,Mk] →AC T ′ →∗AC T . By Lemma 1, there
exist a context C2 such that fn(C2) ∩ n˜ = ∅, and terms
M ′i ∈ sat(φ), such that T ′ →∗AC C2[M ′1, . . . ,M ′l ]. By AC-
confluence of the equational theory and since T is in normal
form, C2[M ′1, . . . ,M ′l ] →∗AC T . Since the equational theory
is AC-terminating, we repeat this transformation until we
obtain that T =AC C3[M ′′1 , . . . ,M ′′l ] for some terms M ′′i ∈
sat(φ) and some context C3.
We show that for any term deducible from a frame φ, one
of its normal forms is a context over terms in sat(φ).
Proposition 6 Let φ = νn˜σ be a frame, M be a closed
term, and M↓ its set of normal forms. Then φ  M if
and only if there exist a term T ∈ M↓, a context C, and
terms M1, . . . ,Mk ∈ sat(φ) such that fn(C) ∩ n˜ = ∅ and
T == C[M1, . . . ,Mk].
If there exists T ∈ M↓ such that T == C[M1, . . . ,Mk]
with fn(C) ∩ n˜ = ∅, then T =E C[ζM1 , . . . , ζMk ]σ, by
construction of ζM1 , . . . , ζMk . Therefore, by Proposition 1,
φ  T , so φ  M .
Conversely, if φ  M , then by Proposition 1, there exists
ζ such that fn(ζ)∩ n˜ = ∅ and M =E ζσ. Thus there exists
T ′ ∈ (M↓ ∩ (ζσ)↓). Since ζσ →∗AC T ′, applying Corol-
lary 1, we obtain that T ′ =AC C[M1, . . . ,Mk] for some
M1, . . . ,Mk ∈ sat(φ) and C such that fn(C) ∩ n˜ = ∅.
Thus we end the proof by choosing T == C[M1, . . . ,Mk].
We derive that φ  M can be decided by check-
ing whether one of the terms in M↓ is of the form
C[M1, . . . ,Mk] with Mi ∈ sat(φ).
5.2 Decidability of static equivalence
Theorem 2 For locally decidable equational theories,
static equivalence is decidable. A fortiori, for locally finite
equational theories, static equivalence is decidable.
The proof is based on two main lemmas that we prove in
the Appendix.
Lemma 2 Let E be a locally stable theory. Let
φ = νn˜σ and ψ = νn˜′σ′ be two frames such that
ψ |= Eq(φ). For all contexts C1 and C2 such that
(fn(C1) ∪ fn(C2)) ∩ n˜ = ∅, for all terms Mi,M ′i ∈
sat(φ), if C1[M1, . . . ,Mk] =AC C2[M ′1, . . . ,M ′l ], then
(C1[ζM1 , . . . , ζMk ] =E C2[ζM ′1 , . . . , ζM ′l ])ψ.
Lemma 3 Let E be a locally stable theory. Let φ = νn˜σ
be a frame. For every context C1 such that fn(C1) ∩ n˜ =
∅, for every Mi ∈ sat(φ), for every term T such that
C1[M1, . . . ,Mk] →AC T , there exist a context C2 such
that fn(C2) ∩ n˜ = ∅, and terms M ′i ∈ sat(φ), such that
T →∗AC C2[M ′1, . . . ,M ′l ] and for every frame ψ |= Eq(φ),
(C1[ζM1 , . . . , ζMk ] =E C2[ζM ′1 , . . . , ζM ′l ])ψ.
As for Corollary 1, applying repeatedly Lemma 3 leads
to the following corollary.
Corollary 2 Let E be a locally stable theory. Let φ = νn˜σ
be a frame. For every context C1 such that fn(C1)∩ n˜ = ∅,
for every Mi ∈ sat(φ), for every term T in normal form
such that C1[M1, . . . ,Mk] →∗AC T , there exist a context C2
such that fn(C2)∩n˜ = ∅, and terms M ′i ∈ sat(φ), such that
T =AC C2[M ′1, . . . ,M
′
l ] and for every frame ψ |= Eq(φ),
(C1[ζM1 , . . . , ζMk ] =E C2[ζM ′1 , . . . , ζM ′l ])ψ.
In order to check whether two frames satisfy the same
equations, we show (using these two lemmas) that it is suf-
ficient to check whether they satisfy the same “small” equa-
tions.
Proposition 7 Let E be a locally stable theory. For all
frames φ and ψ, we have φ ≈s ψ if and only if φ |= Eq(ψ)
and ψ |= Eq(φ).
By definition of static equivalence, if φ ≈s ψ then φ |=
Eq(ψ) and ψ |= Eq(φ).
Conversely, assume now that ψ |= Eq(φ) and con-
sider M and N such that there exist n˜ and σ such that
φ = νn˜σ, (fn(M) ∪ fn(N)) ∩ n˜ = ∅, and (M =E N)φ.
Then Mσ =E Nσ, so ((Mσ)↓ ∩ (Nσ)↓) = ∅. Let
T ∈ ((Mσ)↓∩(Nσ)↓). Since Mσ →∗AC T , applying Corol-
lary 2, we obtain that there exist M1, . . . ,Mk ∈ sat(φ) and
CM such that fn(CM ) ∩ n˜ = ∅, T =AC CM [M1, . . . ,Mk],
and (M =E CM [ζM1 , . . . , ζMk ])ψ. Since Nσ →∗AC
T , we obtain similarly that there exist M ′1, . . . ,M ′l ∈
sat(φ) and CN such that fn(CN ) ∩ n˜ = ∅, T =AC
CN [M ′1, . . . ,M
′
l ], and (N =E CN [ζM ′1 , . . . , ζM ′l ])ψ.
Moreover, since CM [M1, . . . ,Mk] =AC CN [M ′1, . . . ,M ′l ],
we derive from Lemma 2 that (CM [ζM1 , . . . , ζMk ] =E
CN [ζM ′1 , . . . , ζM ′l ])ψ, thus (M =E N)ψ. Symmetrically,
if (M =E N)ψ and φ |= Eq(ψ), then (M =E N)φ. We
conclude that φ ≈s ψ.
Therefore, given φ and ψ, we may consider Eq(φ) and
Eq(ψ) in order to decide whether φ ≈s ψ. By local decid-
ability of the theory, we can decide whether φ |= Eq(ψ) and
ψ |= Eq(φ).
6 Conclusion
In this paper we study message deducibility and static
equivalence, two formal representations for knowledge in
the analysis of security protocols. This study yields a gen-
eral, positive result: message deducibility and static equiv-
alence are decidable under a wide class of equational theo-
ries. This class includes, in particular, standard theories for
basic cryptographic primitives. It also includes some less
standard, more advanced examples: theories of XOR, ho-
momorphic encryption, blind signatures, addition, and pure
AC theories. We succeed in giving a unified treatment for
this disparate collection of theories, with a body of tech-
niques that apply to all of them plus special techniques for
verifying that particular theories belong in the class.
We have not considered complexity issues for the cor-
responding decision procedures. Their performances obvi-
ously depend on the choice of equational theory, and we do
not expect them to be very good in many cases. The second
author is currently working on implementing a variant of
our procedures for specific theories. We expect that the re-
sulting algorithms will be efficient enough to be applicable
in practice.
As indicated in the introduction, deduction and static
equivalence are static notions, but they play an important
role in analyses with respect to active attacks. Nevertheless,
it remains challenging to obtain decidability results with re-
spect to active attacks. This problem is addressed in recent
and ongoing work. That work is still largely under way,
so detailed descriptions may be premature, but we briefly
mention some interesting developments. Going beyond the
work of Delaune and Jacquemard [10] (described in the in-
troduction), Baudet [5] has proved that both deduction and
static equivalence are decidable under convergent subterm
theories. Comon-Lundh [7] is studying the decidability of
deduction under general equational theories, including as-
sociativity and commutativity properties. Overall, this field
appears as a lively one, with increasingly sophisticated tech-
niques and powerful theorems. We may therefore look for-
ward to much progress in algorithmic reasoning about the
knowledge of active attackers in security protocols.
Acknowledgments
We are grateful to Michael Rusinowitch and Math-
ieu Baudet for very helpful discussions.
Martı´n Abadi’s work was partly supported by the Na-
tional Science Foundation under Grants CCR-0204162
and CCR-0208800. Ve´ronique Cortier’s work was
partly supported by the IST AVISPA http://www.
avispa-project.org and the ACI Jeunes Chercheurs
JC9005.
References
[1] M. Abadi and V. Cortier. Deciding knowledge in security
protocols under equational theories. In Proc. 31st Int. Coll.
Automata, Languages, and Programming (ICALP 2004),
volume 3142 of LNCS, pages 46–58, Turku, Finland, July
2004. Springer.
[2] M. Abadi and C. Fournet. Mobile values, new names,
and secure communication. In Proceedings of the 28th
ACM Symposium on Principles of Programming Languages
(POPL’01), pages 104–115, January 2001.
[3] M. Abadi and A. D. Gordon. A calculus for cryptographic
protocols: The spi calculus. Information and Computation,
148(1):1–70, Jan. 1999.
[4] M. Abadi and P. Rogaway. Reconciling two views of cryp-
tography (The computational soundness of formal encryp-
tion). Journal of Cryptology, 15(2):103–127, 2002.
[5] M. Baudet. Private communication. 2005.
[6] Y. Chevalier, R. Kuester, M. Rusinowitch, and M. Tu-
rani. An NP decision procedure for protocol insecurity with
xor. In Proceedings of the 18th Annual IEEE Symposium
on Logic In Computer Science (LICS’03), pages 261–270,
2003.
[7] H. Comon-Lundh. Intruder theories (ongoing work). In
Foundations of Software Science and Computation Struc-
tures (FoSSaCS’04), volume 2987 of LNCS, pages 1–4.
Springer, 2004.
[8] H. Comon-Lundh and V. Shmatikov. Intruder deductions,
constraint solving and insecurity decision in presence of ex-
clusive or. In Proceedings of the 18th Annual IEEE Sympo-
sium on Logic In Computer Science (LICS’03), pages 271–
280, 2003.
[9] H. Comon-Lundh and R. Treinen. Easy intruder deduc-
tions. Technical Report LSV-03-8, Laboratoire Spe´cification
et Ve´rification, ENS de Cachan, France, 2003.
[10] S. Delaune and F. Jacquemard. A decision procedure for the
verification of security protocols with explicit destructors. In
Proceedings of the 11th ACM Conference on Computer and
Communications Security (CCS’04), pages 278–287, Wash-
ington, D.C., USA, October 2004. ACM Press.
[11] S. Goldwasser and S. Micali. Probabilistic encryption. Jour-
nal of Computer and System Sciences, 28:270–299, Apr.
1984.
[12] R. Kemmerer, C. Meadows, and J. Millen. Three systems
for cryptographic protocol analysis. Journal of Cryptology,
7(2):79–130, Spring 1994.
[13] S. Kremer and M. D. Ryan. Analysis of an electronic vot-
ing protocol in the applied pi-calculus. In M. Sagiv, edi-
tor, Programming Languages and Systems –Proceedings of
the 14th European Symposium on Programming (ESOP’05),
volume 3444 of LNCS, pages 186–200, Edinburgh, U.K.,
April 2005. Springer.
[14] P. Lafourcade, D. Lugiez, and R. Treinen. Intruder deduc-
tion for ac-like equational theories with homomorphisms. In
Proceedings of the 16th International Conference on Rewrit-
ing Techniques and Applications (RTA’05), volume 3467 of
LNCS, pages 308–322, Nara, Japan, April 2005. Springer.
[15] P. Lincoln, J. Mitchell, M. Mitchell, and A. Scedrov. A
probabilistic poly-time framework for protocol analysis. In
Proceedings of the Fifth ACM Conference on Computer and
Communications Security, pages 112–121, 1998.
[16] G. Lowe. Breaking and fixing the Needham-Schroeder
public-key protocol using FDR. In Tools and Algorithms
for the Construction and Analysis of Systems, volume 1055
of LNCS, pages 147–166. Springer, 1996.
[17] L. C. Paulson. The inductive approach to verifying cryp-
tographic protocols. Journal of Computer Security, 6(1–
2):85–128, 1998.
[18] R. L. Rivest, L. Adleman, and M. L. Dertouzos. On
data banks and privacy homomorphisms. In R. DeMillo,
D. Dobkin, A. Jones, and R. Lipton, editors, Foundations
of Secure Computation, pages 169–180. Academic Press,
1978.
[19] P. Samuel. Algebraic Theory of Numbers. Hermann, 1970.
[20] S. Schneider. Security properties and CSP. In IEEE Sympo-
sium on Security and Privacy, pages 174–187, 1996.
Appendix: Proof of Lemmas 2 and 3
Definition 7 The set P(M) of paths of a term M is defined
inductively by:
P(u) = 
P(f(M1, . . . ,Mn)) =  ∪
n⋃
i=1
i · P(Mi) for i ≤ n
The subterm of M at position p ∈ P(M), written M |p, is
defined inductively by:
M | = M
f(M1, . . . ,Mn)|i·p = Mi|p for i ≤ n
Lemma 2. Let E be a locally stable theory. Let
φ = νn˜σ and ψ = νn˜′σ′ be two frames such that
ψ |= Eq(φ). For all contexts C1 and C2 such that
(fn(C1) ∪ fn(C2)) ∩ n˜ = ∅, for all terms Mi,M ′i ∈
sat(φ), if C1[M1, . . . ,Mk] =AC C2[M ′1, . . . ,M ′l ], then
(C1[ζM1 , . . . , ζMk ] =E C2[ζM ′1 , . . . , ζM ′l ])ψ.
This lemma is proved by induction on the sum of the
sizes of C1 and C2.
Base case: If |C1|, |C2| ≤ cE , then the equation
(C1[ζM1 , . . . , ζMk ] = C2[ζM ′1 , . . . , ζM ′l ])
is in Eq(φ) since |C1| ≤ cE and |C2| ≤ cE ≤
c2E , so ψ |= Eq(φ) implies (C1[ζM1 , . . . , ζMk ] =E
C2[ζM ′1 , . . . , ζM ′l ])ψ.
Inductive step: If neither C1 nor C2 is a hole, then C1 ==
f(C11 , . . . , C
r
1 ) and C2 == f(C12 , . . . , Cr2). There are
two cases.
• f is not an AC symbol. Then, for every 1 ≤
i ≤ r, Ci1[M1, . . . ,Mk] =AC Ci2[M ′1, . . . ,M ′l ].
By applying the induction hypothesis, we obtain
(Ci1[ζM1 , . . . , ζMk ] =E C
i
2[ζM ′1 , . . . , ζM ′l ])ψ, so
(C1[ζM1 , . . . , ζMk ] =E C2[ζM ′1 , . . . , ζM ′l ])ψ.
• f is an AC symbol ⊕. We write C1 = C11 ⊕
· · · ⊕ Cr1 ⊕ x1 ⊕ · · · ⊕ xp and C2 = C12 ⊕ · · · ⊕
Cr
′
2 ⊕ y1 ⊕ · · · ⊕ yp′ in such a way that the head
symbol of the Ci1 and C
j
2 is not ⊕, Ci1 and Cj2
are not holes, and the xi and yj refer to the holes
of C1 and C2. If the equation can be split, with
C1 =AC C ′1⊕C ′′1 and C2 =AC C ′2⊕C ′′2 such that
(C ′1[ζM1 , . . . , ζMk ] =E C
′
2[ζM ′1 , . . . , ζM ′l ])φ and
(C ′′1 [ζM1 , . . . , ζMk ] =E C
′′
2 [ζM ′1 , . . . , ζM ′l ])φ,
then we conclude as above, applying the induc-
tion hypothesis. On the other hand, if the equa-
tion cannot be split, for every 1 ≤ i ≤ r,
Ni
def= Ci1[M1, . . . ,Mk] is not equal to some
Cj2 [M
′
1, . . . ,M
′
l ] so it must be a subterm of some
M ′j . Since each M ′j is in sat(φ) and by apply-
ing recursively rule 2 of Definition 2, we get that
Ni is in sat(φ), thus there exists ζNi ∈ R(φ)
such that ζNiσ =E Ni. Symmetrically, for every
1 ≤ j ≤ r, N ′j def= Cj1 [M ′1, . . . ,M ′k] is not equal
to some Ci1[M1, . . . ,Ml], so N
′
j ∈ sat(φ) and
there exists ζN ′j ∈ R(φ) such that ζN ′jσ =E N ′j .
– From Ni == Ci1[M1, . . . ,Mk] and ap-
plying the induction hypothesis, we get
ζNiσ
′ =E Ci1[ζM1 , . . . , ζMk ]σ
′ and simi-
larly, ζN ′jσ
′ =E C
j
2 [ζM1 , . . . , ζMk ]σ
′
.
– Renaming the Ci1[M1, . . . ,Mk] by Ni in our
initial equation, we get N1 ⊕ · · · ⊕ Nr ⊕
M1 ⊕ · · · ⊕Mp = N ′1 ⊕ · · · ⊕N ′r′ ⊕M ′1 ⊕
· · · ⊕ M ′p′ . Applying the base case, we get
(ζN1 ⊕ · · · ⊕ ζNr ⊕ ζM1 ⊕ · · · ⊕ ζMp =E
ζN ′1 ⊕ · · · ⊕ ζN ′r′ ⊕ ζM ′1 ⊕ · · · ⊕ ζM ′p′ )σ.
Since this equation is in Eq(φ), we deduce
(ζN1 ⊕ · · · ⊕ ζNr ⊕ ζM1 ⊕ · · · ⊕ ζMp =E
ζN ′1 ⊕ · · · ⊕ ζN ′r′ ⊕ ζM ′1 ⊕ · · · ⊕ ζM ′p′ )σ′.
Combining these equations, we get
(C1[ζM1 , . . . , ζMk ] =E C2[ζM ′1 , . . . , ζM ′l ])ψ
If C1 or C2 is a hole, then let us say C1 ==
f(C11 , . . . , C
r
1 ) and C2 == . Let M,M1, . . . ,Mk ∈
sat(φ) and assume C1[M1, . . . ,Mk] =AC M . Again
we consider two cases.
• f is not an AC symbol. Then we have
f(C11 [M1, . . . ,Mk], . . . , C
r
1 [M1, . . . ,Mk])
=AC M
For every 1 ≤ i ≤ r, let Ni def= Ci1[M1, . . . ,Mk].
Thus, each Ni is a subterm of M , so it is in
st(sat(φ)). Since each Mj is in sat(φ) and by
applying repeatedly rule 2 of Definition 2, we
get that Ni is in sat(φ). Thus there exists ζNi ∈
R(φ) such that ζNiσ =E Ni.
– From Ni == Ci1[M1, . . . ,Mk] and ap-
plying the induction hypothesis, we get
ζNiσ
′ =E Ci1[ζM1 , . . . , ζMk ]σ
′
.
– From M =AC f(N1, . . . , Nr) and ap-
plying the base case, we get ζMσ′ =E
f(ζN1 , . . . , ζNr )σ
′
.
Combining these equations, we get
(ζM =E C1[ζM1 , . . . , ζMk ])ψ
• f is an AC symbol⊕. We write C1 = C11⊕· · ·⊕
Cr1 ⊕ x1 ⊕ · · · ⊕ xp and C2 = x, and we have
C11 [M1, . . . ,Mk]⊕. . .⊕Cr1 [M1, . . . ,Mk]⊕M ′1⊕
. . . ⊕M ′p =AC M . Each Ni def= Ci1[M1, . . . ,Mk]
is a subterm of M ∈ sat(φ) thus is in sat(φ).
Again, there exists ζNi ∈ R(φ) such that
ζNiσ =E Ni.
– From Ni == Ci1[M1, . . . ,Mk] and ap-
plying the induction hypothesis, we get
ζNiσ
′ =E Ci1[ζM1 , . . . , ζMk ]σ
′
.
– From N1⊕. . .⊕Nr⊕M ′1⊕. . .⊕M ′p =AC M
and by the equation ζN1⊕· · ·⊕ζNr⊕ζM ′1⊕· · ·⊕ζM ′p =E ζM is in Eq(φ), we get (ζN1⊕· · · ⊕ ζNr ⊕ ζM ′1 ⊕ · · · ⊕ ζM ′p =E ζM )σ′.
Combining these equations, we get
(C1[ζM1 , . . . , ζMk ] =E ζM )ψ
Lemma 3. Let E be a locally stable theory. Let φ = νn˜σ
be a frame. For every context C1 such that fn(C1) ∩ n˜ =
∅, for every Mi ∈ sat(φ), for every term T such that
C1[M1, . . . ,Mk] →AC T , there exist a context C2 such
that fn(C2) ∩ n˜ = ∅, and terms M ′i ∈ sat(φ), such that
T →∗AC C2[M ′1, . . . ,M ′l ] and for every frame ψ |= Eq(φ),
(C1[ζM1 , . . . , ζMk ] =E C2[ζM ′1 , . . . , ζM ′l ])ψ.
An easy case is when the reduction occurs inside one
of the Mi: Mi →AC M ′i . By definition of sat(φ) (since
E is locally stable), we know that there exists C such that
|C| ≤ c2E , fn(C) ∩ n˜ = ∅, and M ′i →∗AC C[M ′′1 , . . . ,M ′′l ]
where M ′′i ∈ sat(φ). In addition, the equation ζMi =
C[ζM ′′1 , . . . , ζM ′′l ] is in Eq(φ) (since |C| ≤ c2E), thus
(ζMi =E C[ζM ′′1 , . . . , ζM ′′l ])ψ. We obtain that
T == C1[M1, . . . ,Mi−1,M ′i ,Mi+1, . . . ,Mk]
→∗AC C1[M1, . . . , C[M ′′1 , . . . ,M ′′l ], . . . ,Mk]
and ⎛
⎝ (C1[ζM1 , . . . , ζMk ]=E
C1[ζM1 , . . . , C[ζM ′′1 , . . . , ζM ′′l ], . . . , ζMk ]
⎞
⎠ψ
We now consider the case where the reduction does not
occur inside the terms Mi. We can assume that
for every path p of C1,
if C1|p[M1, . . . ,Mk] is in sat(φ), (*)
then C1|p is the single hole context.
Indeed, if there exists a path p of C1 such that T1
def=
C1|p[M1, . . . ,Mk] ∈ sat(φ) and C1|p is not a hole
then C1[M1, . . . ,Mk] == C ′1[T1,M1, . . . ,Mk] where
T1,Mi ∈ sat(φ) and C ′1 is a context strictly smaller than
C1. In that case, we consider C′1[T1,M1, . . . ,Mk] instead
of C1[M1, . . . ,Mk] and we apply the transformation again
until property (*) holds.
We have
C1[M1, . . . ,Mk] ==
C3[M ′′ ⊕M ′ ⊕
r⊕
i=1
C ′i[M1, . . . ,Mk],M1, . . . ,Mk]
where M ′ = M ′1 ⊕ . . .⊕M ′l , M ′′ = M ′′1 ⊕ . . .⊕M ′′l with
M ′i ⊕M ′′i ∈ sat(φ), the head symbol of the C′i is not ⊕, C ′i
is not a single hole, and T1
def= M ′⊕⊕ri=1 C ′i[M1, . . . ,Mk]
is an instance M0θ (modulo AC) of the left-hand side of
some rule M0 → N0 of the rewriting system associated
with E.
For each variable x of M0, we consider the occurrences
of xθ in T1.
1. Either xθ occurs as a subterm of one of the Mi or M ′i ;
2. or there exists a subterm of T1, of the form N1⊕ . . .⊕
Np with Ni =AC N ′i⊕N ′′i ∈ sat(φ) for some N ′′i such
that xθ =AC N ′1 ⊕ . . .⊕N ′p;
3. or there exists a subterm of T1, of the form N1 ⊕
. . . ⊕ Np ⊕
⊕r′
i=1 C
′′
i [M1, . . . ,Mk] (modulo AC),
where the head symbols of the C′′i are not ⊕ and the
C ′′i are not a hole, and xθ =AC N ′1 ⊕ . . . ⊕ N ′p ⊕⊕r′
i=1 C
′′
i [M1, . . . ,Mk] with Ni =AC N ′i ⊕ N ′′i ∈
sat(φ) for some N ′′i , thus the N ′i are subterms of terms
of sat(φ).
Note that case 3 cannot occur simultaneously with case 1
or case 2 for the same variable x. Indeed, if case 3 oc-
curs simultaneously with case 1 or case 2, we have that
some C ′′i [M1, . . . ,Mk] is a subterm of some Mi or M ′i ,
thus applying recursively rule 2 of Definition 2, we get that
C ′′i [M1, . . . ,Mk] ∈ sat(φ), which contradicts property (*)
(since C ′′i is not a hole).
Without loss of generality, we assume that the variables
of M0 are x1, . . . , xk1 , y1, . . . , yk2 where the variables xi
are in case 1 or case 2 and the variables yj are in case 3. For
each variable yj , we consider the l occurrences of yj in T1.
yjθ =AC N11 ⊕ . . .⊕N1k1 ⊕
⊕r1
i=1 C
1
i [M1, . . . ,Mk]
.
.
.
=AC N l1 ⊕ . . .⊕N lkl ⊕
⊕rl
i=1 C
l
i [M1, . . . ,Mk]
where the N ji are subterms of terms in sat(φ) and the head
symbols of the Cji are not ⊕.
We write cl(Cji [M1, . . . ,Mk]) for the class of C
j
i [M1,
. . . ,Mk] modulo AC, and we associate a fresh name symbol
acl(Cji [M1,...,Mk])
with the class of each Cji [M1, . . . ,Mk].
Therefore, a
cl(C
j1
i1
[M1,...,Mk])
and a
cl(C
j2
i2
[M1,...,Mk])
are the
same symbol whenever Cj1i1 [M1, . . . ,Mk] =AC C
j2
i2
[M1,
. . . ,Mk]. In each equation
N j11 ⊕ . . .⊕N j1kj1 ⊕
rj1⊕
i=1
Cj1i [M1, . . . ,Mk]
=AC N
j2
1 ⊕ . . .⊕N j2kj2 ⊕
rj2⊕
i=1
Cj2i [M1, . . . ,Mk]
every Cj1i [M1, . . . ,Mk] must be equal modulo AC to one
of the Cj2i [M1, . . . ,Mk]. Indeed, if C
j1
i [M1, . . . ,Mk] were
equal to some subterm of the N j2i , C
j1
i [M1, . . . ,Mk] would
be a term of sat(φ), contradicting property (*). Thus, we
obtain that
N11 ⊕ . . .⊕N1k1 ⊕
⊕r1
i=1 aC1i [M1,...,Mk]
.
.
.
=AC N l1 ⊕ . . .⊕N lkl ⊕
⊕rl
i=1 aCli [M1,...,Mk]
def= Tyj
We consider the substitution θ′ such that xiθ′ = xiθ
and yjθ′ = Tyj . We define θ′′(acl(Cji [M1,...,Mk])) =
Cji [M1, . . . ,Mk].
We also consider the term T2 that is obtained from⊕r
i=1 C
′
i[M1, . . . ,Mk] by replacing each C
j
i [M1, . . . ,Mk]
with acl(Cji [M1,...,Mk]).
We have T2 == C2[S1, . . . , Sk] for some context C2
such that | ⊕C2| ≤ |M0| ≤ cE and Si ∈ sum⊕(sat(φ), n˜).
Since M ′′ ⊕ T2 is an instance M0θ′ of M0 we have M ′ ⊕
M ′′ ⊕ T2 →AC M ′ ⊕ N0θ′. Applying condition 3 of Def-
inition 2, there exist S′i ∈ sum⊕(sat(φ), n˜), there exists a
context C ′, such that |C ′| ≤ c2E , fn(C ′) ∩ n˜ = ∅, and
M ′ ⊕N0θ′ →∗AC C ′[S′1, . . . , S′l ]. Applying the substitution
θ′′, we deduce that M ′ ⊕ N0θ =AC M ′ ⊕ N0θ′θ′′ →∗AC
C ′[S′1, . . . , S
′
l ]θ
′′
. Note that C ′[S′1, . . . , S′l ]θ′′ is a context
of terms of sat(φ):
C ′[S′1, . . . , S
′
l ]θ
′′ = C ′′[M1, . . . ,Mk, S′1, . . . , S
′
l ]
To each sum S = α1M1 ⊕ · · · ⊕ αnMn ⊕ β1n1 ⊕ · · · ⊕
βknk in sum⊕(sat(φ), n˜), we associate the term ζS = α1 ·⊕
ζM1 ⊕ · · · ⊕ αn ·⊕ ζMn ⊕ β1 ·⊕ n1 ⊕ · · · ⊕ βk ·⊕ nk.
Now, since the equation ζM ′⊕M ′′ ⊕ C2[ζS1 , . . . , ζSk ] =
C ′[ζS′1 , . . . , ζS′l ] is in Eq(φ), we deduce
(ζM ′⊕M ′′ ⊕ C2[ζS1 , . . . , ζSk ] = C ′[ζS′1 , . . . , ζS′l ])ψ
If a
cl(C
j1
i1
[M1,...,Mk])
= a
cl(C
j2
i2
[M1,...,Mk])
, we have
Cj1i1 [M1, . . . ,Mk] =AC C
j2
i2
[M1, . . . ,Mk]
thus (by Lemma 2) we have
(Cj1i1 [ζM1 , . . . , ζMk ] = C
j2
i2
[ζM1 , . . . , ζMk ])ψ
So we can reconstruct M ′′ ⊕ T1 and obtain
ζM ′⊕M ′′ ⊕
r⊕
i=1
C ′i[ζM1 , . . . , ζMk ]
= C ′′[ζM1 , . . . , ζMk , ζS′1 , . . . , ζS′l ])ψ
which allows us to conclude the proof of Lemma 3.
